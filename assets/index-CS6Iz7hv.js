import{g as Pn,r as Nn,a as $t}from"./ton-DQFo5Z1K.js";import{B as sr}from"./vendor-C-nSUQJB.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))u(n);new MutationObserver(n=>{for(const a of n)if(a.type==="childList")for(const s of a.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&u(s)}).observe(document,{childList:!0,subtree:!0});function r(n){const a={};return n.integrity&&(a.integrity=n.integrity),n.referrerPolicy&&(a.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?a.credentials="include":n.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function u(n){if(n.ep)return;n.ep=!0;const a=r(n);fetch(n.href,a)}})();var vt={},Ke={},xe={},$e={},ye={},xt={},Ve={},Et={exports:{}};function On(t){return t==="description"||t==="string"||t==="code"}function De(t,e,r){if(!On(r))throw new Error("invalid Failure type: "+r);this.pexpr=t,this.text=e,this.type=r,this.fluffy=!1}De.prototype.getPExpr=function(){return this.pexpr};De.prototype.getText=function(){return this.text};De.prototype.getType=function(){return this.type};De.prototype.isDescription=function(){return this.type==="description"};De.prototype.isStringTerminal=function(){return this.type==="string"};De.prototype.isCode=function(){return this.type==="code"};De.prototype.isFluffy=function(){return this.fluffy};De.prototype.makeFluffy=function(){this.fluffy=!0};De.prototype.clearFluffy=function(){this.fluffy=!1};De.prototype.subsumes=function(t){return this.getText()===t.getText()&&this.type===t.type&&(!this.isFluffy()||this.isFluffy()&&t.isFluffy())};De.prototype.toString=function(){return this.type==="string"?JSON.stringify(this.getText()):this.getText()};De.prototype.clone=function(){const t=new De(this.pexpr,this.text,this.type);return this.isFluffy()&&t.makeFluffy(),t};De.prototype.toKey=function(){return this.toString()+"#"+this.type};var tn=De,H={};(function(t){t.abstract=function(r){const u=r||"";return function(){throw new Error("this method "+u+" is abstract! (it has no implementation in class "+this.constructor.name+")")}},t.assert=function(r,u){if(!r)throw new Error(u||"Assertion failed")},t.defineLazyProperty=function(r,u,n){let a;Object.defineProperty(r,u,{get(){return a||(a=n.call(this)),a}})},t.clone=function(r){return r&&Object.assign({},r)},t.repeatFn=function(r,u){const n=[];for(;u-- >0;)n.push(r());return n},t.repeatStr=function(r,u){return new Array(u+1).join(r)},t.repeat=function(r,u){return t.repeatFn(()=>r,u)},t.getDuplicates=function(r){const u=[];for(let n=0;n<r.length;n++){const a=r[n];r.lastIndexOf(a)!==n&&u.indexOf(a)<0&&u.push(a)}return u},t.copyWithoutDuplicates=function(r){const u=[];return r.forEach(n=>{u.indexOf(n)<0&&u.push(n)}),u},t.isSyntactic=function(r){const u=r[0];return u===u.toUpperCase()},t.isLexical=function(r){return!t.isSyntactic(r)},t.padLeft=function(r,u,n){const a=n||" ";return r.length<u?t.repeatStr(a,u-r.length)+r:r},t.StringBuffer=function(){this.strings=[]},t.StringBuffer.prototype.append=function(r){this.strings.push(r)},t.StringBuffer.prototype.contents=function(){return this.strings.join("")};const e=r=>String.fromCodePoint(parseInt(r,16));t.unescapeCodePoint=function(r){if(r.charAt(0)==="\\")switch(r.charAt(1)){case"b":return"\b";case"f":return"\f";case"n":return`
`;case"r":return"\r";case"t":return"	";case"v":return"\v";case"x":return e(r.slice(2,4));case"u":return r.charAt(2)==="{"?e(r.slice(3,-1)):e(r.slice(2,6));default:return r.charAt(1)}else return r},t.unexpectedObjToString=function(r){if(r==null)return String(r);const u=Object.prototype.toString.call(r);try{let n;return r.constructor&&r.constructor.name?n=r.constructor.name:u.indexOf("[object ")===0?n=u.slice(8,-1):n=typeof r,n+": "+JSON.stringify(String(r))}catch{return u}}})(H);const or=H;class Vt{constructor(e){this.matchLength=e}get ctorName(){throw new Error("subclass responsibility")}numChildren(){return this.children?this.children.length:0}childAt(e){if(this.children)return this.children[e]}indexOfChild(e){return this.children.indexOf(e)}hasChildren(){return this.numChildren()>0}hasNoChildren(){return!this.hasChildren()}onlyChild(){if(this.numChildren()!==1)throw new Error("cannot get only child of a node of type "+this.ctorName+" (it has "+this.numChildren()+" children)");return this.firstChild()}firstChild(){if(this.hasNoChildren())throw new Error("cannot get first child of a "+this.ctorName+" node, which has no children");return this.childAt(0)}lastChild(){if(this.hasNoChildren())throw new Error("cannot get last child of a "+this.ctorName+" node, which has no children");return this.childAt(this.numChildren()-1)}childBefore(e){const r=this.indexOfChild(e);if(r<0)throw new Error("Node.childBefore() called w/ an argument that is not a child");if(r===0)throw new Error("cannot get child before first child");return this.childAt(r-1)}childAfter(e){const r=this.indexOfChild(e);if(r<0)throw new Error("Node.childAfter() called w/ an argument that is not a child");if(r===this.numChildren()-1)throw new Error("cannot get child after last child");return this.childAt(r+1)}isTerminal(){return!1}isNonterminal(){return!1}isIteration(){return!1}isOptional(){return!1}}class kn extends Vt{get ctorName(){return"_terminal"}isTerminal(){return!0}get primitiveValue(){throw new Error("The `primitiveValue` property was removed in Ohm v17.")}}class Mn extends Vt{constructor(e,r,u,n){super(n),this.ruleName=e,this.children=r,this.childOffsets=u}get ctorName(){return this.ruleName}isNonterminal(){return!0}isLexical(){return or.isLexical(this.ctorName)}isSyntactic(){return or.isSyntactic(this.ctorName)}}class Rn extends Vt{constructor(e,r,u,n){super(u),this.children=e,this.childOffsets=r,this.optional=n}get ctorName(){return"_iter"}isIteration(){return!0}isOptional(){return this.optional}}var jt={TerminalNode:kn,NonterminalNode:Mn,IterationNode:Rn},G={},$n={Lu:/[A-Z\xC0-\xD6\xD8-\xDE\u0100\u0102\u0104\u0106\u0108\u010A\u010C\u010E\u0110\u0112\u0114\u0116\u0118\u011A\u011C\u011E\u0120\u0122\u0124\u0126\u0128\u012A\u012C\u012E\u0130\u0132\u0134\u0136\u0139\u013B\u013D\u013F\u0141\u0143\u0145\u0147\u014A\u014C\u014E\u0150\u0152\u0154\u0156\u0158\u015A\u015C\u015E\u0160\u0162\u0164\u0166\u0168\u016A\u016C\u016E\u0170\u0172\u0174\u0176\u0178\u0179\u017B\u017D\u0181\u0182\u0184\u0186\u0187\u0189-\u018B\u018E-\u0191\u0193\u0194\u0196-\u0198\u019C\u019D\u019F\u01A0\u01A2\u01A4\u01A6\u01A7\u01A9\u01AC\u01AE\u01AF\u01B1-\u01B3\u01B5\u01B7\u01B8\u01BC\u01C4\u01C7\u01CA\u01CD\u01CF\u01D1\u01D3\u01D5\u01D7\u01D9\u01DB\u01DE\u01E0\u01E2\u01E4\u01E6\u01E8\u01EA\u01EC\u01EE\u01F1\u01F4\u01F6-\u01F8\u01FA\u01FC\u01FE\u0200\u0202\u0204\u0206\u0208\u020A\u020C\u020E\u0210\u0212\u0214\u0216\u0218\u021A\u021C\u021E\u0220\u0222\u0224\u0226\u0228\u022A\u022C\u022E\u0230\u0232\u023A\u023B\u023D\u023E\u0241\u0243-\u0246\u0248\u024A\u024C\u024E\u0370\u0372\u0376\u037F\u0386\u0388-\u038A\u038C\u038E\u038F\u0391-\u03A1\u03A3-\u03AB\u03CF\u03D2-\u03D4\u03D8\u03DA\u03DC\u03DE\u03E0\u03E2\u03E4\u03E6\u03E8\u03EA\u03EC\u03EE\u03F4\u03F7\u03F9\u03FA\u03FD-\u042F\u0460\u0462\u0464\u0466\u0468\u046A\u046C\u046E\u0470\u0472\u0474\u0476\u0478\u047A\u047C\u047E\u0480\u048A\u048C\u048E\u0490\u0492\u0494\u0496\u0498\u049A\u049C\u049E\u04A0\u04A2\u04A4\u04A6\u04A8\u04AA\u04AC\u04AE\u04B0\u04B2\u04B4\u04B6\u04B8\u04BA\u04BC\u04BE\u04C0\u04C1\u04C3\u04C5\u04C7\u04C9\u04CB\u04CD\u04D0\u04D2\u04D4\u04D6\u04D8\u04DA\u04DC\u04DE\u04E0\u04E2\u04E4\u04E6\u04E8\u04EA\u04EC\u04EE\u04F0\u04F2\u04F4\u04F6\u04F8\u04FA\u04FC\u04FE\u0500\u0502\u0504\u0506\u0508\u050A\u050C\u050E\u0510\u0512\u0514\u0516\u0518\u051A\u051C\u051E\u0520\u0522\u0524\u0526\u0528\u052A\u052C\u052E\u0531-\u0556\u10A0-\u10C5\u10C7\u10CD\u13A0-\u13F5\u1E00\u1E02\u1E04\u1E06\u1E08\u1E0A\u1E0C\u1E0E\u1E10\u1E12\u1E14\u1E16\u1E18\u1E1A\u1E1C\u1E1E\u1E20\u1E22\u1E24\u1E26\u1E28\u1E2A\u1E2C\u1E2E\u1E30\u1E32\u1E34\u1E36\u1E38\u1E3A\u1E3C\u1E3E\u1E40\u1E42\u1E44\u1E46\u1E48\u1E4A\u1E4C\u1E4E\u1E50\u1E52\u1E54\u1E56\u1E58\u1E5A\u1E5C\u1E5E\u1E60\u1E62\u1E64\u1E66\u1E68\u1E6A\u1E6C\u1E6E\u1E70\u1E72\u1E74\u1E76\u1E78\u1E7A\u1E7C\u1E7E\u1E80\u1E82\u1E84\u1E86\u1E88\u1E8A\u1E8C\u1E8E\u1E90\u1E92\u1E94\u1E9E\u1EA0\u1EA2\u1EA4\u1EA6\u1EA8\u1EAA\u1EAC\u1EAE\u1EB0\u1EB2\u1EB4\u1EB6\u1EB8\u1EBA\u1EBC\u1EBE\u1EC0\u1EC2\u1EC4\u1EC6\u1EC8\u1ECA\u1ECC\u1ECE\u1ED0\u1ED2\u1ED4\u1ED6\u1ED8\u1EDA\u1EDC\u1EDE\u1EE0\u1EE2\u1EE4\u1EE6\u1EE8\u1EEA\u1EEC\u1EEE\u1EF0\u1EF2\u1EF4\u1EF6\u1EF8\u1EFA\u1EFC\u1EFE\u1F08-\u1F0F\u1F18-\u1F1D\u1F28-\u1F2F\u1F38-\u1F3F\u1F48-\u1F4D\u1F59\u1F5B\u1F5D\u1F5F\u1F68-\u1F6F\u1FB8-\u1FBB\u1FC8-\u1FCB\u1FD8-\u1FDB\u1FE8-\u1FEC\u1FF8-\u1FFB\u2102\u2107\u210B-\u210D\u2110-\u2112\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u2130-\u2133\u213E\u213F\u2145\u2183\u2C00-\u2C2E\u2C60\u2C62-\u2C64\u2C67\u2C69\u2C6B\u2C6D-\u2C70\u2C72\u2C75\u2C7E-\u2C80\u2C82\u2C84\u2C86\u2C88\u2C8A\u2C8C\u2C8E\u2C90\u2C92\u2C94\u2C96\u2C98\u2C9A\u2C9C\u2C9E\u2CA0\u2CA2\u2CA4\u2CA6\u2CA8\u2CAA\u2CAC\u2CAE\u2CB0\u2CB2\u2CB4\u2CB6\u2CB8\u2CBA\u2CBC\u2CBE\u2CC0\u2CC2\u2CC4\u2CC6\u2CC8\u2CCA\u2CCC\u2CCE\u2CD0\u2CD2\u2CD4\u2CD6\u2CD8\u2CDA\u2CDC\u2CDE\u2CE0\u2CE2\u2CEB\u2CED\u2CF2\uA640\uA642\uA644\uA646\uA648\uA64A\uA64C\uA64E\uA650\uA652\uA654\uA656\uA658\uA65A\uA65C\uA65E\uA660\uA662\uA664\uA666\uA668\uA66A\uA66C\uA680\uA682\uA684\uA686\uA688\uA68A\uA68C\uA68E\uA690\uA692\uA694\uA696\uA698\uA69A\uA722\uA724\uA726\uA728\uA72A\uA72C\uA72E\uA732\uA734\uA736\uA738\uA73A\uA73C\uA73E\uA740\uA742\uA744\uA746\uA748\uA74A\uA74C\uA74E\uA750\uA752\uA754\uA756\uA758\uA75A\uA75C\uA75E\uA760\uA762\uA764\uA766\uA768\uA76A\uA76C\uA76E\uA779\uA77B\uA77D\uA77E\uA780\uA782\uA784\uA786\uA78B\uA78D\uA790\uA792\uA796\uA798\uA79A\uA79C\uA79E\uA7A0\uA7A2\uA7A4\uA7A6\uA7A8\uA7AA-\uA7AE\uA7B0-\uA7B4\uA7B6\uFF21-\uFF3A]|\uD801[\uDC00-\uDC27\uDCB0-\uDCD3]|\uD803[\uDC80-\uDCB2]|\uD806[\uDCA0-\uDCBF]|\uD835[\uDC00-\uDC19\uDC34-\uDC4D\uDC68-\uDC81\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB5\uDCD0-\uDCE9\uDD04\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD38\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD6C-\uDD85\uDDA0-\uDDB9\uDDD4-\uDDED\uDE08-\uDE21\uDE3C-\uDE55\uDE70-\uDE89\uDEA8-\uDEC0\uDEE2-\uDEFA\uDF1C-\uDF34\uDF56-\uDF6E\uDF90-\uDFA8\uDFCA]|\uD83A[\uDD00-\uDD21]/,Ll:/[a-z\xB5\xDF-\xF6\xF8-\xFF\u0101\u0103\u0105\u0107\u0109\u010B\u010D\u010F\u0111\u0113\u0115\u0117\u0119\u011B\u011D\u011F\u0121\u0123\u0125\u0127\u0129\u012B\u012D\u012F\u0131\u0133\u0135\u0137\u0138\u013A\u013C\u013E\u0140\u0142\u0144\u0146\u0148\u0149\u014B\u014D\u014F\u0151\u0153\u0155\u0157\u0159\u015B\u015D\u015F\u0161\u0163\u0165\u0167\u0169\u016B\u016D\u016F\u0171\u0173\u0175\u0177\u017A\u017C\u017E-\u0180\u0183\u0185\u0188\u018C\u018D\u0192\u0195\u0199-\u019B\u019E\u01A1\u01A3\u01A5\u01A8\u01AA\u01AB\u01AD\u01B0\u01B4\u01B6\u01B9\u01BA\u01BD-\u01BF\u01C6\u01C9\u01CC\u01CE\u01D0\u01D2\u01D4\u01D6\u01D8\u01DA\u01DC\u01DD\u01DF\u01E1\u01E3\u01E5\u01E7\u01E9\u01EB\u01ED\u01EF\u01F0\u01F3\u01F5\u01F9\u01FB\u01FD\u01FF\u0201\u0203\u0205\u0207\u0209\u020B\u020D\u020F\u0211\u0213\u0215\u0217\u0219\u021B\u021D\u021F\u0221\u0223\u0225\u0227\u0229\u022B\u022D\u022F\u0231\u0233-\u0239\u023C\u023F\u0240\u0242\u0247\u0249\u024B\u024D\u024F-\u0293\u0295-\u02AF\u0371\u0373\u0377\u037B-\u037D\u0390\u03AC-\u03CE\u03D0\u03D1\u03D5-\u03D7\u03D9\u03DB\u03DD\u03DF\u03E1\u03E3\u03E5\u03E7\u03E9\u03EB\u03ED\u03EF-\u03F3\u03F5\u03F8\u03FB\u03FC\u0430-\u045F\u0461\u0463\u0465\u0467\u0469\u046B\u046D\u046F\u0471\u0473\u0475\u0477\u0479\u047B\u047D\u047F\u0481\u048B\u048D\u048F\u0491\u0493\u0495\u0497\u0499\u049B\u049D\u049F\u04A1\u04A3\u04A5\u04A7\u04A9\u04AB\u04AD\u04AF\u04B1\u04B3\u04B5\u04B7\u04B9\u04BB\u04BD\u04BF\u04C2\u04C4\u04C6\u04C8\u04CA\u04CC\u04CE\u04CF\u04D1\u04D3\u04D5\u04D7\u04D9\u04DB\u04DD\u04DF\u04E1\u04E3\u04E5\u04E7\u04E9\u04EB\u04ED\u04EF\u04F1\u04F3\u04F5\u04F7\u04F9\u04FB\u04FD\u04FF\u0501\u0503\u0505\u0507\u0509\u050B\u050D\u050F\u0511\u0513\u0515\u0517\u0519\u051B\u051D\u051F\u0521\u0523\u0525\u0527\u0529\u052B\u052D\u052F\u0561-\u0587\u13F8-\u13FD\u1C80-\u1C88\u1D00-\u1D2B\u1D6B-\u1D77\u1D79-\u1D9A\u1E01\u1E03\u1E05\u1E07\u1E09\u1E0B\u1E0D\u1E0F\u1E11\u1E13\u1E15\u1E17\u1E19\u1E1B\u1E1D\u1E1F\u1E21\u1E23\u1E25\u1E27\u1E29\u1E2B\u1E2D\u1E2F\u1E31\u1E33\u1E35\u1E37\u1E39\u1E3B\u1E3D\u1E3F\u1E41\u1E43\u1E45\u1E47\u1E49\u1E4B\u1E4D\u1E4F\u1E51\u1E53\u1E55\u1E57\u1E59\u1E5B\u1E5D\u1E5F\u1E61\u1E63\u1E65\u1E67\u1E69\u1E6B\u1E6D\u1E6F\u1E71\u1E73\u1E75\u1E77\u1E79\u1E7B\u1E7D\u1E7F\u1E81\u1E83\u1E85\u1E87\u1E89\u1E8B\u1E8D\u1E8F\u1E91\u1E93\u1E95-\u1E9D\u1E9F\u1EA1\u1EA3\u1EA5\u1EA7\u1EA9\u1EAB\u1EAD\u1EAF\u1EB1\u1EB3\u1EB5\u1EB7\u1EB9\u1EBB\u1EBD\u1EBF\u1EC1\u1EC3\u1EC5\u1EC7\u1EC9\u1ECB\u1ECD\u1ECF\u1ED1\u1ED3\u1ED5\u1ED7\u1ED9\u1EDB\u1EDD\u1EDF\u1EE1\u1EE3\u1EE5\u1EE7\u1EE9\u1EEB\u1EED\u1EEF\u1EF1\u1EF3\u1EF5\u1EF7\u1EF9\u1EFB\u1EFD\u1EFF-\u1F07\u1F10-\u1F15\u1F20-\u1F27\u1F30-\u1F37\u1F40-\u1F45\u1F50-\u1F57\u1F60-\u1F67\u1F70-\u1F7D\u1F80-\u1F87\u1F90-\u1F97\u1FA0-\u1FA7\u1FB0-\u1FB4\u1FB6\u1FB7\u1FBE\u1FC2-\u1FC4\u1FC6\u1FC7\u1FD0-\u1FD3\u1FD6\u1FD7\u1FE0-\u1FE7\u1FF2-\u1FF4\u1FF6\u1FF7\u210A\u210E\u210F\u2113\u212F\u2134\u2139\u213C\u213D\u2146-\u2149\u214E\u2184\u2C30-\u2C5E\u2C61\u2C65\u2C66\u2C68\u2C6A\u2C6C\u2C71\u2C73\u2C74\u2C76-\u2C7B\u2C81\u2C83\u2C85\u2C87\u2C89\u2C8B\u2C8D\u2C8F\u2C91\u2C93\u2C95\u2C97\u2C99\u2C9B\u2C9D\u2C9F\u2CA1\u2CA3\u2CA5\u2CA7\u2CA9\u2CAB\u2CAD\u2CAF\u2CB1\u2CB3\u2CB5\u2CB7\u2CB9\u2CBB\u2CBD\u2CBF\u2CC1\u2CC3\u2CC5\u2CC7\u2CC9\u2CCB\u2CCD\u2CCF\u2CD1\u2CD3\u2CD5\u2CD7\u2CD9\u2CDB\u2CDD\u2CDF\u2CE1\u2CE3\u2CE4\u2CEC\u2CEE\u2CF3\u2D00-\u2D25\u2D27\u2D2D\uA641\uA643\uA645\uA647\uA649\uA64B\uA64D\uA64F\uA651\uA653\uA655\uA657\uA659\uA65B\uA65D\uA65F\uA661\uA663\uA665\uA667\uA669\uA66B\uA66D\uA681\uA683\uA685\uA687\uA689\uA68B\uA68D\uA68F\uA691\uA693\uA695\uA697\uA699\uA69B\uA723\uA725\uA727\uA729\uA72B\uA72D\uA72F-\uA731\uA733\uA735\uA737\uA739\uA73B\uA73D\uA73F\uA741\uA743\uA745\uA747\uA749\uA74B\uA74D\uA74F\uA751\uA753\uA755\uA757\uA759\uA75B\uA75D\uA75F\uA761\uA763\uA765\uA767\uA769\uA76B\uA76D\uA76F\uA771-\uA778\uA77A\uA77C\uA77F\uA781\uA783\uA785\uA787\uA78C\uA78E\uA791\uA793-\uA795\uA797\uA799\uA79B\uA79D\uA79F\uA7A1\uA7A3\uA7A5\uA7A7\uA7A9\uA7B5\uA7B7\uA7FA\uAB30-\uAB5A\uAB60-\uAB65\uAB70-\uABBF\uFB00-\uFB06\uFB13-\uFB17\uFF41-\uFF5A]|\uD801[\uDC28-\uDC4F\uDCD8-\uDCFB]|\uD803[\uDCC0-\uDCF2]|\uD806[\uDCC0-\uDCDF]|\uD835[\uDC1A-\uDC33\uDC4E-\uDC54\uDC56-\uDC67\uDC82-\uDC9B\uDCB6-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDCCF\uDCEA-\uDD03\uDD1E-\uDD37\uDD52-\uDD6B\uDD86-\uDD9F\uDDBA-\uDDD3\uDDEE-\uDE07\uDE22-\uDE3B\uDE56-\uDE6F\uDE8A-\uDEA5\uDEC2-\uDEDA\uDEDC-\uDEE1\uDEFC-\uDF14\uDF16-\uDF1B\uDF36-\uDF4E\uDF50-\uDF55\uDF70-\uDF88\uDF8A-\uDF8F\uDFAA-\uDFC2\uDFC4-\uDFC9\uDFCB]|\uD83A[\uDD22-\uDD43]/,Lt:/[\u01C5\u01C8\u01CB\u01F2\u1F88-\u1F8F\u1F98-\u1F9F\u1FA8-\u1FAF\u1FBC\u1FCC\u1FFC]/,Lm:/[\u02B0-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0374\u037A\u0559\u0640\u06E5\u06E6\u07F4\u07F5\u07FA\u081A\u0824\u0828\u0971\u0E46\u0EC6\u10FC\u17D7\u1843\u1AA7\u1C78-\u1C7D\u1D2C-\u1D6A\u1D78\u1D9B-\u1DBF\u2071\u207F\u2090-\u209C\u2C7C\u2C7D\u2D6F\u2E2F\u3005\u3031-\u3035\u303B\u309D\u309E\u30FC-\u30FE\uA015\uA4F8-\uA4FD\uA60C\uA67F\uA69C\uA69D\uA717-\uA71F\uA770\uA788\uA7F8\uA7F9\uA9CF\uA9E6\uAA70\uAADD\uAAF3\uAAF4\uAB5C-\uAB5F\uFF70\uFF9E\uFF9F]|\uD81A[\uDF40-\uDF43]|\uD81B[\uDF93-\uDF9F\uDFE0]/,Lo:/[\xAA\xBA\u01BB\u01C0-\u01C3\u0294\u05D0-\u05EA\u05F0-\u05F2\u0620-\u063F\u0641-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u0800-\u0815\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0972-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E45\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10D0-\u10FA\u10FD-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17DC\u1820-\u1842\u1844-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C77\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u2135-\u2138\u2D30-\u2D67\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3006\u303C\u3041-\u3096\u309F\u30A1-\u30FA\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA014\uA016-\uA48C\uA4D0-\uA4F7\uA500-\uA60B\uA610-\uA61F\uA62A\uA62B\uA66E\uA6A0-\uA6E5\uA78F\uA7F7\uA7FB-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9E0-\uA9E4\uA9E7-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA6F\uAA71-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB\uAADC\uAAE0-\uAAEA\uAAF2\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF66-\uFF6F\uFF71-\uFF9D\uFFA0-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC50-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/,Nl:/[\u16EE-\u16F0\u2160-\u2182\u2185-\u2188\u3007\u3021-\u3029\u3038-\u303A\uA6E6-\uA6EF]|\uD800[\uDD40-\uDD74\uDF41\uDF4A\uDFD1-\uDFD5]|\uD809[\uDC00-\uDC6E]/,Nd:/[0-9\u0660-\u0669\u06F0-\u06F9\u07C0-\u07C9\u0966-\u096F\u09E6-\u09EF\u0A66-\u0A6F\u0AE6-\u0AEF\u0B66-\u0B6F\u0BE6-\u0BEF\u0C66-\u0C6F\u0CE6-\u0CEF\u0D66-\u0D6F\u0DE6-\u0DEF\u0E50-\u0E59\u0ED0-\u0ED9\u0F20-\u0F29\u1040-\u1049\u1090-\u1099\u17E0-\u17E9\u1810-\u1819\u1946-\u194F\u19D0-\u19D9\u1A80-\u1A89\u1A90-\u1A99\u1B50-\u1B59\u1BB0-\u1BB9\u1C40-\u1C49\u1C50-\u1C59\uA620-\uA629\uA8D0-\uA8D9\uA900-\uA909\uA9D0-\uA9D9\uA9F0-\uA9F9\uAA50-\uAA59\uABF0-\uABF9\uFF10-\uFF19]|\uD801[\uDCA0-\uDCA9]|\uD804[\uDC66-\uDC6F\uDCF0-\uDCF9\uDD36-\uDD3F\uDDD0-\uDDD9\uDEF0-\uDEF9]|[\uD805\uD807][\uDC50-\uDC59\uDCD0-\uDCD9\uDE50-\uDE59\uDEC0-\uDEC9\uDF30-\uDF39]|\uD806[\uDCE0-\uDCE9]|\uD81A[\uDE60-\uDE69\uDF50-\uDF59]|\uD835[\uDFCE-\uDFFF]|\uD83A[\uDD50-\uDD59]/,Mn:/[\u0300-\u036F\u0483-\u0487\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08D4-\u08E1\u08E3-\u0902\u093A\u093C\u0941-\u0948\u094D\u0951-\u0957\u0962\u0963\u0981\u09BC\u09C1-\u09C4\u09CD\u09E2\u09E3\u0A01\u0A02\u0A3C\u0A41\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81\u0A82\u0ABC\u0AC1-\u0AC5\u0AC7\u0AC8\u0ACD\u0AE2\u0AE3\u0B01\u0B3C\u0B3F\u0B41-\u0B44\u0B4D\u0B56\u0B62\u0B63\u0B82\u0BC0\u0BCD\u0C00\u0C3E-\u0C40\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81\u0CBC\u0CBF\u0CC6\u0CCC\u0CCD\u0CE2\u0CE3\u0D01\u0D41-\u0D44\u0D4D\u0D62\u0D63\u0DCA\u0DD2-\u0DD4\u0DD6\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F71-\u0F7E\u0F80-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102D-\u1030\u1032-\u1037\u1039\u103A\u103D\u103E\u1058\u1059\u105E-\u1060\u1071-\u1074\u1082\u1085\u1086\u108D\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4\u17B5\u17B7-\u17BD\u17C6\u17C9-\u17D3\u17DD\u180B-\u180D\u1885\u1886\u18A9\u1920-\u1922\u1927\u1928\u1932\u1939-\u193B\u1A17\u1A18\u1A1B\u1A56\u1A58-\u1A5E\u1A60\u1A62\u1A65-\u1A6C\u1A73-\u1A7C\u1A7F\u1AB0-\u1ABD\u1B00-\u1B03\u1B34\u1B36-\u1B3A\u1B3C\u1B42\u1B6B-\u1B73\u1B80\u1B81\u1BA2-\u1BA5\u1BA8\u1BA9\u1BAB-\u1BAD\u1BE6\u1BE8\u1BE9\u1BED\u1BEF-\u1BF1\u1C2C-\u1C33\u1C36\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE0\u1CE2-\u1CE8\u1CED\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFB-\u1DFF\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302D\u3099\u309A\uA66F\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA825\uA826\uA8C4\uA8C5\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA951\uA980-\uA982\uA9B3\uA9B6-\uA9B9\uA9BC\uA9E5\uAA29-\uAA2E\uAA31\uAA32\uAA35\uAA36\uAA43\uAA4C\uAA7C\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEC\uAAED\uAAF6\uABE5\uABE8\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC01\uDC38-\uDC46\uDC7F-\uDC81\uDCB3-\uDCB6\uDCB9\uDCBA\uDD00-\uDD02\uDD27-\uDD2B\uDD2D-\uDD34\uDD73\uDD80\uDD81\uDDB6-\uDDBE\uDDCA-\uDDCC\uDE2F-\uDE31\uDE34\uDE36\uDE37\uDE3E\uDEDF\uDEE3-\uDEEA\uDF00\uDF01\uDF3C\uDF40\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC38-\uDC3F\uDC42-\uDC44\uDC46\uDCB3-\uDCB8\uDCBA\uDCBF\uDCC0\uDCC2\uDCC3\uDDB2-\uDDB5\uDDBC\uDDBD\uDDBF\uDDC0\uDDDC\uDDDD\uDE33-\uDE3A\uDE3D\uDE3F\uDE40\uDEAB\uDEAD\uDEB0-\uDEB5\uDEB7\uDF1D-\uDF1F\uDF22-\uDF25\uDF27-\uDF2B]|\uD807[\uDC30-\uDC36\uDC38-\uDC3D\uDC3F\uDC92-\uDCA7\uDCAA-\uDCB0\uDCB2\uDCB3\uDCB5\uDCB6]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD67-\uDD69\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A]|\uD83A[\uDCD0-\uDCD6\uDD44-\uDD4A]|\uDB40[\uDD00-\uDDEF]/,Mc:/[\u0903-\u0903]|[\u093E-\u0940]|[\u0949-\u094C]|[\u0982-\u0983]|[\u09BE-\u09C0]|[\u09C7-\u09C8]|[\u09CB-\u09CC]|[\u09D7-\u09D7]|[\u0A3E-\u0A40]|[\u0A83-\u0A83]|[\u0ABE-\u0AC0]|[\u0AC9-\u0AC9]|[\u0ACB-\u0ACC]|[\u0B02-\u0B03]|[\u0B3E-\u0B3E]|[\u0B40-\u0B40]|[\u0B47-\u0B48]|[\u0B4B-\u0B4C]|[\u0B57-\u0B57]|[\u0B83-\u0B83]|[\u0BBE-\u0BBF]|[\u0BC1-\u0BC2]|[\u0BC6-\u0BC8]|[\u0BCA-\u0BCC]|[\u0BD7-\u0BD7]|[\u0C01-\u0C03]|[\u0C41-\u0C44]|[\u0C82-\u0C83]|[\u0CBE-\u0CBE]|[\u0CC0-\u0CC4]|[\u0CC7-\u0CC8]|[\u0CCA-\u0CCB]|[\u0CD5-\u0CD6]|[\u0D02-\u0D03]|[\u0D3E-\u0D40]|[\u0D46-\u0D48]|[\u0D4A-\u0D4C]|[\u0D57-\u0D57]|[\u0F3E-\u0F3F]|[\u0F7F-\u0F7F]/,Pc:/[_\u203F\u2040\u2054\uFE33\uFE34\uFE4D-\uFE4F\uFF3F]/,Zs:/[ \xA0\u1680\u2000-\u200A\u202F\u205F\u3000]/,L:/[A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/,Ltmo:/[\u01C5\u01C8\u01CB\u01F2\u1F88-\u1F8F\u1F98-\u1F9F\u1FA8-\u1FAF\u1FBC\u1FCC\u1FFC]|[\u02B0-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0374\u037A\u0559\u0640\u06E5\u06E6\u07F4\u07F5\u07FA\u081A\u0824\u0828\u0971\u0E46\u0EC6\u10FC\u17D7\u1843\u1AA7\u1C78-\u1C7D\u1D2C-\u1D6A\u1D78\u1D9B-\u1DBF\u2071\u207F\u2090-\u209C\u2C7C\u2C7D\u2D6F\u2E2F\u3005\u3031-\u3035\u303B\u309D\u309E\u30FC-\u30FE\uA015\uA4F8-\uA4FD\uA60C\uA67F\uA69C\uA69D\uA717-\uA71F\uA770\uA788\uA7F8\uA7F9\uA9CF\uA9E6\uAA70\uAADD\uAAF3\uAAF4\uAB5C-\uAB5F\uFF70\uFF9E\uFF9F]|\uD81A[\uDF40-\uDF43]|\uD81B[\uDF93-\uDF9F\uDFE0]|[\xAA\xBA\u01BB\u01C0-\u01C3\u0294\u05D0-\u05EA\u05F0-\u05F2\u0620-\u063F\u0641-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u0800-\u0815\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0972-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E45\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10D0-\u10FA\u10FD-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17DC\u1820-\u1842\u1844-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C77\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u2135-\u2138\u2D30-\u2D67\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3006\u303C\u3041-\u3096\u309F\u30A1-\u30FA\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA014\uA016-\uA48C\uA4D0-\uA4F7\uA500-\uA60B\uA610-\uA61F\uA62A\uA62B\uA66E\uA6A0-\uA6E5\uA78F\uA7F7\uA7FB-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9E0-\uA9E4\uA9E7-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA6F\uAA71-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB\uAADC\uAAE0-\uAAEA\uAAF2\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF66-\uFF6F\uFF71-\uFF9D\uFFA0-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC50-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/};const Vn=$n,jn=H;class pe{constructor(){if(this.constructor===pe)throw new Error("PExpr cannot be instantiated -- it's abstract")}withSource(e){return e&&(this.source=e.trimmed()),this}}const qn=Object.create(pe.prototype),Gn=Object.create(pe.prototype);class Un extends pe{constructor(e){super(),this.obj=e}}class Hn extends pe{constructor(e,r){super(),this.from=e,this.to=r,this.matchCodePoint=e.length>1||r.length>1}}class zn extends pe{constructor(e){super(),this.index=e}}class qt extends pe{constructor(e){super(),this.terms=e}}class Xn extends qt{constructor(e,r,u){const n=e.rules[r].body;super([u,n]),this.superGrammar=e,this.name=r,this.body=u}}class Kn extends qt{constructor(e,r,u,n){const a=e.rules[r].body;super([...u,a,...n]),this.superGrammar=e,this.ruleName=r,this.expansionPos=u.length}}class Wn extends pe{constructor(e){super(),this.factors=e}}class gt extends pe{constructor(e){super(),this.expr=e}}class Ct extends gt{}class At extends gt{}class _t extends gt{}Ct.prototype.operator="*";At.prototype.operator="+";_t.prototype.operator="?";Ct.prototype.minNumMatches=0;At.prototype.minNumMatches=1;_t.prototype.minNumMatches=0;Ct.prototype.maxNumMatches=Number.POSITIVE_INFINITY;At.prototype.maxNumMatches=Number.POSITIVE_INFINITY;_t.prototype.maxNumMatches=1;class Yn extends pe{constructor(e){super(),this.expr=e}}class Zn extends pe{constructor(e){super(),this.expr=e}}class Jn extends pe{constructor(e){super(),this.expr=e}}class Qn extends pe{constructor(e,r=[]){super(),this.ruleName=e,this.args=r}isSyntactic(){return jn.isSyntactic(this.ruleName)}toMemoKey(){return this._memoKey||Object.defineProperty(this,"_memoKey",{value:this.toString()}),this._memoKey}}class eu extends pe{constructor(e){super(),this.category=e,this.pattern=Vn[e]}}G.PExpr=pe;G.any=qn;G.end=Gn;G.Terminal=Un;G.Range=Hn;G.Param=zn;G.Alt=qt;G.Extend=Xn;G.Splice=Kn;G.Seq=Wn;G.Iter=gt;G.Star=Ct;G.Plus=At;G.Opt=_t;G.Not=Yn;G.Lookahead=Zn;G.Lex=Jn;G.Apply=Qn;G.UnicodeChar=eu;const tu=H,Ce=G;Ce.PExpr.prototype.allowsSkippingPrecedingSpace=tu.abstract("allowsSkippingPrecedingSpace");Ce.any.allowsSkippingPrecedingSpace=Ce.end.allowsSkippingPrecedingSpace=Ce.Apply.prototype.allowsSkippingPrecedingSpace=Ce.Terminal.prototype.allowsSkippingPrecedingSpace=Ce.Range.prototype.allowsSkippingPrecedingSpace=Ce.UnicodeChar.prototype.allowsSkippingPrecedingSpace=function(){return!0};Ce.Alt.prototype.allowsSkippingPrecedingSpace=Ce.Iter.prototype.allowsSkippingPrecedingSpace=Ce.Lex.prototype.allowsSkippingPrecedingSpace=Ce.Lookahead.prototype.allowsSkippingPrecedingSpace=Ce.Not.prototype.allowsSkippingPrecedingSpace=Ce.Param.prototype.allowsSkippingPrecedingSpace=Ce.Seq.prototype.allowsSkippingPrecedingSpace=function(){return!1};function Be(){}Be.prototype=Object.create(null);Be.asNamespace=function(t){return t instanceof Be?t:Be.createNamespace(t)};Be.createNamespace=function(t){return Be.extend(Be.prototype,t)};Be.extend=function(t,e){if(t!==Be.prototype&&!(t instanceof Be))throw new TypeError("not a Namespace object: "+t);const r=Object.create(t,{constructor:{value:Be,enumerable:!1,writable:!0,configurable:!0}});return Object.assign(r,e)};Be.toString=function(t){return Object.prototype.toString.call(t)};var rn=Be;const{assert:ru}=H,nu=rn,uu=G;function Z(t,e){let r;return e?(r=new Error(e.getLineAndColumnMessage()+t),r.shortMessage=t,r.interval=e):r=new Error(t),r}function iu(){return Z("Interval sources don't match")}function au(t){const e=new Error;return Object.defineProperty(e,"message",{enumerable:!0,get(){return t.message}}),Object.defineProperty(e,"shortMessage",{enumerable:!0,get(){return"Expected "+t.getExpectedText()}}),e.interval=t.getInterval(),e}function su(t,e,r){const u=e?"Grammar "+t+" is not declared in namespace "+nu.toString(e):"Undeclared grammar "+t;return Z(u,r)}function ou(t,e){return Z("Grammar "+t.name+" is already declared in this namespace")}function lu(t,e,r){return Z("Rule "+t+" is not declared in grammar "+e,r)}function cu(t,e,r){return Z("Cannot override rule "+t+" because it is not declared in "+e,r)}function pu(t,e,r){return Z("Cannot extend rule "+t+" because it is not declared in "+e,r)}function du(t,e,r,u){let n="Duplicate declaration for rule '"+t+"' in grammar '"+e+"'";return e!==r&&(n+=" (originally declared in '"+r+"')"),Z(n,u)}function mu(t,e,r,u){return Z("Wrong number of parameters for rule "+t+" (expected "+e+", got "+r+")",u)}function fu(t,e,r,u){return Z("Wrong number of arguments for rule "+t+" (expected "+e+", got "+r+")",u)}function hu(t,e,r){return Z("Duplicate parameter names in rule "+t+": "+e.join(", "),r)}function Du(t,e){return Z("Invalid parameter to rule "+t+": "+e+" has arity "+e.getArity()+", but parameter expressions must have arity 1",e.source)}const Eu="NOTE: A _syntactic rule_ is a rule whose name begins with a capital letter. See https://ohmjs.org/d/svl for more details.";function gu(t,e){return Z("Cannot apply syntactic rule "+t+" from here (inside a lexical context)",e.source)}function Cu(t){const{ruleName:e}=t;return Z(`applySyntactic is for syntactic rules, but '${e}' is a lexical rule. `+Eu,t.source)}function Au(t){return Z("applySyntactic is not required here (in a syntactic context)",t.source)}function _u(t,e){return Z("Incorrect argument type: expected "+t,e.source)}function yu(t){return Z("'...' can appear at most once in a rule body",t.source)}function Fu(t){const e=t._node;ru(e&&e.isNonterminal()&&e.ctorName==="escapeChar_unicodeCodePoint");const r=t.children.slice(1,-1).map(n=>n.source),u=r[0].coverageWith(...r.slice(1));return Z(`U+${u.contents} is not a valid Unicode code point`,u)}function Bu(t,e){const r=e.length>0?e[e.length-1].args:[];let n="Nullable expression "+t.expr.substituteParams(r)+" is not allowed inside '"+t.operator+"' (possible infinite loop)";if(e.length>0){const a=e.map(s=>new uu.Apply(s.ruleName,s.args)).join(`
`);n+=`
Application stack (most recent application last):
`+a}return Z(n,t.expr.source)}function bu(t,e,r,u){return Z("Rule "+t+" involves an alternation which has inconsistent arity (expected "+e+", got "+r+")",u.source)}function vu(t){return Z("Object pattern has duplicate property names: "+t.join(", "))}function xu(t,e,r){return Z("Attempt to invoke constructor "+e+" with invalid or unexpected arguments")}function Su(t){const e=t.map(r=>r.message);return Z(["Errors:"].concat(e).join(`
- `),t[0].interval)}function Tu(t,e,r,u){let n=u.slice(0,-1).map(i=>{const c="  "+i[0].name+" > "+i[1];return i.length===3?c+" for '"+i[2]+"'":c}).join(`
`);n+=`
  `+e+" > "+t;let a="";t==="_iter"&&(a=[`
NOTE: as of Ohm v16, there is no default action for iteration nodes — see `,"  https://ohmjs.org/d/dsa for details."].join(`
`));const s=[`Missing semantic action for '${t}' in ${r} '${e}'.${a}`,"Action stack (most recent call last):",n].join(`
`),f=Z(s);return f.name="missingSemanticAction",f}var Pe={applicationOfSyntacticRuleFromLexicalContext:gu,applySyntacticWithLexicalRuleApplication:Cu,cannotExtendUndeclaredRule:pu,cannotOverrideUndeclaredRule:cu,duplicateGrammarDeclaration:ou,duplicateParameterNames:hu,duplicatePropertyNames:vu,duplicateRuleDeclaration:du,inconsistentArity:bu,incorrectArgumentType:_u,intervalSourcesDontMatch:iu,invalidCodePoint:Fu,invalidConstructorCall:xu,invalidParameter:Du,grammarSyntaxError:au,kleeneExprHasNullableOperand:Bu,missingSemanticAction:Tu,multipleSuperSplices:yu,undeclaredGrammar:su,undeclaredRule:lu,unnecessaryExperimentalApplySyntactic:Au,wrongNumberOfArguments:fu,wrongNumberOfParameters:mu,throwErrors(t){if(t.length===1)throw t[0];if(t.length>1)throw Su(t)}},ke={};(function(t){const e=H;function r(s){let f=0;return s.map(c=>{const l=c.toString();return f=Math.max(f,l.length),l}).map(c=>e.padLeft(c,f))}function u(s,f,i){const c=s.length,l=s.slice(0,i),o=s.slice(i+f.length);return(l+f+o).substr(0,c)}function n(...s){const f=this,{offset:i}=f,{repeatStr:c}=e,l=new e.StringBuffer;l.append("Line "+f.lineNum+", col "+f.colNum+`:
`);const o=r([f.prevLine==null?0:f.lineNum-1,f.lineNum,f.nextLine==null?0:f.lineNum+1]),D=(A,_,B)=>{l.append(B+o[A]+" | "+_+`
`)};f.prevLine!=null&&D(0,f.prevLine,"  "),D(1,f.line,"> ");const p=f.line.length;let d=c(" ",p+1);for(let A=0;A<s.length;++A){let _=s[A][0],B=s[A][1];e.assert(_>=0&&_<=B,"range start must be >= 0 and <= end");const E=i-f.colNum+1;_=Math.max(0,_-E),B=Math.min(B-E,p),d=u(d,c("~",B-_),_)}const C=2+o[1].length+3;return l.append(c(" ",C)),d=u(d,"^",f.colNum-1),l.append(d.replace(/ +$/,"")+`
`),f.nextLine!=null&&D(2,f.nextLine,"  "),l.contents()}let a=[];t.awaitBuiltInRules=s=>{a.push(s)},t.announceBuiltInRules=s=>{a.forEach(f=>{f(s)}),a=null},t.getLineAndColumn=(s,f)=>{let i=1,c=1,l=0,o=0,D=null,p=null,d=-1;for(;l<f;){const _=s.charAt(l++);_===`
`?(i++,c=1,d=o,o=l):_!=="\r"&&c++}let C=s.indexOf(`
`,o);if(C===-1)C=s.length;else{const _=s.indexOf(`
`,C+1);D=_===-1?s.slice(C):s.slice(C,_),D=D.replace(/^\r?\n/,"").replace(/\r$/,"")}d>=0&&(p=s.slice(d,o).replace(/\r?\n$/,""));const A=s.slice(o,C).replace(/\r$/,"");return{offset:f,lineNum:i,colNum:c,line:A,prevLine:p,nextLine:D,toString:n}},t.getLineAndColumnMessage=function(s,f,...i){return t.getLineAndColumn(s,f).toString(...i)},t.uniqueId=(()=>{let s=0;return f=>""+f+s++})()})(ke);const{abstract:Iu,isSyntactic:St}=H,Ne=Pe,ie=G,wu=ke;let ut;wu.awaitBuiltInRules(t=>{ut=t});let ft;ie.PExpr.prototype.assertAllApplicationsAreValid=function(t,e){ft=0,this._assertAllApplicationsAreValid(t,e)};ie.PExpr.prototype._assertAllApplicationsAreValid=Iu("_assertAllApplicationsAreValid");ie.any._assertAllApplicationsAreValid=ie.end._assertAllApplicationsAreValid=ie.Terminal.prototype._assertAllApplicationsAreValid=ie.Range.prototype._assertAllApplicationsAreValid=ie.Param.prototype._assertAllApplicationsAreValid=ie.UnicodeChar.prototype._assertAllApplicationsAreValid=function(t,e){};ie.Lex.prototype._assertAllApplicationsAreValid=function(t,e){ft++,this.expr._assertAllApplicationsAreValid(t,e),ft--};ie.Alt.prototype._assertAllApplicationsAreValid=function(t,e){for(let r=0;r<this.terms.length;r++)this.terms[r]._assertAllApplicationsAreValid(t,e)};ie.Seq.prototype._assertAllApplicationsAreValid=function(t,e){for(let r=0;r<this.factors.length;r++)this.factors[r]._assertAllApplicationsAreValid(t,e)};ie.Iter.prototype._assertAllApplicationsAreValid=ie.Not.prototype._assertAllApplicationsAreValid=ie.Lookahead.prototype._assertAllApplicationsAreValid=function(t,e){this.expr._assertAllApplicationsAreValid(t,e)};ie.Apply.prototype._assertAllApplicationsAreValid=function(t,e,r=!1){const u=e.rules[this.ruleName],n=St(t)&&ft===0;if(!u)throw Ne.undeclaredRule(this.ruleName,e.name,this.source);if(!r&&St(this.ruleName)&&!n)throw Ne.applicationOfSyntacticRuleFromLexicalContext(this.ruleName,this);const a=this.args.length,s=u.formals.length;if(a!==s)throw Ne.wrongNumberOfArguments(this.ruleName,s,a,this.source);const f=ut&&u===ut.rules.applySyntactic;if(ut&&u===ut.rules.caseInsensitive&&!(this.args[0]instanceof ie.Terminal))throw Ne.incorrectArgumentType('a Terminal (e.g. "abc")',this.args[0]);if(f){const c=this.args[0];if(!(c instanceof ie.Apply))throw Ne.incorrectArgumentType("a syntactic rule application",c);if(!St(c.ruleName))throw Ne.applySyntacticWithLexicalRuleApplication(c);if(n)throw Ne.unnecessaryExperimentalApplySyntactic(this)}this.args.forEach(c=>{if(c._assertAllApplicationsAreValid(t,e,f),c.getArity()!==1)throw Ne.invalidParameter(this.ruleName,c)})};const Lu=H,nn=Pe,me=G;me.PExpr.prototype.assertChoicesHaveUniformArity=Lu.abstract("assertChoicesHaveUniformArity");me.any.assertChoicesHaveUniformArity=me.end.assertChoicesHaveUniformArity=me.Terminal.prototype.assertChoicesHaveUniformArity=me.Range.prototype.assertChoicesHaveUniformArity=me.Param.prototype.assertChoicesHaveUniformArity=me.Lex.prototype.assertChoicesHaveUniformArity=me.UnicodeChar.prototype.assertChoicesHaveUniformArity=function(t){};me.Alt.prototype.assertChoicesHaveUniformArity=function(t){if(this.terms.length===0)return;const e=this.terms[0].getArity();for(let r=0;r<this.terms.length;r++){const u=this.terms[r];u.assertChoicesHaveUniformArity();const n=u.getArity();if(e!==n)throw nn.inconsistentArity(t,e,n,u)}};me.Extend.prototype.assertChoicesHaveUniformArity=function(t){const e=this.terms[0].getArity(),r=this.terms[1].getArity();if(e!==r)throw nn.inconsistentArity(t,r,e,this.terms[0])};me.Seq.prototype.assertChoicesHaveUniformArity=function(t){for(let e=0;e<this.factors.length;e++)this.factors[e].assertChoicesHaveUniformArity(t)};me.Iter.prototype.assertChoicesHaveUniformArity=function(t){this.expr.assertChoicesHaveUniformArity(t)};me.Not.prototype.assertChoicesHaveUniformArity=function(t){};me.Lookahead.prototype.assertChoicesHaveUniformArity=function(t){this.expr.assertChoicesHaveUniformArity(t)};me.Apply.prototype.assertChoicesHaveUniformArity=function(t){};const Pu=H,Nu=Pe,fe=G;fe.PExpr.prototype.assertIteratedExprsAreNotNullable=Pu.abstract("assertIteratedExprsAreNotNullable");fe.any.assertIteratedExprsAreNotNullable=fe.end.assertIteratedExprsAreNotNullable=fe.Terminal.prototype.assertIteratedExprsAreNotNullable=fe.Range.prototype.assertIteratedExprsAreNotNullable=fe.Param.prototype.assertIteratedExprsAreNotNullable=fe.UnicodeChar.prototype.assertIteratedExprsAreNotNullable=function(t){};fe.Alt.prototype.assertIteratedExprsAreNotNullable=function(t){for(let e=0;e<this.terms.length;e++)this.terms[e].assertIteratedExprsAreNotNullable(t)};fe.Seq.prototype.assertIteratedExprsAreNotNullable=function(t){for(let e=0;e<this.factors.length;e++)this.factors[e].assertIteratedExprsAreNotNullable(t)};fe.Iter.prototype.assertIteratedExprsAreNotNullable=function(t){if(this.expr.assertIteratedExprsAreNotNullable(t),this.expr.isNullable(t))throw Nu.kleeneExprHasNullableOperand(this,[])};fe.Opt.prototype.assertIteratedExprsAreNotNullable=fe.Not.prototype.assertIteratedExprsAreNotNullable=fe.Lookahead.prototype.assertIteratedExprsAreNotNullable=fe.Lex.prototype.assertIteratedExprsAreNotNullable=function(t){this.expr.assertIteratedExprsAreNotNullable(t)};fe.Apply.prototype.assertIteratedExprsAreNotNullable=function(t){this.args.forEach(e=>{e.assertIteratedExprsAreNotNullable(t)})};const{assert:Ou}=H,wt=Pe,lr=ke;function de(t,e,r){this.sourceString=t,this.startIdx=e,this.endIdx=r}de.coverage=function(t,...e){let{startIdx:r,endIdx:u}=t;for(const n of e){if(n.sourceString!==t.sourceString)throw wt.intervalSourcesDontMatch();r=Math.min(r,n.startIdx),u=Math.max(u,n.endIdx)}return new de(t.sourceString,r,u)};de.prototype={coverageWith(...t){return de.coverage(...t,this)},collapsedLeft(){return new de(this.sourceString,this.startIdx,this.startIdx)},collapsedRight(){return new de(this.sourceString,this.endIdx,this.endIdx)},getLineAndColumn(){return lr.getLineAndColumn(this.sourceString,this.startIdx)},getLineAndColumnMessage(){const t=[this.startIdx,this.endIdx];return lr.getLineAndColumnMessage(this.sourceString,this.startIdx,t)},minus(t){if(this.sourceString!==t.sourceString)throw wt.intervalSourcesDontMatch();return this.startIdx===t.startIdx&&this.endIdx===t.endIdx?[]:this.startIdx<t.startIdx&&t.endIdx<this.endIdx?[new de(this.sourceString,this.startIdx,t.startIdx),new de(this.sourceString,t.endIdx,this.endIdx)]:this.startIdx<t.endIdx&&t.endIdx<this.endIdx?[new de(this.sourceString,t.endIdx,this.endIdx)]:this.startIdx<t.startIdx&&t.startIdx<this.endIdx?[new de(this.sourceString,this.startIdx,t.startIdx)]:[this]},relativeTo(t){if(this.sourceString!==t.sourceString)throw wt.intervalSourcesDontMatch();return Ou(this.startIdx>=t.startIdx&&this.endIdx<=t.endIdx,"other interval does not cover this one"),new de(this.sourceString,this.startIdx-t.startIdx,this.endIdx-t.startIdx)},trimmed(){const{contents:t}=this,e=this.startIdx+t.match(/^\s*/)[0].length,r=this.endIdx-t.match(/\s*$/)[0].length;return new de(this.sourceString,e,r)},subInterval(t,e){const r=this.startIdx+t;return new de(this.sourceString,r,r+e)}};Object.defineProperties(de.prototype,{contents:{get(){return this._contents===void 0&&(this._contents=this.sourceString.slice(this.startIdx,this.endIdx)),this._contents},enumerable:!0},length:{get(){return this.endIdx-this.startIdx},enumerable:!0}});var Gt=de;const ku=Gt,Ut=H,Mu="✗",Ru="✓",$u="⋅",Vu="⇒",ju="␉",qu="␊",Gu="␍",Lt={succeeded:1,isRootNode:2,isImplicitSpaces:4,isMemoized:8,isHeadOfLeftRecursion:16,terminatesLR:32};function Uu(t){return Ut.repeat(" ",t).join("")}function Hu(t,e,r){const u=un(t.slice(e,e+r));return u.length<r?u+Ut.repeat(" ",r-u.length).join(""):u}function un(t){return typeof t=="string"?t.replace(/ /g,$u).replace(/\t/g,ju).replace(/\n/g,qu).replace(/\r/g,Gu):String(t)}function Se(t,e,r,u,n,a,s){this.input=t,this.pos=this.pos1=e,this.pos2=r,this.source=new ku(t,e,r),this.expr=u,this.bindings=a,this.children=s||[],this.terminatingLREntry=null,this._flags=n?Lt.succeeded:0}Se.prototype.SKIP={};Object.defineProperty(Se.prototype,"displayString",{get(){return this.expr.toDisplayString()}});Object.keys(Lt).forEach(t=>{const e=Lt[t];Object.defineProperty(Se.prototype,t,{get(){return(this._flags&e)!==0},set(r){r?this._flags|=e:this._flags&=~e}})});Se.prototype.clone=function(){return this.cloneWithExpr(this.expr)};Se.prototype.cloneWithExpr=function(t){const e=new Se(this.input,this.pos,this.pos2,t,this.succeeded,this.bindings,this.children);return e.isHeadOfLeftRecursion=this.isHeadOfLeftRecursion,e.isImplicitSpaces=this.isImplicitSpaces,e.isMemoized=this.isMemoized,e.isRootNode=this.isRootNode,e.terminatesLR=this.terminatesLR,e.terminatingLREntry=this.terminatingLREntry,e};Se.prototype.recordLRTermination=function(t,e){this.terminatingLREntry=new Se(this.input,this.pos,this.pos2,this.expr,!1,[e],[t]),this.terminatingLREntry.terminatesLR=!0};Se.prototype.walk=function(t,e){let r=t;typeof r=="function"&&(r={enter:r});function u(n,a,s){let f=!0;r.enter&&r.enter.call(e,n,a,s)===Se.prototype.SKIP&&(f=!1),f&&(n.children.forEach(i=>{u(i,n,s+1)}),r.exit&&r.exit.call(e,n,a,s))}this.isRootNode?this.children.forEach(n=>{u(n,null,0)}):u(this,null,0)};Se.prototype.toString=function(){const t=new Ut.StringBuffer;return this.walk((e,r,u)=>{if(!e)return this.SKIP;if(e.expr.constructor.name!=="Alt"){if(t.append(Hu(e.input,e.pos,10)+Uu(u*2+1)),t.append((e.succeeded?Ru:Mu)+" "+e.displayString),e.isHeadOfLeftRecursion&&t.append(" (LR)"),e.succeeded){const a=un(e.source.contents);t.append(" "+Vu+"  "),t.append(typeof a=="string"?'"'+a+'"':a)}t.append(`
`)}}),t.contents()};var an=Se;const zu=an,sn=H,Xu=Pe,Ht=jt,re=G,{TerminalNode:ot}=Ht,{NonterminalNode:Ku}=Ht,{IterationNode:Wu}=Ht;re.PExpr.prototype.eval=sn.abstract("eval");re.any.eval=function(t){const{inputStream:e}=t,r=e.pos,u=e.next();return u?(t.pushBinding(new ot(u.length),r),!0):(t.processFailure(r,this),!1)};re.end.eval=function(t){const{inputStream:e}=t,r=e.pos;return e.atEnd()?(t.pushBinding(new ot(0),r),!0):(t.processFailure(r,this),!1)};re.Terminal.prototype.eval=function(t){const{inputStream:e}=t,r=e.pos;return e.matchString(this.obj)?(t.pushBinding(new ot(this.obj.length),r),!0):(t.processFailure(r,this),!1)};re.Range.prototype.eval=function(t){const{inputStream:e}=t,r=e.pos,u=this.matchCodePoint?e.nextCodePoint():e.nextCharCode();return u!==void 0&&this.from.codePointAt(0)<=u&&u<=this.to.codePointAt(0)?(t.pushBinding(new ot(String.fromCodePoint(u).length),r),!0):(t.processFailure(r,this),!1)};re.Param.prototype.eval=function(t){return t.eval(t.currentApplication().args[this.index])};re.Lex.prototype.eval=function(t){t.enterLexifiedContext();const e=t.eval(this.expr);return t.exitLexifiedContext(),e};re.Alt.prototype.eval=function(t){for(let e=0;e<this.terms.length;e++)if(t.eval(this.terms[e]))return!0;return!1};re.Seq.prototype.eval=function(t){for(let e=0;e<this.factors.length;e++){const r=this.factors[e];if(!t.eval(r))return!1}return!0};re.Iter.prototype.eval=function(t){const{inputStream:e}=t,r=e.pos,u=this.getArity(),n=[],a=[];for(;n.length<u;)n.push([]),a.push([]);let s=0,f=r,i;for(;s<this.maxNumMatches&&t.eval(this.expr);){if(e.pos===f)throw Xu.kleeneExprHasNullableOperand(this,t._applicationStack);f=e.pos,s++;const D=t._bindings.splice(t._bindings.length-u,u),p=t._bindingOffsets.splice(t._bindingOffsets.length-u,u);for(i=0;i<D.length;i++)n[i].push(D[i]),a[i].push(p[i])}if(s<this.minNumMatches)return!1;let c=t.posToOffset(r),l=0;if(s>0){const D=n[u-1],p=a[u-1],d=p[p.length-1]+D[D.length-1].matchLength;c=a[0][0],l=d-c}const o=this instanceof re.Opt;for(i=0;i<n.length;i++)t._bindings.push(new Wu(n[i],a[i],l,o)),t._bindingOffsets.push(c);return!0};re.Not.prototype.eval=function(t){const{inputStream:e}=t,r=e.pos;t.pushFailuresInfo();const u=t.eval(this.expr);return t.popFailuresInfo(),u?(t.processFailure(r,this),!1):(e.pos=r,!0)};re.Lookahead.prototype.eval=function(t){const{inputStream:e}=t,r=e.pos;return t.eval(this.expr)?(e.pos=r,!0):!1};re.Apply.prototype.eval=function(t){const e=t.currentApplication(),r=e?e.args:[],u=this.substituteParams(r),n=t.getCurrentPosInfo();if(n.isActive(u))return u.handleCycle(t);const a=u.toMemoKey(),s=n.memo[a];if(s&&n.shouldUseMemoizedResult(s)){if(t.hasNecessaryInfo(s))return t.useMemoizedResult(t.inputStream.pos,s);delete n.memo[a]}return u.reallyEval(t)};re.Apply.prototype.handleCycle=function(t){const e=t.getCurrentPosInfo(),{currentLeftRecursion:r}=e,u=this.toMemoKey();let n=e.memo[u];return r&&r.headApplication.toMemoKey()===u?n.updateInvolvedApplicationMemoKeys():n||(n=e.memoize(u,{matchLength:0,examinedLength:0,value:!1,rightmostFailureOffset:-1}),e.startLeftRecursion(this,n)),t.useMemoizedResult(t.inputStream.pos,n)};re.Apply.prototype.reallyEval=function(t){const{inputStream:e}=t,r=e.pos,u=t.getCurrentPosInfo(),n=t.grammar.rules[this.ruleName],{body:a}=n,{description:s}=n;t.enterApplication(u,this),s&&t.pushFailuresInfo();const f=e.examinedLength;e.examinedLength=0;let i=this.evalOnce(a,t);const c=u.currentLeftRecursion,l=this.toMemoKey(),o=c&&c.headApplication.toMemoKey()===l;let D;o?(i=this.growSeedResult(a,t,r,c,i),u.endLeftRecursion(),D=c,D.examinedLength=e.examinedLength-r,D.rightmostFailureOffset=t._getRightmostFailureOffset(),u.memoize(l,D)):(!c||!c.isInvolved(l))&&(D=u.memoize(l,{matchLength:e.pos-r,examinedLength:e.examinedLength-r,value:i,failuresAtRightmostPosition:t.cloneRecordedFailures(),rightmostFailureOffset:t._getRightmostFailureOffset()}));const p=!!i;if(s&&(t.popFailuresInfo(),p||t.processFailure(r,this),D&&(D.failuresAtRightmostPosition=t.cloneRecordedFailures())),t.isTracing()&&D){const d=t.getTraceEntry(r,this,p,p?[i]:[]);o&&(sn.assert(d.terminatingLREntry!=null||!p),d.isHeadOfLeftRecursion=!0),D.traceEntry=d}return e.examinedLength=Math.max(e.examinedLength,f),t.exitApplication(u,i),p};re.Apply.prototype.evalOnce=function(t,e){const{inputStream:r}=e,u=r.pos;if(e.eval(t)){const n=t.getArity(),a=e._bindings.splice(e._bindings.length-n,n),s=e._bindingOffsets.splice(e._bindingOffsets.length-n,n),f=r.pos-u;return new Ku(this.ruleName,a,s,f)}else return!1};re.Apply.prototype.growSeedResult=function(t,e,r,u,n){if(!n)return!1;const{inputStream:a}=e;for(;;){if(u.matchLength=a.pos-r,u.value=n,u.failuresAtRightmostPosition=e.cloneRecordedFailures(),e.isTracing()){const s=e.trace[e.trace.length-1];u.traceEntry=new zu(e.input,r,a.pos,this,!0,[n],[s.clone()])}if(a.pos=r,n=this.evalOnce(t,e),a.pos-r<=u.matchLength)break;e.isTracing()&&e.trace.splice(-2,1)}return e.isTracing()&&u.traceEntry.recordLRTermination(e.trace.pop(),n),a.pos=r+u.matchLength,u.value};re.UnicodeChar.prototype.eval=function(t){const{inputStream:e}=t,r=e.pos,u=e.next();return u&&this.pattern.test(u)?(t.pushBinding(new ot(u.length),r),!0):(t.processFailure(r,this),!1)};const Yu=H,Ae=G;Ae.PExpr.prototype.getArity=Yu.abstract("getArity");Ae.any.getArity=Ae.end.getArity=Ae.Terminal.prototype.getArity=Ae.Range.prototype.getArity=Ae.Param.prototype.getArity=Ae.Apply.prototype.getArity=Ae.UnicodeChar.prototype.getArity=function(){return 1};Ae.Alt.prototype.getArity=function(){return this.terms.length===0?0:this.terms[0].getArity()};Ae.Seq.prototype.getArity=function(){let t=0;for(let e=0;e<this.factors.length;e++)t+=this.factors[e].getArity();return t};Ae.Iter.prototype.getArity=function(){return this.expr.getArity()};Ae.Not.prototype.getArity=function(){return 0};Ae.Lookahead.prototype.getArity=Ae.Lex.prototype.getArity=function(){return this.expr.getArity()};const Zu=H,ne=G;function Ie(t,e){const r={};if(t.source&&e){const u=t.source.relativeTo(e);r.sourceInterval=[u.startIdx,u.endIdx]}return r}ne.PExpr.prototype.outputRecipe=Zu.abstract("outputRecipe");ne.any.outputRecipe=function(t,e){return["any",Ie(this,e)]};ne.end.outputRecipe=function(t,e){return["end",Ie(this,e)]};ne.Terminal.prototype.outputRecipe=function(t,e){return["terminal",Ie(this,e),this.obj]};ne.Range.prototype.outputRecipe=function(t,e){return["range",Ie(this,e),this.from,this.to]};ne.Param.prototype.outputRecipe=function(t,e){return["param",Ie(this,e),this.index]};ne.Alt.prototype.outputRecipe=function(t,e){return["alt",Ie(this,e)].concat(this.terms.map(r=>r.outputRecipe(t,e)))};ne.Extend.prototype.outputRecipe=function(t,e){return this.terms[0].outputRecipe(t,e)};ne.Splice.prototype.outputRecipe=function(t,e){const r=this.terms.slice(0,this.expansionPos),u=this.terms.slice(this.expansionPos+1);return["splice",Ie(this,e),r.map(n=>n.outputRecipe(t,e)),u.map(n=>n.outputRecipe(t,e))]};ne.Seq.prototype.outputRecipe=function(t,e){return["seq",Ie(this,e)].concat(this.factors.map(r=>r.outputRecipe(t,e)))};ne.Star.prototype.outputRecipe=ne.Plus.prototype.outputRecipe=ne.Opt.prototype.outputRecipe=ne.Not.prototype.outputRecipe=ne.Lookahead.prototype.outputRecipe=ne.Lex.prototype.outputRecipe=function(t,e){return[this.constructor.name.toLowerCase(),Ie(this,e),this.expr.outputRecipe(t,e)]};ne.Apply.prototype.outputRecipe=function(t,e){return["app",Ie(this,e),this.ruleName,this.args.map(r=>r.outputRecipe(t,e))]};ne.UnicodeChar.prototype.outputRecipe=function(t,e){return["unicodeChar",Ie(this,e),this.category]};const Ju=H,he=G;he.PExpr.prototype.introduceParams=Ju.abstract("introduceParams");he.any.introduceParams=he.end.introduceParams=he.Terminal.prototype.introduceParams=he.Range.prototype.introduceParams=he.Param.prototype.introduceParams=he.UnicodeChar.prototype.introduceParams=function(t){return this};he.Alt.prototype.introduceParams=function(t){return this.terms.forEach((e,r,u)=>{u[r]=e.introduceParams(t)}),this};he.Seq.prototype.introduceParams=function(t){return this.factors.forEach((e,r,u)=>{u[r]=e.introduceParams(t)}),this};he.Iter.prototype.introduceParams=he.Not.prototype.introduceParams=he.Lookahead.prototype.introduceParams=he.Lex.prototype.introduceParams=function(t){return this.expr=this.expr.introduceParams(t),this};he.Apply.prototype.introduceParams=function(t){const e=t.indexOf(this.ruleName);if(e>=0){if(this.args.length>0)throw new Error("Parameterized rules cannot be passed as arguments to another rule.");return new he.Param(e).withSource(this.source)}else return this.args.forEach((r,u,n)=>{n[u]=r.introduceParams(t)}),this};const Qu=H,ae=G;ae.PExpr.prototype.isNullable=function(t){return this._isNullable(t,Object.create(null))};ae.PExpr.prototype._isNullable=Qu.abstract("_isNullable");ae.any._isNullable=ae.Range.prototype._isNullable=ae.Param.prototype._isNullable=ae.Plus.prototype._isNullable=ae.UnicodeChar.prototype._isNullable=function(t,e){return!1};ae.end._isNullable=function(t,e){return!0};ae.Terminal.prototype._isNullable=function(t,e){return typeof this.obj=="string"?this.obj==="":!1};ae.Alt.prototype._isNullable=function(t,e){return this.terms.length===0||this.terms.some(r=>r._isNullable(t,e))};ae.Seq.prototype._isNullable=function(t,e){return this.factors.every(r=>r._isNullable(t,e))};ae.Star.prototype._isNullable=ae.Opt.prototype._isNullable=ae.Not.prototype._isNullable=ae.Lookahead.prototype._isNullable=function(t,e){return!0};ae.Lex.prototype._isNullable=function(t,e){return this.expr._isNullable(t,e)};ae.Apply.prototype._isNullable=function(t,e){const r=this.toMemoKey();if(!Object.prototype.hasOwnProperty.call(e,r)){const{body:u}=t.rules[this.ruleName],n=u.substituteParams(this.args);e[r]=!1,e[r]=n._isNullable(t,e)}return e[r]};const ei=H,se=G;se.PExpr.prototype.substituteParams=ei.abstract("substituteParams");se.any.substituteParams=se.end.substituteParams=se.Terminal.prototype.substituteParams=se.Range.prototype.substituteParams=se.UnicodeChar.prototype.substituteParams=function(t){return this};se.Param.prototype.substituteParams=function(t){return t[this.index]};se.Alt.prototype.substituteParams=function(t){return new se.Alt(this.terms.map(e=>e.substituteParams(t)))};se.Seq.prototype.substituteParams=function(t){return new se.Seq(this.factors.map(e=>e.substituteParams(t)))};se.Iter.prototype.substituteParams=se.Not.prototype.substituteParams=se.Lookahead.prototype.substituteParams=se.Lex.prototype.substituteParams=function(t){return new this.constructor(this.expr.substituteParams(t))};se.Apply.prototype.substituteParams=function(t){if(this.args.length===0)return this;{const e=this.args.map(r=>r.substituteParams(t));return new se.Apply(this.ruleName,e)}};const on=H,Ee=G,{copyWithoutDuplicates:ti}=on;function cr(t){return/^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(t)}function zt(t){const e=Object.create(null);t.forEach(r=>{e[r]=(e[r]||0)+1}),Object.keys(e).forEach(r=>{if(e[r]<=1)return;let u=1;t.forEach((n,a)=>{n===r&&(t[a]=n+"_"+u++)})})}Ee.PExpr.prototype.toArgumentNameList=on.abstract("toArgumentNameList");Ee.any.toArgumentNameList=function(t,e){return["any"]};Ee.end.toArgumentNameList=function(t,e){return["end"]};Ee.Terminal.prototype.toArgumentNameList=function(t,e){return typeof this.obj=="string"&&/^[_a-zA-Z0-9]+$/.test(this.obj)?["_"+this.obj]:["$"+t]};Ee.Range.prototype.toArgumentNameList=function(t,e){let r=this.from+"_to_"+this.to;return cr(r)||(r="_"+r),cr(r)||(r="$"+t),[r]};Ee.Alt.prototype.toArgumentNameList=function(t,e){const r=this.terms.map(a=>a.toArgumentNameList(t,!0)),u=[],n=r[0].length;for(let a=0;a<n;a++){const s=[];for(let i=0;i<this.terms.length;i++)s.push(r[i][a]);const f=ti(s);u.push(f.join("_or_"))}return e||zt(u),u};Ee.Seq.prototype.toArgumentNameList=function(t,e){let r=[];return this.factors.forEach(u=>{const n=u.toArgumentNameList(t,!0);r=r.concat(n),t+=n.length}),e||zt(r),r};Ee.Iter.prototype.toArgumentNameList=function(t,e){const r=this.expr.toArgumentNameList(t,e).map(u=>u[u.length-1]==="s"?u+"es":u+"s");return e||zt(r),r};Ee.Opt.prototype.toArgumentNameList=function(t,e){return this.expr.toArgumentNameList(t,e).map(r=>"opt"+r[0].toUpperCase()+r.slice(1))};Ee.Not.prototype.toArgumentNameList=function(t,e){return[]};Ee.Lookahead.prototype.toArgumentNameList=Ee.Lex.prototype.toArgumentNameList=function(t,e){return this.expr.toArgumentNameList(t,e)};Ee.Apply.prototype.toArgumentNameList=function(t,e){return[this.ruleName]};Ee.UnicodeChar.prototype.toArgumentNameList=function(t,e){return["$"+t]};Ee.Param.prototype.toArgumentNameList=function(t,e){return["param"+this.index]};const ri=H,ge=G;ge.PExpr.prototype.toDisplayString=ri.abstract("toDisplayString");ge.Alt.prototype.toDisplayString=ge.Seq.prototype.toDisplayString=function(){return this.source?this.source.trimmed().contents:"["+this.constructor.name+"]"};ge.any.toDisplayString=ge.end.toDisplayString=ge.Iter.prototype.toDisplayString=ge.Not.prototype.toDisplayString=ge.Lookahead.prototype.toDisplayString=ge.Lex.prototype.toDisplayString=ge.Terminal.prototype.toDisplayString=ge.Range.prototype.toDisplayString=ge.Param.prototype.toDisplayString=function(){return this.toString()};ge.Apply.prototype.toDisplayString=function(){if(this.args.length>0){const t=this.args.map(e=>e.toDisplayString());return this.ruleName+"<"+t.join(",")+">"}else return this.ruleName};ge.UnicodeChar.prototype.toDisplayString=function(){return"Unicode ["+this.category+"] character"};const Le=tn,ni=H,be=G;be.PExpr.prototype.toFailure=ni.abstract("toFailure");be.any.toFailure=function(t){return new Le(this,"any object","description")};be.end.toFailure=function(t){return new Le(this,"end of input","description")};be.Terminal.prototype.toFailure=function(t){return new Le(this,this.obj,"string")};be.Range.prototype.toFailure=function(t){return new Le(this,JSON.stringify(this.from)+".."+JSON.stringify(this.to),"code")};be.Not.prototype.toFailure=function(t){const e=this.expr===be.any?"nothing":"not "+this.expr.toFailure(t);return new Le(this,e,"description")};be.Lookahead.prototype.toFailure=function(t){return this.expr.toFailure(t)};be.Apply.prototype.toFailure=function(t){let{description:e}=t.rules[this.ruleName];return e||(e=(/^[aeiouAEIOU]/.test(this.ruleName)?"an":"a")+" "+this.ruleName),new Le(this,e,"description")};be.UnicodeChar.prototype.toFailure=function(t){return new Le(this,"a Unicode ["+this.category+"] character","description")};be.Alt.prototype.toFailure=function(t){const r="("+this.terms.map(u=>u.toFailure(t)).join(" or ")+")";return new Le(this,r,"description")};be.Seq.prototype.toFailure=function(t){const r="("+this.factors.map(u=>u.toFailure(t)).join(" ")+")";return new Le(this,r,"description")};be.Iter.prototype.toFailure=function(t){const e="("+this.expr.toFailure(t)+this.operator+")";return new Le(this,e,"description")};const ui=H,_e=G;_e.PExpr.prototype.toString=ui.abstract("toString");_e.any.toString=function(){return"any"};_e.end.toString=function(){return"end"};_e.Terminal.prototype.toString=function(){return JSON.stringify(this.obj)};_e.Range.prototype.toString=function(){return JSON.stringify(this.from)+".."+JSON.stringify(this.to)};_e.Param.prototype.toString=function(){return"$"+this.index};_e.Lex.prototype.toString=function(){return"#("+this.expr.toString()+")"};_e.Alt.prototype.toString=function(){return this.terms.length===1?this.terms[0].toString():"("+this.terms.map(t=>t.toString()).join(" | ")+")"};_e.Seq.prototype.toString=function(){return this.factors.length===1?this.factors[0].toString():"("+this.factors.map(t=>t.toString()).join(" ")+")"};_e.Iter.prototype.toString=function(){return this.expr+this.operator};_e.Not.prototype.toString=function(){return"~"+this.expr};_e.Lookahead.prototype.toString=function(){return"&"+this.expr};_e.Apply.prototype.toString=function(){if(this.args.length>0){const t=this.args.map(e=>e.toString());return this.ruleName+"<"+t.join(",")+">"}else return this.ruleName};_e.UnicodeChar.prototype.toString=function(){return"\\p{"+this.category+"}"};var ze=G;const ii=tn,{TerminalNode:ai}=jt,{assert:si}=H,{PExpr:oi,Terminal:li}=ze;class Xt extends oi{constructor(e){super(),this.obj=e}_getString(e){const r=e.currentApplication().args[this.obj.index];return si(r instanceof li,"expected a Terminal expression"),r.obj}allowsSkippingPrecedingSpace(){return!0}eval(e){const{inputStream:r}=e,u=r.pos,n=this._getString(e);return r.matchString(n,!0)?(e.pushBinding(new ai(n.length),u),!0):(e.processFailure(u,this),!1)}getArity(){return 1}substituteParams(e){return new Xt(this.obj.substituteParams(e))}toDisplayString(){return this.obj.toDisplayString()+" (case-insensitive)"}toFailure(e){return new ii(this,this.obj.toFailure(e)+" (case-insensitive)","description")}_isNullable(e,r){return this.obj._isNullable(e,r)}}var ci=Xt;const pi=Gt;function ln(t){this.source=t,this.pos=0,this.examinedLength=0}ln.prototype={atEnd(){const t=this.pos===this.source.length;return this.examinedLength=Math.max(this.examinedLength,this.pos+1),t},next(){const t=this.source[this.pos++];return this.examinedLength=Math.max(this.examinedLength,this.pos),t},nextCharCode(){const t=this.next();return t&&t.charCodeAt(0)},nextCodePoint(){const t=this.source.slice(this.pos++).codePointAt(0);return t>65535&&(this.pos+=1),this.examinedLength=Math.max(this.examinedLength,this.pos),t},matchString(t,e){let r;if(e){for(r=0;r<t.length;r++){const u=this.next(),n=t[r];if(u==null||u.toUpperCase()!==n.toUpperCase())return!1}return!0}for(r=0;r<t.length;r++)if(this.next()!==t[r])return!1;return!0},sourceSlice(t,e){return this.source.slice(t,e)},interval(t,e){return new pi(this.source,t,e||this.pos)}};var Kt=ln;const Pt=H,pr=ke,di=Gt;function Me(t,e,r,u,n,a,s){this.matcher=t,this.input=e,this.startExpr=r,this._cst=u,this._cstOffset=n,this._rightmostFailurePosition=a,this._rightmostFailures=s,this.failed()&&(Pt.defineLazyProperty(this,"message",function(){const f="Expected "+this.getExpectedText();return pr.getLineAndColumnMessage(this.input,this.getRightmostFailurePosition())+f}),Pt.defineLazyProperty(this,"shortMessage",function(){const f="expected "+this.getExpectedText(),i=pr.getLineAndColumn(this.input,this.getRightmostFailurePosition());return"Line "+i.lineNum+", col "+i.colNum+": "+f}))}Me.prototype.succeeded=function(){return!!this._cst};Me.prototype.failed=function(){return!this.succeeded()};Me.prototype.getRightmostFailurePosition=function(){return this._rightmostFailurePosition};Me.prototype.getRightmostFailures=function(){if(!this._rightmostFailures){this.matcher.setInput(this.input);const t=this.matcher._match(this.startExpr,!1,this.getRightmostFailurePosition());this._rightmostFailures=t.getRightmostFailures()}return this._rightmostFailures};Me.prototype.toString=function(){return this.succeeded()?"[match succeeded]":"[match failed at position "+this.getRightmostFailurePosition()+"]"};Me.prototype.getExpectedText=function(){if(this.succeeded())throw new Error("cannot get expected text of a successful MatchResult");const t=new Pt.StringBuffer;let e=this.getRightmostFailures();e=e.filter(r=>!r.isFluffy());for(let r=0;r<e.length;r++)r>0&&(r===e.length-1?t.append(e.length>2?", or ":" or "):t.append(", ")),t.append(e[r].toString());return t.contents()};Me.prototype.getInterval=function(){const t=this.getRightmostFailurePosition();return new di(this.input,t,t)};var cn=Me;function pn(){this.applicationMemoKeyStack=[],this.memo={},this.maxExaminedLength=0,this.maxRightmostFailureOffset=-1,this.currentLeftRecursion=void 0}pn.prototype={isActive(t){return this.applicationMemoKeyStack.indexOf(t.toMemoKey())>=0},enter(t){this.applicationMemoKeyStack.push(t.toMemoKey())},exit(){this.applicationMemoKeyStack.pop()},startLeftRecursion(t,e){e.isLeftRecursion=!0,e.headApplication=t,e.nextLeftRecursion=this.currentLeftRecursion,this.currentLeftRecursion=e;const{applicationMemoKeyStack:r}=this,u=r.indexOf(t.toMemoKey())+1,n=r.slice(u);e.isInvolved=function(a){return n.indexOf(a)>=0},e.updateInvolvedApplicationMemoKeys=function(){for(let a=u;a<r.length;a++){const s=r[a];this.isInvolved(s)||n.push(s)}}},endLeftRecursion(){this.currentLeftRecursion=this.currentLeftRecursion.nextLeftRecursion},shouldUseMemoizedResult(t){if(!t.isLeftRecursion)return!0;const{applicationMemoKeyStack:e}=this;for(let r=0;r<e.length;r++){const u=e[r];if(t.isInvolved(u))return!1}return!0},memoize(t,e){return this.memo[t]=e,this.maxExaminedLength=Math.max(this.maxExaminedLength,e.examinedLength),this.maxRightmostFailureOffset=Math.max(this.maxRightmostFailureOffset,e.rightmostFailureOffset),e},clearObsoleteEntries(t,e){if(t+this.maxExaminedLength<=e)return;const{memo:r}=this;this.maxExaminedLength=0,this.maxRightmostFailureOffset=-1,Object.keys(r).forEach(u=>{const n=r[u];t+n.examinedLength>e?delete r[u]:(this.maxExaminedLength=Math.max(this.maxExaminedLength,n.examinedLength),this.maxRightmostFailureOffset=Math.max(this.maxRightmostFailureOffset,n.rightmostFailureOffset))})}};var mi=pn;const fi=Kt,hi=cn,Di=mi,Ei=an,Nt=ze,gi=ke;let dn;gi.awaitBuiltInRules(t=>{dn=t.rules.applySyntactic.body});const Tt=new Nt.Apply("spaces");function mn(t,e,r){this.matcher=t,this.startExpr=e,this.grammar=t.grammar,this.input=t.input,this.inputStream=new fi(t.input),this.memoTable=t.memoTable,this._bindings=[],this._bindingOffsets=[],this._applicationStack=[],this._posStack=[0],this.inLexifiedContextStack=[!1],this.rightmostFailurePosition=-1,this._rightmostFailurePositionStack=[],this._recordedFailuresStack=[],r!==void 0&&(this.positionToRecordFailures=r,this.recordedFailures=Object.create(null))}mn.prototype={posToOffset(t){return t-this._posStack[this._posStack.length-1]},enterApplication(t,e){this._posStack.push(this.inputStream.pos),this._applicationStack.push(e),this.inLexifiedContextStack.push(!1),t.enter(e),this._rightmostFailurePositionStack.push(this.rightmostFailurePosition),this.rightmostFailurePosition=-1},exitApplication(t,e){const r=this._posStack.pop();this._applicationStack.pop(),this.inLexifiedContextStack.pop(),t.exit(),this.rightmostFailurePosition=Math.max(this.rightmostFailurePosition,this._rightmostFailurePositionStack.pop()),e&&this.pushBinding(e,r)},enterLexifiedContext(){this.inLexifiedContextStack.push(!0)},exitLexifiedContext(){this.inLexifiedContextStack.pop()},currentApplication(){return this._applicationStack[this._applicationStack.length-1]},inSyntacticContext(){const t=this.currentApplication();return t?t.isSyntactic()&&!this.inLexifiedContext():this.startExpr.factors[0].isSyntactic()},inLexifiedContext(){return this.inLexifiedContextStack[this.inLexifiedContextStack.length-1]},skipSpaces(){return this.pushFailuresInfo(),this.eval(Tt),this.popBinding(),this.popFailuresInfo(),this.inputStream.pos},skipSpacesIfInSyntacticContext(){return this.inSyntacticContext()?this.skipSpaces():this.inputStream.pos},maybeSkipSpacesBefore(t){return t.allowsSkippingPrecedingSpace()&&t!==Tt?this.skipSpacesIfInSyntacticContext():this.inputStream.pos},pushBinding(t,e){this._bindings.push(t),this._bindingOffsets.push(this.posToOffset(e))},popBinding(){this._bindings.pop(),this._bindingOffsets.pop()},numBindings(){return this._bindings.length},truncateBindings(t){for(;this._bindings.length>t;)this.popBinding()},getCurrentPosInfo(){return this.getPosInfo(this.inputStream.pos)},getPosInfo(t){let e=this.memoTable[t];return e||(e=this.memoTable[t]=new Di),e},processFailure(t,e){if(this.rightmostFailurePosition=Math.max(this.rightmostFailurePosition,t),this.recordedFailures&&t===this.positionToRecordFailures){const r=this.currentApplication();r&&(e=e.substituteParams(r.args)),this.recordFailure(e.toFailure(this.grammar),!1)}},recordFailure(t,e){const r=t.toKey();this.recordedFailures[r]?this.recordedFailures[r].isFluffy()&&!t.isFluffy()&&this.recordedFailures[r].clearFluffy():this.recordedFailures[r]=e?t.clone():t},recordFailures(t,e){Object.keys(t).forEach(r=>{this.recordFailure(t[r],e)})},cloneRecordedFailures(){if(!this.recordedFailures)return;const t=Object.create(null);return Object.keys(this.recordedFailures).forEach(e=>{t[e]=this.recordedFailures[e].clone()}),t},getRightmostFailurePosition(){return this.rightmostFailurePosition},_getRightmostFailureOffset(){return this.rightmostFailurePosition>=0?this.posToOffset(this.rightmostFailurePosition):-1},getMemoizedTraceEntry(t,e){const r=this.memoTable[t];if(r&&e instanceof Nt.Apply){const u=r.memo[e.toMemoKey()];if(u&&u.traceEntry){const n=u.traceEntry.cloneWithExpr(e);return n.isMemoized=!0,n}}return null},getTraceEntry(t,e,r,u){if(e instanceof Nt.Apply){const n=this.currentApplication(),a=n?n.args:[];e=e.substituteParams(a)}return this.getMemoizedTraceEntry(t,e)||new Ei(this.input,t,this.inputStream.pos,e,r,u,this.trace)},isTracing(){return!!this.trace},hasNecessaryInfo(t){return this.trace&&!t.traceEntry?!1:this.recordedFailures&&this.inputStream.pos+t.rightmostFailureOffset===this.positionToRecordFailures?!!t.failuresAtRightmostPosition:!0},useMemoizedResult(t,e){this.trace&&this.trace.push(e.traceEntry);const r=this.inputStream.pos+e.rightmostFailureOffset;return this.rightmostFailurePosition=Math.max(this.rightmostFailurePosition,r),this.recordedFailures&&this.positionToRecordFailures===r&&e.failuresAtRightmostPosition&&this.recordFailures(e.failuresAtRightmostPosition,!0),this.inputStream.examinedLength=Math.max(this.inputStream.examinedLength,e.examinedLength+t),e.value?(this.inputStream.pos+=e.matchLength,this.pushBinding(e.value,t),!0):!1},eval(t){const{inputStream:e}=this,r=this._bindings.length;let u;this.recordedFailures&&(u=this.recordedFailures,this.recordedFailures=Object.create(null));const n=e.pos,a=this.maybeSkipSpacesBefore(t);let s;this.trace&&(s=this.trace,this.trace=[]);const f=t.eval(this);if(this.trace){const i=this._bindings.slice(r),c=this.getTraceEntry(a,t,f,i);c.isImplicitSpaces=t===Tt,c.isRootNode=t===this.startExpr,s.push(c),this.trace=s}return f?this.recordedFailures&&e.pos===this.positionToRecordFailures&&Object.keys(this.recordedFailures).forEach(i=>{this.recordedFailures[i].makeFluffy()}):(e.pos=n,this.truncateBindings(r)),this.recordedFailures&&this.recordFailures(u,!1),t===dn&&this.skipSpaces(),f},getMatchResult(){this.eval(this.startExpr);let t;this.recordedFailures&&(t=Object.keys(this.recordedFailures).map(r=>this.recordedFailures[r]));const e=this._bindings[0];return e&&(e.grammar=this.grammar),new hi(this.matcher,this.input,this.startExpr,e,this._bindingOffsets[0],this.rightmostFailurePosition,t)},getTrace(){this.trace=[];const t=this.getMatchResult(),e=this.trace[this.trace.length-1];return e.result=t,e},pushFailuresInfo(){this._rightmostFailurePositionStack.push(this.rightmostFailurePosition),this._recordedFailuresStack.push(this.recordedFailures)},popFailuresInfo(){this.rightmostFailurePosition=this._rightmostFailurePositionStack.pop(),this.recordedFailures=this._recordedFailuresStack.pop()}};var Ci=mn;const Ai=Ci,dr=ze;function Re(t){this.grammar=t,this.memoTable=[],this.input=""}Re.prototype.getInput=function(){return this.input};Re.prototype.setInput=function(t){return this.input!==t&&this.replaceInputRange(0,this.input.length,t),this};Re.prototype.replaceInputRange=function(t,e,r){const u=this.input;if(t<0||t>u.length||e<0||e>u.length||t>e)throw new Error("Invalid indices: "+t+" and "+e);this.input=u.slice(0,t)+r+u.slice(e);const n=this.memoTable.slice(e);this.memoTable.length=t;for(let a=0;a<r.length;a++)this.memoTable.push(void 0);n.forEach(function(a){this.memoTable.push(a)},this);for(let a=0;a<t;a++){const s=this.memoTable[a];s&&s.clearObsoleteEntries(a,t)}return this};Re.prototype.match=function(t){return this._match(this._getStartExpr(t),!1)};Re.prototype.trace=function(t){return this._match(this._getStartExpr(t),!0)};Re.prototype._match=function(t,e,r){const u=new Ai(this,t,r);return e?u.getTrace():u.getMatchResult()};Re.prototype._getStartExpr=function(t){const e=t||this.grammar.defaultStartRule;if(!e)throw new Error("Missing start rule argument -- the grammar has no default start rule.");const r=this.grammar.parseApplication(e);return new dr.Seq([r,dr.end])};var _i=Re;const yi=Kt,{IterationNode:Fi}=jt,Bi=cn,Wt=H,bi=Pe,fn=ke,it=[],Yt=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);class hn{constructor(e,r,u){this._node=e,this.source=r,this._baseInterval=u,e.isNonterminal()&&Wt.assert(r===u),this._childWrappers=[]}toString(){return"[semantics wrapper for "+this._node.grammar.name+"]"}_forgetMemoizedResultFor(e){delete this._node[this._semantics.attributeKeys[e]],this.children.forEach(r=>{r._forgetMemoizedResultFor(e)})}child(e){if(!(0<=e&&e<this._node.numChildren()))return;let r=this._childWrappers[e];if(!r){const u=this._node.childAt(e),n=this._node.childOffsets[e],a=this._baseInterval.subInterval(n,u.matchLength),s=u.isNonterminal()?a:this._baseInterval;r=this._childWrappers[e]=this._semantics.wrap(u,a,s)}return r}_children(){for(let e=0;e<this._node.numChildren();e++)this.child(e);return this._childWrappers}isIteration(){return this._node.isIteration()}isTerminal(){return this._node.isTerminal()}isNonterminal(){return this._node.isNonterminal()}isSyntactic(){return this.isNonterminal()&&this._node.isSyntactic()}isLexical(){return this.isNonterminal()&&this._node.isLexical()}isOptional(){return this._node.isOptional()}iteration(e){const r=e||[],u=r.map(s=>s._node),n=new Fi(u,[],-1,!1),a=this._semantics.wrap(n,null,null);return a._childWrappers=r,a}get children(){return this._children()}get ctorName(){return this._node.ctorName}get interval(){throw new Error("The `interval` property is deprecated -- use `source` instead")}get numChildren(){return this._node.numChildren()}get sourceString(){return this.source.contents}}function ce(t,e){const r=this;if(this.grammar=t,this.checkedActionDicts=!1,this.Wrapper=class extends(e?e.Wrapper:hn){constructor(u,n,a){super(u,n,a),r.checkActionDictsIfHaventAlready(),this._semantics=r}},this.super=e,e){if(!(t.equals(this.super.grammar)||t._inheritsFrom(this.super.grammar)))throw new Error("Cannot extend a semantics for grammar '"+this.super.grammar.name+"' for use with grammar '"+t.name+"' (not a sub-grammar)");this.operations=Object.create(this.super.operations),this.attributes=Object.create(this.super.attributes),this.attributeKeys=Object.create(null);for(const u in this.attributes)Object.defineProperty(this.attributeKeys,u,{value:fn.uniqueId(u)})}else this.operations=Object.create(null),this.attributes=Object.create(null),this.attributeKeys=Object.create(null)}ce.prototype.toString=function(){return"[semantics for "+this.grammar.name+"]"};ce.prototype.checkActionDictsIfHaventAlready=function(){this.checkedActionDicts||(this.checkActionDicts(),this.checkedActionDicts=!0)};ce.prototype.checkActionDicts=function(){let t;for(t in this.operations)this.operations[t].checkActionDict(this.grammar);for(t in this.attributes)this.attributes[t].checkActionDict(this.grammar)};ce.prototype.toRecipe=function(t){function e(u){return u.super!==ce.BuiltInSemantics._getSemantics()}let r=`(function(g) {
`;if(e(this)){r+="  var semantics = "+this.super.toRecipe(!0)+"(g";const u=this.super.grammar;let n=this.grammar;for(;n!==u;)r+=".superGrammar",n=n.superGrammar;r+=`);
`,r+="  return g.extendSemantics(semantics)"}else r+="  return g.createSemantics()";return["Operation","Attribute"].forEach(u=>{const n=this[u.toLowerCase()+"s"];Object.keys(n).forEach(a=>{const{actionDict:s,formals:f,builtInDefault:i}=n[a];let c=a;f.length>0&&(c+="("+f.join(", ")+")");let l;e(this)&&this.super[u.toLowerCase()+"s"][a]?l="extend"+u:l="add"+u,r+=`
    .`+l+"("+JSON.stringify(c)+", {";const o=[];Object.keys(s).forEach(D=>{if(s[D]!==i){let p=s[D].toString().trim();p=p.replace(/^.*\(/,"function("),o.push(`
      `+JSON.stringify(D)+": "+p)}}),r+=o.join(",")+`
    })`})}),r+=`;
  })`,t||(r=`(function() {
  var grammar = this.fromRecipe(`+this.grammar.toRecipe()+`);
  var semantics = `+r+`(grammar);
  return semantics;
});
`),r};function Dn(t,e){if(!ce.prototypeGrammar)return Wt.assert(t.indexOf("(")===-1),{name:t,formals:[]};const r=ce.prototypeGrammar.match(t,e==="operation"?"OperationSignature":"AttributeSignature");if(r.failed())throw new Error(r.message);return ce.prototypeGrammarSemantics(r).parse()}function vi(t,e,r){return function(...u){const a=(this._semantics.operations[e]||this._semantics.attributes[e]).formals.map(s=>this.args[s]);if(!this.isIteration()&&u.length===1)return r.apply(u[0],a);throw bi.missingSemanticAction(this.ctorName,e,t,it)}}ce.prototype.addOperationOrAttribute=function(t,e,r){const u=t+"s",n=Dn(e,t),{name:a}=n,{formals:s}=n;this.assertNewName(a,t);const f=vi(t,a,l),i={_default:f};Object.keys(r).forEach(o=>{i[o]=r[o]});const c=t==="operation"?new st(a,s,i,f):new Zt(a,i,f);c.checkActionDict(this.grammar),this[u][a]=c;function l(...o){const D=this._semantics[u][a];if(arguments.length!==D.formals.length)throw new Error("Invalid number of arguments passed to "+a+" "+t+" (expected "+D.formals.length+", got "+arguments.length+")");const p=Object.create(null);for(const[A,_]of Object.entries(o)){const B=D.formals[A];p[B]=_}const d=this.args;this.args=p;const C=D.execute(this._semantics,this);return this.args=d,C}t==="operation"?(this.Wrapper.prototype[a]=l,this.Wrapper.prototype[a].toString=function(){return"["+a+" operation]"}):(Object.defineProperty(this.Wrapper.prototype,a,{get:l,configurable:!0}),Object.defineProperty(this.attributeKeys,a,{value:fn.uniqueId(a)}))};ce.prototype.extendOperationOrAttribute=function(t,e,r){const u=t+"s";if(Dn(e,"attribute"),!(this.super&&e in this.super[u]))throw new Error("Cannot extend "+t+" '"+e+"': did not inherit an "+t+" with that name");if(Yt(this[u],e))throw new Error("Cannot extend "+t+" '"+e+"' again");const n=this[u][e].formals,a=this[u][e].actionDict,s=Object.create(a);Object.keys(r).forEach(f=>{s[f]=r[f]}),this[u][e]=t==="operation"?new st(e,n,s):new Zt(e,s),this[u][e].checkActionDict(this.grammar)};ce.prototype.assertNewName=function(t,e){if(Yt(hn.prototype,t))throw new Error("Cannot add "+e+" '"+t+"': that's a reserved name");if(t in this.operations)throw new Error("Cannot add "+e+" '"+t+"': an operation with that name already exists");if(t in this.attributes)throw new Error("Cannot add "+e+" '"+t+"': an attribute with that name already exists")};ce.prototype.wrap=function(t,e,r){const u=r||e;return t instanceof this.Wrapper?t:new this.Wrapper(t,e,u)};ce.createSemantics=function(t,e){const r=new ce(t,e!==void 0?e:ce.BuiltInSemantics._getSemantics()),u=function(a){if(!(a instanceof Bi))throw new TypeError("Semantics expected a MatchResult, but got "+Wt.unexpectedObjToString(a));if(a.failed())throw new TypeError("cannot apply Semantics to "+a.toString());const s=a._cst;if(s.grammar!==t)throw new Error("Cannot use a MatchResult from grammar '"+s.grammar.name+"' with a semantics for '"+t.name+"'");const f=new yi(a.input);return r.wrap(s,f.interval(a._cstOffset,a.input.length))};return u.addOperation=function(n,a){return r.addOperationOrAttribute("operation",n,a),u},u.extendOperation=function(n,a){return r.extendOperationOrAttribute("operation",n,a),u},u.addAttribute=function(n,a){return r.addOperationOrAttribute("attribute",n,a),u},u.extendAttribute=function(n,a){return r.extendOperationOrAttribute("attribute",n,a),u},u._getActionDict=function(n){const a=r.operations[n]||r.attributes[n];if(!a)throw new Error('"'+n+'" is not a valid operation or attribute name in this semantics for "'+t.name+'"');return a.actionDict},u._remove=function(n){let a;return n in r.operations?(a=r.operations[n],delete r.operations[n]):n in r.attributes&&(a=r.attributes[n],delete r.attributes[n]),delete r.Wrapper.prototype[n],a},u.getOperationNames=function(){return Object.keys(r.operations)},u.getAttributeNames=function(){return Object.keys(r.attributes)},u.getGrammar=function(){return r.grammar},u.toRecipe=function(n){return r.toRecipe(n)},u.toString=r.toString.bind(r),u._getSemantics=function(){return r},u};class st{constructor(e,r,u,n){this.name=e,this.formals=r,this.actionDict=u,this.builtInDefault=n}checkActionDict(e){e._checkTopDownActionDict(this.typeName,this.name,this.actionDict)}execute(e,r){try{const{ctorName:u}=r._node;let n=this.actionDict[u];return n?(it.push([this,u]),n.apply(r,r._children())):r.isNonterminal()&&(n=this.actionDict._nonterminal,n)?(it.push([this,"_nonterminal",u]),n.apply(r,r._children())):(it.push([this,"default action",u]),this.actionDict._default.apply(r,r._children()))}finally{it.pop()}}}st.prototype.typeName="operation";class Zt extends st{constructor(e,r,u){super(e,[],r,u)}execute(e,r){const u=r._node,n=e.attributeKeys[this.name];return Yt(u,n)||(u[n]=st.prototype.execute.call(this,e,r)),u[n]}}Zt.prototype.typeName="attribute";var En=ce;const xi=ci,Si=_i,mr=En,fr=H,hr=Pe,Te=ze,Dr=["_iter","_terminal","_nonterminal","_default"];function Er(t){return Object.keys(t.rules).sort().map(e=>t.rules[e])}const Ti=t=>t.replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029");function Ue(t,e,r,u){if(this.name=t,this.superGrammar=e,this.rules=r,u){if(!(u in r))throw new Error("Invalid start rule: '"+u+"' is not a rule in grammar '"+t+"'");this.defaultStartRule=u}}let gn,Cn;Ue.initApplicationParser=function(t,e){gn=t,Cn=e};Ue.prototype={matcher(){return new Si(this)},isBuiltIn(){return this===Ue.ProtoBuiltInRules||this===Ue.BuiltInRules},equals(t){if(this===t)return!0;if(t==null||this.name!==t.name||this.defaultStartRule!==t.defaultStartRule||!(this.superGrammar===t.superGrammar||this.superGrammar.equals(t.superGrammar)))return!1;const e=Er(this),r=Er(t);return e.length===r.length&&e.every((u,n)=>u.description===r[n].description&&u.formals.join(",")===r[n].formals.join(",")&&u.body.toString()===r[n].body.toString())},match(t,e){const r=this.matcher();return r.replaceInputRange(0,0,t),r.match(e)},trace(t,e){const r=this.matcher();return r.replaceInputRange(0,0,t),r.trace(e)},createSemantics(){return mr.createSemantics(this)},extendSemantics(t){return mr.createSemantics(this,t._getSemantics())},_checkTopDownActionDict(t,e,r){const u=[];for(const n in r){const a=r[n];if(!Dr.includes(n)&&!(n in this.rules)){u.push(`'${n}' is not a valid semantic action for '${this.name}'`);continue}if(typeof a!="function"){u.push(`'${n}' must be a function in an action dictionary for '${this.name}'`);continue}const f=a.length,i=this._topDownActionArity(n);if(f!==i){let c;n==="_iter"||n==="_nonterminal"?c=`it should use a rest parameter, e.g. \`${n}(...children) {}\`. NOTE: this is new in Ohm v16 — see https://ohmjs.org/d/ati for details.`:c=`expected ${i}, got ${f}`,u.push(`Semantic action '${n}' has the wrong arity: ${c}`)}}if(u.length>0){const n=u.map(s=>"- "+s),a=new Error([`Found errors in the action dictionary of the '${e}' ${t}:`,...n].join(`
`));throw a.problems=u,a}},_topDownActionArity(t){return Dr.includes(t)?0:this.rules[t].body.getArity()},_inheritsFrom(t){let e=this.superGrammar;for(;e;){if(e.equals(t,!0))return!0;e=e.superGrammar}return!1},toRecipe(t=void 0){const e={};this.source&&(e.source=this.source.contents);let r=null;this.defaultStartRule&&(r=this.defaultStartRule);const u={};Object.keys(this.rules).forEach(s=>{const f=this.rules[s],{body:i}=f,c=!this.superGrammar||!this.superGrammar.rules[s];let l;c?l="define":l=i instanceof Te.Extend?"extend":"override";const o={};if(f.source&&this.source){const d=f.source.relativeTo(this.source);o.sourceInterval=[d.startIdx,d.endIdx]}const D=c?f.description:null,p=i.outputRecipe(f.formals,this.source);u[s]=[l,o,D,f.formals,p]});let n="null";t?n=t:this.superGrammar&&!this.superGrammar.isBuiltIn()&&(n=this.superGrammar.toRecipe());const a=[...["grammar",e,this.name].map(JSON.stringify),n,...[r,u].map(JSON.stringify)];return Ti(`[${a.join(",")}]`)},toOperationActionDictionaryTemplate(){return this._toOperationOrAttributeActionDictionaryTemplate()},toAttributeActionDictionaryTemplate(){return this._toOperationOrAttributeActionDictionaryTemplate()},_toOperationOrAttributeActionDictionaryTemplate(){const t=new fr.StringBuffer;t.append("{");let e=!0;for(const r in this.rules){const{body:u}=this.rules[r];e?e=!1:t.append(","),t.append(`
`),t.append("  "),this.addSemanticActionTemplate(r,u,t)}return t.append(`
}`),t.contents()},addSemanticActionTemplate(t,e,r){r.append(t),r.append(": function(");const u=this._topDownActionArity(t);r.append(fr.repeat("_",u).join(", ")),r.append(`) {
`),r.append("  }")},parseApplication(t){let e;if(t.indexOf("<")===-1)e=new Te.Apply(t);else{const u=gn.match(t,"Base_application");e=Cn(u,{})}if(!(e.ruleName in this.rules))throw hr.undeclaredRule(e.ruleName,this.name);const{formals:r}=this.rules[e.ruleName];if(r.length!==e.args.length){const{source:u}=this.rules[e.ruleName];throw hr.wrongNumberOfParameters(e.ruleName,r.length,e.args.length,u)}return e}};Ue.ProtoBuiltInRules=new Ue("ProtoBuiltInRules",void 0,{any:{body:Te.any,formals:[],description:"any character",primitive:!0},end:{body:Te.end,formals:[],description:"end of input",primitive:!0},caseInsensitive:{body:new xi(new Te.Param(0)),formals:["str"],primitive:!0},lower:{body:new Te.UnicodeChar("Ll"),formals:[],description:"a lowercase letter",primitive:!0},upper:{body:new Te.UnicodeChar("Lu"),formals:[],description:"an uppercase letter",primitive:!0},unicodeLtmo:{body:new Te.UnicodeChar("Ltmo"),formals:[],description:"a Unicode character in Lt, Lm, or Lo",primitive:!0},spaces:{body:new Te.Star(new Te.Apply("space")),formals:[]},space:{body:new Te.Range("\0"," "),formals:[],description:"a space"}});var yt=Ue;const Ot=yt,Ii=Kt,An=H,Oe=Pe,wi=ze;function ve(t){this.name=t}ve.prototype.sourceInterval=function(t,e){return this.source.subInterval(t,e-t)};ve.prototype.ensureSuperGrammar=function(){return this.superGrammar||this.withSuperGrammar(this.name==="BuiltInRules"?Ot.ProtoBuiltInRules:Ot.BuiltInRules),this.superGrammar};ve.prototype.ensureSuperGrammarRuleForOverriding=function(t,e){const r=this.ensureSuperGrammar().rules[t];if(!r)throw Oe.cannotOverrideUndeclaredRule(t,this.superGrammar.name,e);return r};ve.prototype.installOverriddenOrExtendedRule=function(t,e,r,u){const n=An.getDuplicates(e);if(n.length>0)throw Oe.duplicateParameterNames(t,n,u);const a=this.ensureSuperGrammar().rules[t],s=a.formals,f=s?s.length:0;if(e.length!==f)throw Oe.wrongNumberOfParameters(t,f,e.length,u);return this.install(t,e,r,a.description,u)};ve.prototype.install=function(t,e,r,u,n){return this.rules[t]={body:r.introduceParams(e),formals:e,description:u,source:n},this};ve.prototype.withSuperGrammar=function(t){if(this.superGrammar)throw new Error("the super grammar of a GrammarDecl cannot be set more than once");return this.superGrammar=t,this.rules=Object.create(t.rules),t.isBuiltIn()||(this.defaultStartRule=t.defaultStartRule),this};ve.prototype.withDefaultStartRule=function(t){return this.defaultStartRule=t,this};ve.prototype.withSource=function(t){return this.source=new Ii(t).interval(0,t.length),this};ve.prototype.build=function(){const t=new Ot(this.name,this.ensureSuperGrammar(),this.rules,this.defaultStartRule),e=[];let r=!1;return Object.keys(t.rules).forEach(u=>{const{body:n}=t.rules[u];try{n.assertChoicesHaveUniformArity(u)}catch(a){e.push(a)}try{n.assertAllApplicationsAreValid(u,t)}catch(a){e.push(a),r=!0}}),r||Object.keys(t.rules).forEach(u=>{const{body:n}=t.rules[u];try{n.assertIteratedExprsAreNotNullable(t,[])}catch(a){e.push(a)}}),e.length>0&&Oe.throwErrors(e),this.source&&(t.source=this.source),t};ve.prototype.define=function(t,e,r,u,n){if(this.ensureSuperGrammar(),this.superGrammar.rules[t])throw Oe.duplicateRuleDeclaration(t,this.name,this.superGrammar.name,n);if(this.rules[t])throw Oe.duplicateRuleDeclaration(t,this.name,this.name,n);const a=An.getDuplicates(e);if(a.length>0)throw Oe.duplicateParameterNames(t,a,n);return this.install(t,e,r,u,n)};ve.prototype.override=function(t,e,r,u,n){return this.ensureSuperGrammarRuleForOverriding(t,n),this.installOverriddenOrExtendedRule(t,e,r,n),this};ve.prototype.extend=function(t,e,r,u,n){if(!this.ensureSuperGrammar().rules[t])throw Oe.cannotExtendUndeclaredRule(t,this.superGrammar.name,n);const s=new wi.Extend(this.superGrammar,t,r);return s.source=r.source,this.installOverriddenOrExtendedRule(t,e,s,n),this};var Li=ve;const Pi=yt,gr=Li,W=ze;function _n(){}_n.prototype={currentDecl:null,currentRuleName:null,newGrammar(t){return new gr(t)},grammar(t,e,r,u,n){const a=new gr(e);return r&&a.withSuperGrammar(r instanceof Pi?r:this.fromRecipe(r)),u&&a.withDefaultStartRule(u),t&&t.source&&a.withSource(t.source),this.currentDecl=a,Object.keys(n).forEach(s=>{this.currentRuleName=s;const f=n[s],i=f[0],c=f[1],l=f[2],o=f[3],D=this.fromRecipe(f[4]);let p;a.source&&c&&c.sourceInterval&&(p=a.source.subInterval(c.sourceInterval[0],c.sourceInterval[1]-c.sourceInterval[0])),a[i](s,o,D,l,p)}),this.currentRuleName=this.currentDecl=null,a.build()},terminal(t){return new W.Terminal(t)},range(t,e){return new W.Range(t,e)},param(t){return new W.Param(t)},alt(...t){let e=[];for(let r of t)r instanceof W.PExpr||(r=this.fromRecipe(r)),r instanceof W.Alt?e=e.concat(r.terms):e.push(r);return e.length===1?e[0]:new W.Alt(e)},seq(...t){let e=[];for(let r of t)r instanceof W.PExpr||(r=this.fromRecipe(r)),r instanceof W.Seq?e=e.concat(r.factors):e.push(r);return e.length===1?e[0]:new W.Seq(e)},star(t){return t instanceof W.PExpr||(t=this.fromRecipe(t)),new W.Star(t)},plus(t){return t instanceof W.PExpr||(t=this.fromRecipe(t)),new W.Plus(t)},opt(t){return t instanceof W.PExpr||(t=this.fromRecipe(t)),new W.Opt(t)},not(t){return t instanceof W.PExpr||(t=this.fromRecipe(t)),new W.Not(t)},la(t){return this.lookahead(t)},lookahead(t){return t instanceof W.PExpr||(t=this.fromRecipe(t)),new W.Lookahead(t)},lex(t){return t instanceof W.PExpr||(t=this.fromRecipe(t)),new W.Lex(t)},app(t,e){return e&&e.length>0&&(e=e.map(function(r){return r instanceof W.PExpr?r:this.fromRecipe(r)},this)),new W.Apply(t,e)},splice(t,e){return new W.Splice(this.currentDecl.superGrammar,this.currentRuleName,t.map(r=>this.fromRecipe(r)),e.map(r=>this.fromRecipe(r)))},fromRecipe(t){const e=t[0]==="grammar"?t.slice(1):t.slice(2),r=this[t[0]](...e),u=t[1];return u&&u.sourceInterval&&this.currentDecl&&r.withSource(this.currentDecl.sourceInterval(...u.sourceInterval)),r}};var yn=_n,Ni="16.6.0",Oi={version:Ni},ki=typeof __GLOBAL_OHM_VERSION__=="string"?__GLOBAL_OHM_VERSION__:Oi.version,lt={};const Cr=yn;function Mi(t){return typeof t=="function"?t.call(new Cr):(typeof t=="string"&&(t=JSON.parse(t)),new Cr().fromRecipe(t))}lt.makeRecipe=Mi;var{makeRecipe:Ri}=lt,$i=Ri(["grammar",{source:`BuiltInRules {

  alnum  (an alpha-numeric character)
    = letter
    | digit

  letter  (a letter)
    = lower
    | upper
    | unicodeLtmo

  digit  (a digit)
    = "0".."9"

  hexDigit  (a hexadecimal digit)
    = digit
    | "a".."f"
    | "A".."F"

  ListOf<elem, sep>
    = NonemptyListOf<elem, sep>
    | EmptyListOf<elem, sep>

  NonemptyListOf<elem, sep>
    = elem (sep elem)*

  EmptyListOf<elem, sep>
    = /* nothing */

  listOf<elem, sep>
    = nonemptyListOf<elem, sep>
    | emptyListOf<elem, sep>

  nonemptyListOf<elem, sep>
    = elem (sep elem)*

  emptyListOf<elem, sep>
    = /* nothing */

  // Allows a syntactic rule application within a lexical context.
  applySyntactic<app> = app
}`},"BuiltInRules",null,null,{alnum:["define",{sourceInterval:[18,78]},"an alpha-numeric character",[],["alt",{sourceInterval:[60,78]},["app",{sourceInterval:[60,66]},"letter",[]],["app",{sourceInterval:[73,78]},"digit",[]]]],letter:["define",{sourceInterval:[82,142]},"a letter",[],["alt",{sourceInterval:[107,142]},["app",{sourceInterval:[107,112]},"lower",[]],["app",{sourceInterval:[119,124]},"upper",[]],["app",{sourceInterval:[131,142]},"unicodeLtmo",[]]]],digit:["define",{sourceInterval:[146,177]},"a digit",[],["range",{sourceInterval:[169,177]},"0","9"]],hexDigit:["define",{sourceInterval:[181,254]},"a hexadecimal digit",[],["alt",{sourceInterval:[219,254]},["app",{sourceInterval:[219,224]},"digit",[]],["range",{sourceInterval:[231,239]},"a","f"],["range",{sourceInterval:[246,254]},"A","F"]]],ListOf:["define",{sourceInterval:[258,336]},null,["elem","sep"],["alt",{sourceInterval:[282,336]},["app",{sourceInterval:[282,307]},"NonemptyListOf",[["param",{sourceInterval:[297,301]},0],["param",{sourceInterval:[303,306]},1]]],["app",{sourceInterval:[314,336]},"EmptyListOf",[["param",{sourceInterval:[326,330]},0],["param",{sourceInterval:[332,335]},1]]]]],NonemptyListOf:["define",{sourceInterval:[340,388]},null,["elem","sep"],["seq",{sourceInterval:[372,388]},["param",{sourceInterval:[372,376]},0],["star",{sourceInterval:[377,388]},["seq",{sourceInterval:[378,386]},["param",{sourceInterval:[378,381]},1],["param",{sourceInterval:[382,386]},0]]]]],EmptyListOf:["define",{sourceInterval:[392,434]},null,["elem","sep"],["seq",{sourceInterval:[438,438]}]],listOf:["define",{sourceInterval:[438,516]},null,["elem","sep"],["alt",{sourceInterval:[462,516]},["app",{sourceInterval:[462,487]},"nonemptyListOf",[["param",{sourceInterval:[477,481]},0],["param",{sourceInterval:[483,486]},1]]],["app",{sourceInterval:[494,516]},"emptyListOf",[["param",{sourceInterval:[506,510]},0],["param",{sourceInterval:[512,515]},1]]]]],nonemptyListOf:["define",{sourceInterval:[520,568]},null,["elem","sep"],["seq",{sourceInterval:[552,568]},["param",{sourceInterval:[552,556]},0],["star",{sourceInterval:[557,568]},["seq",{sourceInterval:[558,566]},["param",{sourceInterval:[558,561]},1],["param",{sourceInterval:[562,566]},0]]]]],emptyListOf:["define",{sourceInterval:[572,682]},null,["elem","sep"],["seq",{sourceInterval:[685,685]}]],applySyntactic:["define",{sourceInterval:[685,710]},null,["app"],["param",{sourceInterval:[707,710]},0]]}]);const Vi=yt;Vi.BuiltInRules=$i;var{makeRecipe:ji}=lt,qi=ji(["grammar",{source:`OperationsAndAttributes {

  AttributeSignature =
    name

  OperationSignature =
    name Formals?

  Formals
    = "(" ListOf<name, ","> ")"

  name  (a name)
    = nameFirst nameRest*

  nameFirst
    = "_"
    | letter

  nameRest
    = "_"
    | alnum

}`},"OperationsAndAttributes",null,"AttributeSignature",{AttributeSignature:["define",{sourceInterval:[29,58]},null,[],["app",{sourceInterval:[54,58]},"name",[]]],OperationSignature:["define",{sourceInterval:[62,100]},null,[],["seq",{sourceInterval:[87,100]},["app",{sourceInterval:[87,91]},"name",[]],["opt",{sourceInterval:[92,100]},["app",{sourceInterval:[92,99]},"Formals",[]]]]],Formals:["define",{sourceInterval:[104,143]},null,[],["seq",{sourceInterval:[118,143]},["terminal",{sourceInterval:[118,121]},"("],["app",{sourceInterval:[122,139]},"ListOf",[["app",{sourceInterval:[129,133]},"name",[]],["terminal",{sourceInterval:[135,138]},","]]],["terminal",{sourceInterval:[140,143]},")"]]],name:["define",{sourceInterval:[147,187]},"a name",[],["seq",{sourceInterval:[168,187]},["app",{sourceInterval:[168,177]},"nameFirst",[]],["star",{sourceInterval:[178,187]},["app",{sourceInterval:[178,186]},"nameRest",[]]]]],nameFirst:["define",{sourceInterval:[191,223]},null,[],["alt",{sourceInterval:[207,223]},["terminal",{sourceInterval:[207,210]},"_"],["app",{sourceInterval:[217,223]},"letter",[]]]],nameRest:["define",{sourceInterval:[227,257]},null,[],["alt",{sourceInterval:[242,257]},["terminal",{sourceInterval:[242,245]},"_"],["app",{sourceInterval:[252,257]},"alnum",[]]]]}]);const ht=En,Gi=ke;Gi.awaitBuiltInRules(t=>{const e=qi;Ui(t),Hi(e)});function Ui(t){const e={empty(){return this.iteration()},nonEmpty(r,u,n){return this.iteration([r].concat(n.children))}};ht.BuiltInSemantics=ht.createSemantics(t,null).addOperation("asIteration",{emptyListOf:e.empty,nonemptyListOf:e.nonEmpty,EmptyListOf:e.empty,NonemptyListOf:e.nonEmpty})}function Hi(t){ht.prototypeGrammarSemantics=t.createSemantics().addOperation("parse",{AttributeSignature(e){return{name:e.parse(),formals:[]}},OperationSignature(e,r){return{name:e.parse(),formals:r.children.map(u=>u.parse())[0]||[]}},Formals(e,r,u){return r.asIteration().children.map(n=>n.parse())},name(e,r){return this.sourceString}}),ht.prototypeGrammar=t}var{makeRecipe:zi}=lt,Xi=zi(["grammar",{source:`Ohm {

  Grammars
    = Grammar*

  Grammar
    = ident SuperGrammar? "{" Rule* "}"

  SuperGrammar
    = "<:" ident

  Rule
    = ident Formals? ruleDescr? "="  RuleBody  -- define
    | ident Formals?            ":=" OverrideRuleBody  -- override
    | ident Formals?            "+=" RuleBody  -- extend

  RuleBody
    = "|"? NonemptyListOf<TopLevelTerm, "|">

  TopLevelTerm
    = Seq caseName  -- inline
    | Seq

  OverrideRuleBody
    = "|"? NonemptyListOf<OverrideTopLevelTerm, "|">

  OverrideTopLevelTerm
    = "..."  -- superSplice
    | TopLevelTerm

  Formals
    = "<" ListOf<ident, ","> ">"

  Params
    = "<" ListOf<Seq, ","> ">"

  Alt
    = NonemptyListOf<Seq, "|">

  Seq
    = Iter*

  Iter
    = Pred "*"  -- star
    | Pred "+"  -- plus
    | Pred "?"  -- opt
    | Pred

  Pred
    = "~" Lex  -- not
    | "&" Lex  -- lookahead
    | Lex

  Lex
    = "#" Base  -- lex
    | Base

  Base
    = ident Params? ~(ruleDescr? "=" | ":=" | "+=")  -- application
    | oneCharTerminal ".." oneCharTerminal           -- range
    | terminal                                       -- terminal
    | "(" Alt ")"                                    -- paren

  ruleDescr  (a rule description)
    = "(" ruleDescrText ")"

  ruleDescrText
    = (~")" any)*

  caseName
    = "--" (~"\\n" space)* name (~"\\n" space)* ("\\n" | &"}")

  name  (a name)
    = nameFirst nameRest*

  nameFirst
    = "_"
    | letter

  nameRest
    = "_"
    | alnum

  ident  (an identifier)
    = name

  terminal
    = "\\"" terminalChar* "\\""

  oneCharTerminal
    = "\\"" terminalChar "\\""

  terminalChar
    = escapeChar
      | ~"\\\\" ~"\\"" ~"\\n" "\\u{0}".."\\u{10FFFF}"

  escapeChar  (an escape sequence)
    = "\\\\\\\\"                                     -- backslash
    | "\\\\\\""                                     -- doubleQuote
    | "\\\\\\'"                                     -- singleQuote
    | "\\\\b"                                      -- backspace
    | "\\\\n"                                      -- lineFeed
    | "\\\\r"                                      -- carriageReturn
    | "\\\\t"                                      -- tab
    | "\\\\u{" hexDigit hexDigit? hexDigit?
             hexDigit? hexDigit? hexDigit? "}"   -- unicodeCodePoint
    | "\\\\u" hexDigit hexDigit hexDigit hexDigit  -- unicodeEscape
    | "\\\\x" hexDigit hexDigit                    -- hexEscape

  space
   += comment

  comment
    = "//" (~"\\n" any)* &("\\n" | end)  -- singleLine
    | "/*" (~"*/" any)* "*/"  -- multiLine

  tokens = token*

  token = caseName | comment | ident | operator | punctuation | terminal | any

  operator = "<:" | "=" | ":=" | "+=" | "*" | "+" | "?" | "~" | "&"

  punctuation = "<" | ">" | "," | "--"
}`},"Ohm",null,"Grammars",{Grammars:["define",{sourceInterval:[9,32]},null,[],["star",{sourceInterval:[24,32]},["app",{sourceInterval:[24,31]},"Grammar",[]]]],Grammar:["define",{sourceInterval:[36,83]},null,[],["seq",{sourceInterval:[50,83]},["app",{sourceInterval:[50,55]},"ident",[]],["opt",{sourceInterval:[56,69]},["app",{sourceInterval:[56,68]},"SuperGrammar",[]]],["terminal",{sourceInterval:[70,73]},"{"],["star",{sourceInterval:[74,79]},["app",{sourceInterval:[74,78]},"Rule",[]]],["terminal",{sourceInterval:[80,83]},"}"]]],SuperGrammar:["define",{sourceInterval:[87,116]},null,[],["seq",{sourceInterval:[106,116]},["terminal",{sourceInterval:[106,110]},"<:"],["app",{sourceInterval:[111,116]},"ident",[]]]],Rule_define:["define",{sourceInterval:[131,181]},null,[],["seq",{sourceInterval:[131,170]},["app",{sourceInterval:[131,136]},"ident",[]],["opt",{sourceInterval:[137,145]},["app",{sourceInterval:[137,144]},"Formals",[]]],["opt",{sourceInterval:[146,156]},["app",{sourceInterval:[146,155]},"ruleDescr",[]]],["terminal",{sourceInterval:[157,160]},"="],["app",{sourceInterval:[162,170]},"RuleBody",[]]]],Rule_override:["define",{sourceInterval:[188,248]},null,[],["seq",{sourceInterval:[188,235]},["app",{sourceInterval:[188,193]},"ident",[]],["opt",{sourceInterval:[194,202]},["app",{sourceInterval:[194,201]},"Formals",[]]],["terminal",{sourceInterval:[214,218]},":="],["app",{sourceInterval:[219,235]},"OverrideRuleBody",[]]]],Rule_extend:["define",{sourceInterval:[255,305]},null,[],["seq",{sourceInterval:[255,294]},["app",{sourceInterval:[255,260]},"ident",[]],["opt",{sourceInterval:[261,269]},["app",{sourceInterval:[261,268]},"Formals",[]]],["terminal",{sourceInterval:[281,285]},"+="],["app",{sourceInterval:[286,294]},"RuleBody",[]]]],Rule:["define",{sourceInterval:[120,305]},null,[],["alt",{sourceInterval:[131,305]},["app",{sourceInterval:[131,170]},"Rule_define",[]],["app",{sourceInterval:[188,235]},"Rule_override",[]],["app",{sourceInterval:[255,294]},"Rule_extend",[]]]],RuleBody:["define",{sourceInterval:[309,362]},null,[],["seq",{sourceInterval:[324,362]},["opt",{sourceInterval:[324,328]},["terminal",{sourceInterval:[324,327]},"|"]],["app",{sourceInterval:[329,362]},"NonemptyListOf",[["app",{sourceInterval:[344,356]},"TopLevelTerm",[]],["terminal",{sourceInterval:[358,361]},"|"]]]]],TopLevelTerm_inline:["define",{sourceInterval:[385,408]},null,[],["seq",{sourceInterval:[385,397]},["app",{sourceInterval:[385,388]},"Seq",[]],["app",{sourceInterval:[389,397]},"caseName",[]]]],TopLevelTerm:["define",{sourceInterval:[366,418]},null,[],["alt",{sourceInterval:[385,418]},["app",{sourceInterval:[385,397]},"TopLevelTerm_inline",[]],["app",{sourceInterval:[415,418]},"Seq",[]]]],OverrideRuleBody:["define",{sourceInterval:[422,491]},null,[],["seq",{sourceInterval:[445,491]},["opt",{sourceInterval:[445,449]},["terminal",{sourceInterval:[445,448]},"|"]],["app",{sourceInterval:[450,491]},"NonemptyListOf",[["app",{sourceInterval:[465,485]},"OverrideTopLevelTerm",[]],["terminal",{sourceInterval:[487,490]},"|"]]]]],OverrideTopLevelTerm_superSplice:["define",{sourceInterval:[522,543]},null,[],["terminal",{sourceInterval:[522,527]},"..."]],OverrideTopLevelTerm:["define",{sourceInterval:[495,562]},null,[],["alt",{sourceInterval:[522,562]},["app",{sourceInterval:[522,527]},"OverrideTopLevelTerm_superSplice",[]],["app",{sourceInterval:[550,562]},"TopLevelTerm",[]]]],Formals:["define",{sourceInterval:[566,606]},null,[],["seq",{sourceInterval:[580,606]},["terminal",{sourceInterval:[580,583]},"<"],["app",{sourceInterval:[584,602]},"ListOf",[["app",{sourceInterval:[591,596]},"ident",[]],["terminal",{sourceInterval:[598,601]},","]]],["terminal",{sourceInterval:[603,606]},">"]]],Params:["define",{sourceInterval:[610,647]},null,[],["seq",{sourceInterval:[623,647]},["terminal",{sourceInterval:[623,626]},"<"],["app",{sourceInterval:[627,643]},"ListOf",[["app",{sourceInterval:[634,637]},"Seq",[]],["terminal",{sourceInterval:[639,642]},","]]],["terminal",{sourceInterval:[644,647]},">"]]],Alt:["define",{sourceInterval:[651,685]},null,[],["app",{sourceInterval:[661,685]},"NonemptyListOf",[["app",{sourceInterval:[676,679]},"Seq",[]],["terminal",{sourceInterval:[681,684]},"|"]]]],Seq:["define",{sourceInterval:[689,704]},null,[],["star",{sourceInterval:[699,704]},["app",{sourceInterval:[699,703]},"Iter",[]]]],Iter_star:["define",{sourceInterval:[719,736]},null,[],["seq",{sourceInterval:[719,727]},["app",{sourceInterval:[719,723]},"Pred",[]],["terminal",{sourceInterval:[724,727]},"*"]]],Iter_plus:["define",{sourceInterval:[743,760]},null,[],["seq",{sourceInterval:[743,751]},["app",{sourceInterval:[743,747]},"Pred",[]],["terminal",{sourceInterval:[748,751]},"+"]]],Iter_opt:["define",{sourceInterval:[767,783]},null,[],["seq",{sourceInterval:[767,775]},["app",{sourceInterval:[767,771]},"Pred",[]],["terminal",{sourceInterval:[772,775]},"?"]]],Iter:["define",{sourceInterval:[708,794]},null,[],["alt",{sourceInterval:[719,794]},["app",{sourceInterval:[719,727]},"Iter_star",[]],["app",{sourceInterval:[743,751]},"Iter_plus",[]],["app",{sourceInterval:[767,775]},"Iter_opt",[]],["app",{sourceInterval:[790,794]},"Pred",[]]]],Pred_not:["define",{sourceInterval:[809,824]},null,[],["seq",{sourceInterval:[809,816]},["terminal",{sourceInterval:[809,812]},"~"],["app",{sourceInterval:[813,816]},"Lex",[]]]],Pred_lookahead:["define",{sourceInterval:[831,852]},null,[],["seq",{sourceInterval:[831,838]},["terminal",{sourceInterval:[831,834]},"&"],["app",{sourceInterval:[835,838]},"Lex",[]]]],Pred:["define",{sourceInterval:[798,862]},null,[],["alt",{sourceInterval:[809,862]},["app",{sourceInterval:[809,816]},"Pred_not",[]],["app",{sourceInterval:[831,838]},"Pred_lookahead",[]],["app",{sourceInterval:[859,862]},"Lex",[]]]],Lex_lex:["define",{sourceInterval:[876,892]},null,[],["seq",{sourceInterval:[876,884]},["terminal",{sourceInterval:[876,879]},"#"],["app",{sourceInterval:[880,884]},"Base",[]]]],Lex:["define",{sourceInterval:[866,903]},null,[],["alt",{sourceInterval:[876,903]},["app",{sourceInterval:[876,884]},"Lex_lex",[]],["app",{sourceInterval:[899,903]},"Base",[]]]],Base_application:["define",{sourceInterval:[918,979]},null,[],["seq",{sourceInterval:[918,963]},["app",{sourceInterval:[918,923]},"ident",[]],["opt",{sourceInterval:[924,931]},["app",{sourceInterval:[924,930]},"Params",[]]],["not",{sourceInterval:[932,963]},["alt",{sourceInterval:[934,962]},["seq",{sourceInterval:[934,948]},["opt",{sourceInterval:[934,944]},["app",{sourceInterval:[934,943]},"ruleDescr",[]]],["terminal",{sourceInterval:[945,948]},"="]],["terminal",{sourceInterval:[951,955]},":="],["terminal",{sourceInterval:[958,962]},"+="]]]]],Base_range:["define",{sourceInterval:[986,1041]},null,[],["seq",{sourceInterval:[986,1022]},["app",{sourceInterval:[986,1001]},"oneCharTerminal",[]],["terminal",{sourceInterval:[1002,1006]},".."],["app",{sourceInterval:[1007,1022]},"oneCharTerminal",[]]]],Base_terminal:["define",{sourceInterval:[1048,1106]},null,[],["app",{sourceInterval:[1048,1056]},"terminal",[]]],Base_paren:["define",{sourceInterval:[1113,1168]},null,[],["seq",{sourceInterval:[1113,1124]},["terminal",{sourceInterval:[1113,1116]},"("],["app",{sourceInterval:[1117,1120]},"Alt",[]],["terminal",{sourceInterval:[1121,1124]},")"]]],Base:["define",{sourceInterval:[907,1168]},null,[],["alt",{sourceInterval:[918,1168]},["app",{sourceInterval:[918,963]},"Base_application",[]],["app",{sourceInterval:[986,1022]},"Base_range",[]],["app",{sourceInterval:[1048,1056]},"Base_terminal",[]],["app",{sourceInterval:[1113,1124]},"Base_paren",[]]]],ruleDescr:["define",{sourceInterval:[1172,1231]},"a rule description",[],["seq",{sourceInterval:[1210,1231]},["terminal",{sourceInterval:[1210,1213]},"("],["app",{sourceInterval:[1214,1227]},"ruleDescrText",[]],["terminal",{sourceInterval:[1228,1231]},")"]]],ruleDescrText:["define",{sourceInterval:[1235,1266]},null,[],["star",{sourceInterval:[1255,1266]},["seq",{sourceInterval:[1256,1264]},["not",{sourceInterval:[1256,1260]},["terminal",{sourceInterval:[1257,1260]},")"]],["app",{sourceInterval:[1261,1264]},"any",[]]]]],caseName:["define",{sourceInterval:[1270,1338]},null,[],["seq",{sourceInterval:[1285,1338]},["terminal",{sourceInterval:[1285,1289]},"--"],["star",{sourceInterval:[1290,1304]},["seq",{sourceInterval:[1291,1302]},["not",{sourceInterval:[1291,1296]},["terminal",{sourceInterval:[1292,1296]},`
`]],["app",{sourceInterval:[1297,1302]},"space",[]]]],["app",{sourceInterval:[1305,1309]},"name",[]],["star",{sourceInterval:[1310,1324]},["seq",{sourceInterval:[1311,1322]},["not",{sourceInterval:[1311,1316]},["terminal",{sourceInterval:[1312,1316]},`
`]],["app",{sourceInterval:[1317,1322]},"space",[]]]],["alt",{sourceInterval:[1326,1337]},["terminal",{sourceInterval:[1326,1330]},`
`],["lookahead",{sourceInterval:[1333,1337]},["terminal",{sourceInterval:[1334,1337]},"}"]]]]],name:["define",{sourceInterval:[1342,1382]},"a name",[],["seq",{sourceInterval:[1363,1382]},["app",{sourceInterval:[1363,1372]},"nameFirst",[]],["star",{sourceInterval:[1373,1382]},["app",{sourceInterval:[1373,1381]},"nameRest",[]]]]],nameFirst:["define",{sourceInterval:[1386,1418]},null,[],["alt",{sourceInterval:[1402,1418]},["terminal",{sourceInterval:[1402,1405]},"_"],["app",{sourceInterval:[1412,1418]},"letter",[]]]],nameRest:["define",{sourceInterval:[1422,1452]},null,[],["alt",{sourceInterval:[1437,1452]},["terminal",{sourceInterval:[1437,1440]},"_"],["app",{sourceInterval:[1447,1452]},"alnum",[]]]],ident:["define",{sourceInterval:[1456,1489]},"an identifier",[],["app",{sourceInterval:[1485,1489]},"name",[]]],terminal:["define",{sourceInterval:[1493,1531]},null,[],["seq",{sourceInterval:[1508,1531]},["terminal",{sourceInterval:[1508,1512]},'"'],["star",{sourceInterval:[1513,1526]},["app",{sourceInterval:[1513,1525]},"terminalChar",[]]],["terminal",{sourceInterval:[1527,1531]},'"']]],oneCharTerminal:["define",{sourceInterval:[1535,1579]},null,[],["seq",{sourceInterval:[1557,1579]},["terminal",{sourceInterval:[1557,1561]},'"'],["app",{sourceInterval:[1562,1574]},"terminalChar",[]],["terminal",{sourceInterval:[1575,1579]},'"']]],terminalChar:["define",{sourceInterval:[1583,1660]},null,[],["alt",{sourceInterval:[1602,1660]},["app",{sourceInterval:[1602,1612]},"escapeChar",[]],["seq",{sourceInterval:[1621,1660]},["not",{sourceInterval:[1621,1626]},["terminal",{sourceInterval:[1622,1626]},"\\"]],["not",{sourceInterval:[1627,1632]},["terminal",{sourceInterval:[1628,1632]},'"']],["not",{sourceInterval:[1633,1638]},["terminal",{sourceInterval:[1634,1638]},`
`]],["range",{sourceInterval:[1639,1660]},"\0","􏿿"]]]],escapeChar_backslash:["define",{sourceInterval:[1703,1758]},null,[],["terminal",{sourceInterval:[1703,1709]},"\\\\"]],escapeChar_doubleQuote:["define",{sourceInterval:[1765,1822]},null,[],["terminal",{sourceInterval:[1765,1771]},'\\"']],escapeChar_singleQuote:["define",{sourceInterval:[1829,1886]},null,[],["terminal",{sourceInterval:[1829,1835]},"\\'"]],escapeChar_backspace:["define",{sourceInterval:[1893,1948]},null,[],["terminal",{sourceInterval:[1893,1898]},"\\b"]],escapeChar_lineFeed:["define",{sourceInterval:[1955,2009]},null,[],["terminal",{sourceInterval:[1955,1960]},"\\n"]],escapeChar_carriageReturn:["define",{sourceInterval:[2016,2076]},null,[],["terminal",{sourceInterval:[2016,2021]},"\\r"]],escapeChar_tab:["define",{sourceInterval:[2083,2132]},null,[],["terminal",{sourceInterval:[2083,2088]},"\\t"]],escapeChar_unicodeCodePoint:["define",{sourceInterval:[2139,2243]},null,[],["seq",{sourceInterval:[2139,2221]},["terminal",{sourceInterval:[2139,2145]},"\\u{"],["app",{sourceInterval:[2146,2154]},"hexDigit",[]],["opt",{sourceInterval:[2155,2164]},["app",{sourceInterval:[2155,2163]},"hexDigit",[]]],["opt",{sourceInterval:[2165,2174]},["app",{sourceInterval:[2165,2173]},"hexDigit",[]]],["opt",{sourceInterval:[2188,2197]},["app",{sourceInterval:[2188,2196]},"hexDigit",[]]],["opt",{sourceInterval:[2198,2207]},["app",{sourceInterval:[2198,2206]},"hexDigit",[]]],["opt",{sourceInterval:[2208,2217]},["app",{sourceInterval:[2208,2216]},"hexDigit",[]]],["terminal",{sourceInterval:[2218,2221]},"}"]]],escapeChar_unicodeEscape:["define",{sourceInterval:[2250,2309]},null,[],["seq",{sourceInterval:[2250,2291]},["terminal",{sourceInterval:[2250,2255]},"\\u"],["app",{sourceInterval:[2256,2264]},"hexDigit",[]],["app",{sourceInterval:[2265,2273]},"hexDigit",[]],["app",{sourceInterval:[2274,2282]},"hexDigit",[]],["app",{sourceInterval:[2283,2291]},"hexDigit",[]]]],escapeChar_hexEscape:["define",{sourceInterval:[2316,2371]},null,[],["seq",{sourceInterval:[2316,2339]},["terminal",{sourceInterval:[2316,2321]},"\\x"],["app",{sourceInterval:[2322,2330]},"hexDigit",[]],["app",{sourceInterval:[2331,2339]},"hexDigit",[]]]],escapeChar:["define",{sourceInterval:[1664,2371]},"an escape sequence",[],["alt",{sourceInterval:[1703,2371]},["app",{sourceInterval:[1703,1709]},"escapeChar_backslash",[]],["app",{sourceInterval:[1765,1771]},"escapeChar_doubleQuote",[]],["app",{sourceInterval:[1829,1835]},"escapeChar_singleQuote",[]],["app",{sourceInterval:[1893,1898]},"escapeChar_backspace",[]],["app",{sourceInterval:[1955,1960]},"escapeChar_lineFeed",[]],["app",{sourceInterval:[2016,2021]},"escapeChar_carriageReturn",[]],["app",{sourceInterval:[2083,2088]},"escapeChar_tab",[]],["app",{sourceInterval:[2139,2221]},"escapeChar_unicodeCodePoint",[]],["app",{sourceInterval:[2250,2291]},"escapeChar_unicodeEscape",[]],["app",{sourceInterval:[2316,2339]},"escapeChar_hexEscape",[]]]],space:["extend",{sourceInterval:[2375,2394]},null,[],["app",{sourceInterval:[2387,2394]},"comment",[]]],comment_singleLine:["define",{sourceInterval:[2412,2458]},null,[],["seq",{sourceInterval:[2412,2443]},["terminal",{sourceInterval:[2412,2416]},"//"],["star",{sourceInterval:[2417,2429]},["seq",{sourceInterval:[2418,2427]},["not",{sourceInterval:[2418,2423]},["terminal",{sourceInterval:[2419,2423]},`
`]],["app",{sourceInterval:[2424,2427]},"any",[]]]],["lookahead",{sourceInterval:[2430,2443]},["alt",{sourceInterval:[2432,2442]},["terminal",{sourceInterval:[2432,2436]},`
`],["app",{sourceInterval:[2439,2442]},"end",[]]]]]],comment_multiLine:["define",{sourceInterval:[2465,2501]},null,[],["seq",{sourceInterval:[2465,2487]},["terminal",{sourceInterval:[2465,2469]},"/*"],["star",{sourceInterval:[2470,2482]},["seq",{sourceInterval:[2471,2480]},["not",{sourceInterval:[2471,2476]},["terminal",{sourceInterval:[2472,2476]},"*/"]],["app",{sourceInterval:[2477,2480]},"any",[]]]],["terminal",{sourceInterval:[2483,2487]},"*/"]]],comment:["define",{sourceInterval:[2398,2501]},null,[],["alt",{sourceInterval:[2412,2501]},["app",{sourceInterval:[2412,2443]},"comment_singleLine",[]],["app",{sourceInterval:[2465,2487]},"comment_multiLine",[]]]],tokens:["define",{sourceInterval:[2505,2520]},null,[],["star",{sourceInterval:[2514,2520]},["app",{sourceInterval:[2514,2519]},"token",[]]]],token:["define",{sourceInterval:[2524,2600]},null,[],["alt",{sourceInterval:[2532,2600]},["app",{sourceInterval:[2532,2540]},"caseName",[]],["app",{sourceInterval:[2543,2550]},"comment",[]],["app",{sourceInterval:[2553,2558]},"ident",[]],["app",{sourceInterval:[2561,2569]},"operator",[]],["app",{sourceInterval:[2572,2583]},"punctuation",[]],["app",{sourceInterval:[2586,2594]},"terminal",[]],["app",{sourceInterval:[2597,2600]},"any",[]]]],operator:["define",{sourceInterval:[2604,2669]},null,[],["alt",{sourceInterval:[2615,2669]},["terminal",{sourceInterval:[2615,2619]},"<:"],["terminal",{sourceInterval:[2622,2625]},"="],["terminal",{sourceInterval:[2628,2632]},":="],["terminal",{sourceInterval:[2635,2639]},"+="],["terminal",{sourceInterval:[2642,2645]},"*"],["terminal",{sourceInterval:[2648,2651]},"+"],["terminal",{sourceInterval:[2654,2657]},"?"],["terminal",{sourceInterval:[2660,2663]},"~"],["terminal",{sourceInterval:[2666,2669]},"&"]]],punctuation:["define",{sourceInterval:[2673,2709]},null,[],["alt",{sourceInterval:[2687,2709]},["terminal",{sourceInterval:[2687,2690]},"<"],["terminal",{sourceInterval:[2693,2696]},">"],["terminal",{sourceInterval:[2699,2702]},","],["terminal",{sourceInterval:[2705,2709]},"--"]]]}]);const Ki=yn,Jt=yt,kt=rn,Fn=H,at=Pe,Qt=ze,er=ke,Wi=ki,{makeRecipe:Yi}=lt;let Ft;const It=Object.create(Qt.PExpr.prototype),Zi=t=>!!t.constructor&&typeof t.constructor.isBuffer=="function"&&t.constructor.isBuffer(t);function tr(t,e,r){const u=new Ki;let n,a,s,f=!1;return(r||Ft).createSemantics().addOperation("visit",{Grammars(l){return l.children.map(o=>o.visit())},Grammar(l,o,D,p,d){const C=l.visit();n=u.newGrammar(C,e),o.child(0)&&o.child(0).visit(),p.children.map(_=>_.visit());const A=n.build();if(A.source=this.source.trimmed(),C in e)throw at.duplicateGrammarDeclaration(A,e);return e[C]=A,A},SuperGrammar(l,o){const D=o.visit();if(D==="null")n.withSuperGrammar(null);else{if(!e||!(D in e))throw at.undeclaredGrammar(D,e,o.source);n.withSuperGrammar(e[D])}},Rule_define(l,o,D,p,d){a=l.visit(),s=o.children.map(B=>B.visit())[0]||[],!n.defaultStartRule&&n.ensureSuperGrammar()!==Jt.ProtoBuiltInRules&&n.withDefaultStartRule(a);const C=d.visit(),A=D.children.map(B=>B.visit())[0],_=this.source.trimmed();return n.define(a,s,C,A,_)},Rule_override(l,o,D,p){a=l.visit(),s=o.children.map(A=>A.visit())[0]||[];const d=this.source.trimmed();n.ensureSuperGrammarRuleForOverriding(a,d),f=!0;const C=p.visit();return f=!1,n.override(a,s,C,null,d)},Rule_extend(l,o,D,p){a=l.visit(),s=o.children.map(A=>A.visit())[0]||[];const d=p.visit(),C=this.source.trimmed();return n.extend(a,s,d,null,C)},RuleBody(l,o){return u.alt(...o.visit()).withSource(this.source)},OverrideRuleBody(l,o){const D=o.visit(),p=D.indexOf(It);if(p>=0){const d=D.slice(0,p),C=D.slice(p+1);return C.forEach(A=>{if(A===It)throw at.multipleSuperSplices(A)}),new Qt.Splice(n.superGrammar,a,d,C).withSource(this.source)}else return u.alt(...D).withSource(this.source)},Formals(l,o,D){return o.visit()},Params(l,o,D){return o.visit()},Alt(l){return u.alt(...l.visit()).withSource(this.source)},TopLevelTerm_inline(l,o){const D=a+"_"+o.visit(),p=l.visit(),d=this.source.trimmed(),C=!(n.superGrammar&&n.superGrammar.rules[D]);f&&!C?n.override(D,s,p,null,d):n.define(D,s,p,null,d);const A=s.map(_=>u.app(_));return u.app(D,A).withSource(p.source)},OverrideTopLevelTerm_superSplice(l){return It},Seq(l){return u.seq(...l.children.map(o=>o.visit())).withSource(this.source)},Iter_star(l,o){return u.star(l.visit()).withSource(this.source)},Iter_plus(l,o){return u.plus(l.visit()).withSource(this.source)},Iter_opt(l,o){return u.opt(l.visit()).withSource(this.source)},Pred_not(l,o){return u.not(o.visit()).withSource(this.source)},Pred_lookahead(l,o){return u.lookahead(o.visit()).withSource(this.source)},Lex_lex(l,o){return u.lex(o.visit()).withSource(this.source)},Base_application(l,o){const D=o.children.map(p=>p.visit())[0]||[];return u.app(l.visit(),D).withSource(this.source)},Base_range(l,o,D){return u.range(l.visit(),D.visit()).withSource(this.source)},Base_terminal(l){return u.terminal(l.visit()).withSource(this.source)},Base_paren(l,o,D){return o.visit()},ruleDescr(l,o,D){return o.visit()},ruleDescrText(l){return this.sourceString.trim()},caseName(l,o,D,p,d){return D.visit()},name(l,o){return this.sourceString},nameFirst(l){},nameRest(l){},terminal(l,o,D){return o.children.map(p=>p.visit()).join("")},oneCharTerminal(l,o,D){return o.visit()},escapeChar(l){try{return Fn.unescapeCodePoint(this.sourceString)}catch(o){throw o instanceof RangeError&&o.message.startsWith("Invalid code point ")?at.invalidCodePoint(l):o}},NonemptyListOf(l,o,D){return[l.visit()].concat(D.children.map(p=>p.visit()))},EmptyListOf(){return[]},_terminal(){return this.sourceString}})(t).visit()}function Ji(t,e){const r=Ft.match(t,"Grammars");if(r.failed())throw at.grammarSyntaxError(r);return tr(r,e)}function Qi(t,e){const r=Bn(t,e),u=Object.keys(r);if(u.length===0)throw new Error("Missing grammar definition");if(u.length>1){const a=r[u[1]].source;throw new Error(er.getLineAndColumnMessage(a.sourceString,a.startIdx)+"Found more than one grammar definition -- use ohm.grammars() instead.")}return r[u[0]]}function Bn(t,e){const r=kt.extend(kt.asNamespace(e));if(typeof t!="string")if(Zi(t))t=t.toString();else throw new TypeError("Expected string as first argument, got "+Fn.unexpectedObjToString(t));return Ji(t,r),r}function ea(t){throw new Error("grammarFromScriptElement was removed in Ohm v16.0. See https://ohmjs.org/d/gfs for more info.")}function ta(t){throw new Error("grammarsFromScriptElements was removed in Ohm v16.0. See https://ohmjs.org/d/gfs for more info.")}Et.exports={createNamespace:kt.createNamespace,grammar:Qi,grammars:Bn,grammarFromScriptElement:ea,grammarsFromScriptElements:ta,makeRecipe:Yi,ohmGrammar:null,pexprs:Qt,util:er,version:Wi};Et.exports._buildGrammar=tr;er.announceBuiltInRules(Jt.BuiltInRules);Et.exports.ohmGrammar=Ft=Xi;Jt.initApplicationParser(Ft,tr);var ra=Et.exports;const{assert:He}=H;function na(t,e,r){return r(e[t])}function ua(t,e,r){return e[t].map(r)}function Ar(t){const e=t.split(/ ?\[\]/);return e.length===2?ua.bind(null,e[0]):na.bind(null,t)}function _r(t,e,r){return t.map(u=>u(e,r))}function ia(t){return typeof t=="string"?_r.bind(null,[Ar(t)]):Array.isArray(t)?_r.bind(null,t.map(Ar)):(He(typeof t=="function","Expected a string, Array, or function"),He(t.length===2,"Expected a function of arity 2, got "+t.length),t)}function yr(t){return/^[a-zA-Z_][0-9a-zA-Z_]*$/.test(t)}function Fr(t){return t.trim()}function aa(t){const e=t.split(/[()]/).map(Fr);if(e.length===3&&e[2]===""){const r=e[0];let u=[];if(e[1].length>0&&(u=e[1].split(",").map(Fr)),yr(r)&&u.every(yr))return{name:r,formals:u}}throw new Error("Invalid operation signature: "+t)}function Bt(t){this._shapes=t.shapes,this._getTag=t.getTag,this.Adapter=function(e,r){this._adaptee=e,this._family=r},this.Adapter.prototype.valueOf=function(){throw new Error("heeey!")},this.operations={},this._arities=Object.create(null),this._getChildren=Object.create(null),Object.keys(this._shapes).forEach(e=>{const r=this._shapes[e];this._getChildren[e]=ia(r),typeof r!="function"&&(this._arities[e]=Array.isArray(r)?r.length:1)}),this._wrap=e=>new this.Adapter(e,this)}Bt.prototype.wrap=function(t){return this._wrap(t)};Bt.prototype._checkActionDict=function(t){Object.keys(t).forEach(e=>{He(e in this._getChildren,"Unrecognized action name '"+e+"'");const r=t[e];if(He(typeof r=="function","Key '"+e+"': expected function, got "+r),e in this._arities){const u=this._arities[e],n=t[e].length;He(n===u,"Action '"+e+"' has the wrong arity: expected "+u+", got "+n)}})};Bt.prototype.addOperation=function(t,e){const r=aa(t),{name:u}=r;this._checkActionDict(e),this.operations[u]={name:u,formals:r.formals,actions:e};const n=this;return this.Adapter.prototype[u]=function(...a){const s=n._getTag(this._adaptee);He(s in n._getChildren,"getTag returned unrecognized tag '"+s+"'"),He(s in e,"No action for '"+s+"' in operation '"+u+"'");const f=Object.create(null);for(const[l,o]of Object.entries(a))f[r.formals[l]]=o;const i=this.args;this.args=f;const c=e[s].apply(this,n._getChildren[s](this._adaptee,n._wrap));return this.args=i,c},this};var sa=Bt;const bn={_terminal(){return this.sourceString},_nonterminal(...t){const{ctorName:e}=this._node,{mapping:r}=this.args;if(!Object.prototype.hasOwnProperty.call(r,e)){if(this.isLexical())return this.sourceString;const a=t.filter(s=>!s.isTerminal());if(a.length===1)return a[0].toAST(r)}if(typeof r[e]=="number")return t[r[e]].toAST(r);const u=r[e]||t,n={type:e};for(const a in u){const s=r[e]&&r[e][a];typeof s=="number"?n[a]=t[s].toAST(r):typeof s=="string"||typeof s=="boolean"||s===null?n[a]=s:typeof s=="object"&&s instanceof Number?n[a]=Number(s):typeof s=="function"?n[a]=s.call(this,t):s===void 0&&(t[a]&&!t[a].isTerminal()?n[a]=t[a].toAST(r):delete n[a])}return n},_iter(...t){return this._node.isOptional()?this.numChildren===0?null:t[0].toAST(this.args.mapping):t.map(function(e){return e.toAST(this.args.mapping)},this)},NonemptyListOf(t,e,r){return[t.toAST(this.args.mapping)].concat(r.toAST(this.args.mapping))},EmptyListOf(){return[]}};function oa(t,e){if(typeof t.failed!="function"||t.failed())throw new Error("toAST() expects a succesful MatchResult as first parameter");e=Object.assign({},e);const r=Object.assign({},bn);for(const a in e)typeof e[a]=="function"&&(r[a]=e[a],delete e[a]);return t._cst.grammar.createSemantics().addOperation("toAST(mapping)",r)(t).toAST(e)}function la(t){if(typeof t.createSemantics!="function")throw new Error("semanticsToAST() expects a Grammar as parameter");return t.createSemantics().addOperation("toAST(mapping)",bn)}var Br={helper:oa,semantics:la},ca={VisitorFamily:sa,semanticsForToAST:Br.semantics,toAST:Br.helper};const pa=Object.freeze(Object.defineProperty({__proto__:null,default:ra,extras:ca},Symbol.toStringTag,{value:"Module"})),da=Pn(pa);var ct={},je={},k={},br;function rr(){if(br)return k;br=1,Object.defineProperty(k,"__esModule",{value:!0}),k.NumberExpr=k.NameExpr=k.RefExpr=k.NegateExpr=k.MathExpr=k.MathOperator=k.CombinatorExpr=k.BuiltinZeroArgs=k.BuiltinZeroArgsOperators=k.BuiltinOneArgExpr=k.BuiltinOneArgOperators=k.BuiltinExpr=k.CellRefExpr=k.CompareExpr=k.CompareOperator=k.CondExpr=k.Expression=k.Combinator=k.FieldExprDef=k.FieldNamedDef=k.FieldAnonymousDef=k.FieldCurlyExprDef=k.FieldBuiltinDef=k.FieldBuiltinType=k.Field=k.Constructor=k.Declaration=k.Program=k.ASTBase=k.ASTRootBase=void 0;class t{}k.ASTRootBase=t,t._attributes=[];class e extends t{}k.ASTBase=e;class r extends t{constructor(x){super(),this.declarations=x,this.parent=null}}k.Program=r,r._attributes=["declarations"];class u extends e{constructor(x,M,V){super(),this.constructorDef=x,this.fields=M,this.combinator=V}}k.Declaration=u,u._attributes=["constructorDef","fields","combinator"];class n extends e{constructor(x,M){super(),this.name=x,this.tag=M}getTagType(){return this.tag===null?null:this.tag.startsWith("$")?"binary":"hex"}}k.Constructor=n;class a extends e{}k.Field=a,k.FieldBuiltinType=["#","Type"];class s extends a{constructor(x,M){super(),this.name=x,this.type=M}}k.FieldBuiltinDef=s;class f extends a{constructor(x){super(),this.expr=x}}k.FieldCurlyExprDef=f,f._attributes=["expr"];class i extends a{constructor(x,M,V){super(),this.name=x,this.isRef=M,this.fields=V}}k.FieldAnonymousDef=i,i._attributes=["fields"];class c extends a{constructor(x,M){super(),this.name=x,this.expr=M}}k.FieldNamedDef=c,c._attributes=["expr"];class l extends a{constructor(x){super(),this.expr=x}}k.FieldExprDef=l,l._attributes=["expr"];class o extends e{constructor(x,M){super(),this.name=x,this.args=M}}k.Combinator=o,o._attributes=["args"];class D extends e{}k.Expression=D;class p extends D{constructor(x,M,V){super(),this.left=x,this.dotExpr=M,this.condExpr=V}}k.CondExpr=p,p._attributes=["left","condExpr"],k.CompareOperator=["<=",">=","!=","=","<",">"];class d extends D{constructor(x,M,V){super(),this.left=x,this.op=M,this.right=V}}k.CompareExpr=d,d._attributes=["left","right"];class C extends D{constructor(x){super(),this.expr=x}}k.CellRefExpr=C,C._attributes=["expr"];class A extends D{}k.BuiltinExpr=A,k.BuiltinOneArgOperators=["#<=","#<","##"];class _ extends A{constructor(x,M){super(),this.name=x,this.arg=M}}k.BuiltinOneArgExpr=_,_._attributes=["arg"],k.BuiltinZeroArgsOperators=["#"];class B extends A{constructor(x){super(),this.name=x}}k.BuiltinZeroArgs=B;class E extends D{constructor(x,M){super(),this.name=x,this.args=M}}k.CombinatorExpr=E,E._attributes=["args"],k.MathOperator=["*","+"];class S extends D{constructor(x,M,V){super(),this.left=x,this.op=M,this.right=V}}k.MathExpr=S,S._attributes=["left","right"];class O extends D{constructor(x){super(),this.expr=x}}k.NegateExpr=O,O._attributes=["expr"];class $ extends D{}k.RefExpr=$;class w extends ${constructor(x){super(),this.name=x}}k.NameExpr=w;class F extends ${constructor(x){super(),this.num=x}}return k.NumberExpr=F,k}var vr;function vn(){if(vr)return je;vr=1,Object.defineProperty(je,"__esModule",{value:!0}),je.NodeVisitor=void 0,je.iterChildNodes=e,je.walk=r;const t=rr();function*e(n){const a=Object.getPrototypeOf(n).constructor;for(const s of a._attributes){const f=n[s];if(Array.isArray(f))for(const i of f)yield i;else f instanceof t.ASTRootBase&&(yield f)}}function*r(n){const a=[n];for(;a.length>0;){const s=a.shift();a.push(...e(s)),yield s}}class u{visit(a){const f=`visit${a.constructor.name}`,i=this[f];return typeof i=="function"?i.call(this,a):this.genericVisit(a)}genericVisit(a){for(let s of e(a))this.visit(s)}}return je.NodeVisitor=u,je}var xr;function ma(){if(xr)return ct;xr=1,Object.defineProperty(ct,"__esModule",{value:!0}),ct.withParents=e;const t=vn();function e(r){for(let u of(0,t.walk)(r))for(let n of(0,t.iterChildNodes)(u))n.parent=u;return r}return ct}var pt={},Sr;function fa(){if(Sr)return pt;Sr=1,Object.defineProperty(pt,"__esModule",{value:!0});const t=String.raw`
TLB {
  // See:
  // https://github.com/andreypfau/TL-B-docs

  // Root definition
  Program = SourceElement*

  // Utilities
  // Override Ohm's built-in definition of space.
  space := whitespace | lineTerminator | comment

  whitespace =
    | "\t"
    | "\x0B"    -- verticalTab
    | "\x0C"    -- formFeed
    | " "
    | "\u00A0"  -- noBreakSpace
    | "\uFEFF"  -- byteOrderMark
    | "\u2000".."\u200B"
    | "\u3000"

  sourceCharacter = any
  lineTerminator = "\n" | "\r" | "\u2028" | "\u2029"

  // Comments
  comment = multiLineComment | singleLineComment
  multiLineComment = "/*" (~"*/" sourceCharacter)* "*/"
  singleLineComment = "//" (~lineTerminator sourceCharacter)*

  // Data types
  binaryDigit = "0" | "1"
  decimalDigit = "0".."9"
  hex = hexChar* "_"?
  hexChar = decimalDigit | letter

  // Identifiers
  identifier = identifierStart identifierPart*
  identifierStart = "_" | letter
  identifierPart = identifierStart | digit

  // Primitives
  number = digit+

  // Builtins
  builtins_one_arg = "#<=" | "#<" | "##"
  builtins_zero_args = "#"
  builtins_field = "#" | "Type"


  // ----------
  // Base rules
  // ----------
  SourceElement = Declaration | comment
  Declaration = Constructor Fields "=" Combinator ";"


  // Constructors
  // ~~~~~~~~~~~~
  Constructor = ConstructorStart ConstructorTag?
  ConstructorStart = "!"? ("_" | identifier)
  ConstructorTag =
  	| "$" ("_" | binaryDigit+)  -- binary
    | "#" ("_" | hex)           -- hex


  // Fields
  // ~~~~~~
  Fields = FieldDefinition*
  FieldDefinition =
    | FieldBuiltinDef
    | FieldCurlyExprDef
    | FieldAnonymousDef
    | FieldNamedDef
    | FieldExprDef

  FieldBuiltinDef = "{" identifier ":" builtins_field "}"
  FieldCurlyExprDef = "{" CurlyExpression "}"
  FieldAnonymousDef = FieldAnonRef | FieldNamedAnonRef
  FieldNamedDef = identifier ":" CondExpr
  FieldExprDef = CondExpr

  FieldAnonRef = "^"? "[" FieldDefinition* "]"
  FieldNamedAnonRef = identifier ":" FieldAnonRef


  // Combinators
  // ~~~~~~~~~~~

  Combinator = identifier SimpleExpr*


  // Expressions
  // ~~~~~~~~~~~

  // First come the complex rules we only use to define fields.
  // The line between fields definition and expressions is blury at this point.
  CurlyExpression = CompareExpr
  CondExpr =
    | CondDotAndQuestionExpr
    | CondQuestionExpr
    | CondTypeExpr

  CondDotted = TypeExpr "." number
  CondDotAndQuestionExpr = ( CondDotted | Parens<CondDotted> ) "?" TypeExpr
  CondQuestionExpr = TypeExpr "?" TypeExpr
  CondTypeExpr = TypeExpr

  // Compares:
  CompareExpr =
    | CompareOperatorExpr
    | Parens<CompareExpr>
    | MathExpr

  CompareOperatorExpr =
    | MathExpr "<=" MathExpr
    | MathExpr ">=" MathExpr
    | MathExpr "!=" MathExpr
    | MathExpr "=" MathExpr
    | MathExpr "<" MathExpr
    | MathExpr ">" MathExpr

  // Base rule for field defining expressions:
  TypeExpr =
    | CellRefExpr
    | BuiltinExpr
    | CombinatorExpr
    | SimpleExpr
    | Parens<TypeExpr>

  // Math:
  MathExpr = MulExpr ("+" MulExpr)*
  // You can multiply by constant values only: 'Bit' and numbers, basically
  MulExpr = SimpleExpr ("*" RefExpr)*

  // TypeExpr's items:
  CellRefExpr = "^" ( CellRefInner | Parens<CellRefInner> )
  CellRefInner = TypeExpr

  BuiltinExpr = BuiltinOneArg | BuiltinZeroArgs
  // This needs extra 'Parens' because of '(##)' expr:
  BuiltinOneArg = "(" ( builtins_one_arg | Parens<builtins_one_arg> ) RefExpr ")"
  BuiltinZeroArgs = builtins_zero_args

  // It is different from 'Combinator' only in the quantity part:
  // we always need at least one argument here and it can be complex.
  CombinatorExpr = "(" identifier TypeExpr+ ")"

  SimpleExpr =
    | NegateExpr
    | MathExpr
    | RefExpr
    | Parens<SimpleExpr>

  NegateExpr = "~" SimpleExpr
  RefExpr = RefInner | Parens<RefInner>
  RefInner = identifier | number


  // Helpers
  // ~~~~~~~

  // Generic rule to allow parens around some expressions:
  Parens<expr> = "(" expr ")"
}
`;return pt.default=t,pt}var te={},dt={},Tr;function ha(){if(Tr)return dt;Tr=1,Object.defineProperty(dt,"__esModule",{value:!0}),dt.withLocations=t;function t(e,r){const u=r.source.getLineAndColumn();return e.locations={line:u.lineNum,column:u.colNum},e}return dt}var Ir;function Da(){if(Ir)return te;Ir=1;var t=te&&te.__createBinding||(Object.create?(function(s,f,i,c){c===void 0&&(c=i);var l=Object.getOwnPropertyDescriptor(f,i);(!l||("get"in l?!f.__esModule:l.writable||l.configurable))&&(l={enumerable:!0,get:function(){return f[i]}}),Object.defineProperty(s,c,l)}):(function(s,f,i,c){c===void 0&&(c=i),s[c]=f[i]})),e=te&&te.__setModuleDefault||(Object.create?(function(s,f){Object.defineProperty(s,"default",{enumerable:!0,value:f})}):function(s,f){s.default=f}),r=te&&te.__importStar||(function(){var s=function(f){return s=Object.getOwnPropertyNames||function(i){var c=[];for(var l in i)Object.prototype.hasOwnProperty.call(i,l)&&(c[c.length]=l);return c},s(f)};return function(f){if(f&&f.__esModule)return f;var i={};if(f!=null)for(var c=s(f),l=0;l<c.length;l++)c[l]!=="default"&&t(i,f,c[l]);return e(i,f),i}})();Object.defineProperty(te,"__esModule",{value:!0}),te.exprNodes=te.combinatorNodes=te.fieldNodes=te.constructorNodes=te.rootNodes=void 0;const u=r(rr()),n=ha();te.rootNodes={Program(s){return(0,n.withLocations)(new u.Program(s.children.map(f=>f.root())),s)},SourceElement(s){return(0,n.withLocations)(new u.Declaration(s.child(0).Constructor(),s.child(1).Field(),s.child(3).Combinator()),s)}},te.constructorNodes={Constructor(s,f){const i=s.sourceString;let c=null;return f.numChildren!==0&&(c=f.child(0).Constructor()),(0,n.withLocations)(new u.Constructor(i,c),s)},ConstructorTag(s){return s.sourceString}},te.fieldNodes={Fields(s){return s.children.map(f=>f.Field())},FieldDefinition(s){return s.Field()},FieldBuiltinDef(s,f,i,c,l){return(0,n.withLocations)(new u.FieldBuiltinDef(f.sourceString,c.sourceString),s)},FieldCurlyExprDef(s,f,i){return(0,n.withLocations)(new u.FieldCurlyExprDef(f.expr()),s)},FieldAnonymousDef(s){const{name:f,isRef:i,fields:c}=s.Field();return(0,n.withLocations)(new u.FieldAnonymousDef(f,i,c),s)},FieldNamedDef(s,f,i){return(0,n.withLocations)(new u.FieldNamedDef(s.sourceString,i.expr()),s)},FieldExprDef(s){return(0,n.withLocations)(new u.FieldExprDef(s.expr()),s)},FieldAnonRef(s,f,i,c){return{name:null,isRef:s.numChildren!==0,fields:i.children.map(l=>l.Field())}},FieldNamedAnonRef(s,f,i){return Object.assign(Object.assign({},i.Field()),{name:s.sourceString})}},te.combinatorNodes={Combinator(s,f){return(0,n.withLocations)(new u.Combinator(s.sourceString,f.children.map(i=>i.expr())),s)}},te.exprNodes={MathExpr(s,f,i){return a(s,f,i)},MulExpr(s,f,i){return a(s,f,i)},CompareExpr(s){return s.expr()},CompareOperatorExpr(s,f,i){return(0,n.withLocations)(new u.CompareExpr(s.expr(),f.sourceString,i.expr()),f)},CondExpr(s){const{leftExpr:f,dotExpr:i,condExpr:c}=s.expr();return i===void 0&&c===void 0?f:(0,n.withLocations)(new u.CondExpr(f,i,c),s)},CondDotAndQuestionExpr(s,f,i){return Object.assign(Object.assign({},s.expr()),{condExpr:i.expr()})},CondQuestionExpr(s,f,i){return{leftExpr:s.expr(),dotExpr:null,condExpr:i.expr()}},CondTypeExpr(s){return{leftExpr:s.expr()}},CondDotted(s,f,i){return{leftExpr:s.expr(),dotExpr:new Number(i.sourceString)}},CombinatorExpr(s,f,i,c){return(0,n.withLocations)(new u.CombinatorExpr(f.sourceString,i.children.map(l=>l.expr())),s)},CellRefExpr(s,f){return(0,n.withLocations)(new u.CellRefExpr(f.expr()),s)},BuiltinExpr(s){return(0,n.withLocations)(s.expr(),s)},NegateExpr(s,f){return(0,n.withLocations)(new u.NegateExpr(f.expr()),s)},BuiltinOneArg(s,f,i,c){return(0,n.withLocations)(new u.BuiltinOneArgExpr(f.sourceString,i.expr()),s)},BuiltinZeroArgs(s){return(0,n.withLocations)(new u.BuiltinZeroArgs(s.sourceString),s)},identifier(s,f){return(0,n.withLocations)(new u.NameExpr(s.sourceString+f.sourceString),s)},number(s){return(0,n.withLocations)(new u.NumberExpr(parseInt(s.sourceString)),s)},Parens(s,f,i){return(0,n.withLocations)(f.expr(),s)}};function a(s,f,i){const c=s.expr(),l=[];for(let p of f.children)l.push(p.sourceString);const o=[];for(let p of i.children){const d=p.expr();d!==void 0&&o.push(d)}if(l.length!==o.length)throw new Error("Invalid math operation");if(l.length===0)return(0,n.withLocations)(c,s);let D=(0,n.withLocations)(new u.MathExpr(c,l[0],o[0]),s);for(let p=1;p<l.length;p++)D=(0,n.withLocations)(new u.MathExpr(D,l[p],o[p]),s);return D}return te}var wr;function Ea(){if(wr)return Ve;wr=1;var t=Ve&&Ve.__importDefault||function(f){return f&&f.__esModule?f:{default:f}};Object.defineProperty(Ve,"__esModule",{value:!0}),Ve.buildGrammar=a,Ve.buildAST=s;const e=t(da),r=ma(),u=t(fa()),n=Da();function a(){return e.default.grammar(u.default)}function s(f,i){const c=i.createSemantics();c.addOperation("root",n.rootNodes),c.addOperation("Constructor",n.constructorNodes),c.addOperation("Field",n.fieldNodes),c.addOperation("Combinator",n.combinatorNodes),c.addOperation("expr",n.exprNodes);const l=i.match(f),o=c(l).root();return(0,r.withParents)(o)}return Ve}var Lr;function Xe(){return Lr||(Lr=1,(function(t){Object.defineProperty(t,"__esModule",{value:!0}),t.MathOperator=t.BuiltinZeroArgsOperators=t.BuiltinOneArgOperators=t.CompareOperator=t.FieldBuiltinType=t.NumberExpr=t.NameExpr=t.RefExpr=t.NegateExpr=t.MathExpr=t.CombinatorExpr=t.BuiltinZeroArgs=t.BuiltinOneArgExpr=t.BuiltinExpr=t.CellRefExpr=t.CompareExpr=t.CondExpr=t.Expression=t.Combinator=t.FieldExprDef=t.FieldNamedDef=t.FieldAnonymousDef=t.FieldCurlyExprDef=t.FieldBuiltinDef=t.Field=t.Constructor=t.Declaration=t.Program=t.ASTBase=t.ASTRootBase=t.NodeVisitor=void 0,t.parse=r,t.ast=u;const e=Ea();function r(s,f=void 0){return f===void 0&&(f=(0,e.buildGrammar)()),f.match(s)}function u(s){return(0,e.buildAST)(s,(0,e.buildGrammar)())}var n=vn();Object.defineProperty(t,"NodeVisitor",{enumerable:!0,get:function(){return n.NodeVisitor}});var a=rr();Object.defineProperty(t,"ASTRootBase",{enumerable:!0,get:function(){return a.ASTRootBase}}),Object.defineProperty(t,"ASTBase",{enumerable:!0,get:function(){return a.ASTBase}}),Object.defineProperty(t,"Program",{enumerable:!0,get:function(){return a.Program}}),Object.defineProperty(t,"Declaration",{enumerable:!0,get:function(){return a.Declaration}}),Object.defineProperty(t,"Constructor",{enumerable:!0,get:function(){return a.Constructor}}),Object.defineProperty(t,"Field",{enumerable:!0,get:function(){return a.Field}}),Object.defineProperty(t,"FieldBuiltinDef",{enumerable:!0,get:function(){return a.FieldBuiltinDef}}),Object.defineProperty(t,"FieldCurlyExprDef",{enumerable:!0,get:function(){return a.FieldCurlyExprDef}}),Object.defineProperty(t,"FieldAnonymousDef",{enumerable:!0,get:function(){return a.FieldAnonymousDef}}),Object.defineProperty(t,"FieldNamedDef",{enumerable:!0,get:function(){return a.FieldNamedDef}}),Object.defineProperty(t,"FieldExprDef",{enumerable:!0,get:function(){return a.FieldExprDef}}),Object.defineProperty(t,"Combinator",{enumerable:!0,get:function(){return a.Combinator}}),Object.defineProperty(t,"Expression",{enumerable:!0,get:function(){return a.Expression}}),Object.defineProperty(t,"CondExpr",{enumerable:!0,get:function(){return a.CondExpr}}),Object.defineProperty(t,"CompareExpr",{enumerable:!0,get:function(){return a.CompareExpr}}),Object.defineProperty(t,"CellRefExpr",{enumerable:!0,get:function(){return a.CellRefExpr}}),Object.defineProperty(t,"BuiltinExpr",{enumerable:!0,get:function(){return a.BuiltinExpr}}),Object.defineProperty(t,"BuiltinOneArgExpr",{enumerable:!0,get:function(){return a.BuiltinOneArgExpr}}),Object.defineProperty(t,"BuiltinZeroArgs",{enumerable:!0,get:function(){return a.BuiltinZeroArgs}}),Object.defineProperty(t,"CombinatorExpr",{enumerable:!0,get:function(){return a.CombinatorExpr}}),Object.defineProperty(t,"MathExpr",{enumerable:!0,get:function(){return a.MathExpr}}),Object.defineProperty(t,"NegateExpr",{enumerable:!0,get:function(){return a.NegateExpr}}),Object.defineProperty(t,"RefExpr",{enumerable:!0,get:function(){return a.RefExpr}}),Object.defineProperty(t,"NameExpr",{enumerable:!0,get:function(){return a.NameExpr}}),Object.defineProperty(t,"NumberExpr",{enumerable:!0,get:function(){return a.NumberExpr}}),Object.defineProperty(t,"FieldBuiltinType",{enumerable:!0,get:function(){return a.FieldBuiltinType}}),Object.defineProperty(t,"CompareOperator",{enumerable:!0,get:function(){return a.CompareOperator}}),Object.defineProperty(t,"BuiltinOneArgOperators",{enumerable:!0,get:function(){return a.BuiltinOneArgOperators}}),Object.defineProperty(t,"BuiltinZeroArgsOperators",{enumerable:!0,get:function(){return a.BuiltinZeroArgsOperators}}),Object.defineProperty(t,"MathOperator",{enumerable:!0,get:function(){return a.MathOperator}})})(xt)),xt}var qe={},Q={},Pr;function We(){if(Pr)return Q;Pr=1,Object.defineProperty(Q,"__esModule",{value:!0}),Q.TLBCode=Q.TLBType=Q.TLBConstructor=Q.TLBParameter=Q.TLBVariable=Q.TLBVarExpr=Q.TLBUnaryOp=Q.TLBNumberExpr=Q.TLBBinaryOp=void 0;class t{constructor(l,o,D,p=new Set([...l.variables,...o.variables]),d=l.hasNeg||o.hasNeg){this.left=l,this.right=o,this.operation=D,this.variables=p,this.hasNeg=d}}Q.TLBBinaryOp=t;class e{constructor(l,o=new Set,D=!1){this.n=l,this.variables=o,this.hasNeg=D}}Q.TLBNumberExpr=e;class r{constructor(l,o,D=l.variables,p=l.hasNeg){this.value=l,this.operation=o,this.variables=D,this.hasNeg=p}}Q.TLBUnaryOp=r;class u{constructor(l,o=new Set,D=!1){this.x=l,this.variables=o,this.hasNeg=D,o.size==0&&o.add(l)}}Q.TLBVarExpr=u;class n{constructor(l,o,D,p,d,C,A){this.isConst=l,this.negated=o,this.type=D,this.name=p,this.isField=d,this.deriveExpr=C,this.initialExpr=A}}Q.TLBVariable=n;class a{constructor(l,o,D){this.variable=l,this.paramExpr=o,this.argName=D}}Q.TLBParameter=a;class s{constructor(l,o,D,p,d,C,A,_,B,E){this.parameters=l,this.variables=o,this.variablesMap=D,this.parametersMap=p,this.name=d,this.fields=C,this.tag=A,this.constraints=_,this.declaration=B,this.tlbType=E}}Q.TLBConstructor=s;class f{constructor(l,o){this.name=l,this.constructors=o}}Q.TLBType=f;class i{constructor(l){this.types=l}}return Q.TLBCode=i,Q}var ue={},Nr;function bt(){if(Nr)return ue;Nr=1,Object.defineProperty(ue,"__esModule",{value:!0}),ue.crc32=ue.getSubStructName=ue.findNotReservedName=ue.isNameReserved=ue.bitLen=ue.getCurrentSlice=ue.firstLower=void 0;function t(i){return i.charAt(0).toLowerCase()+i.slice(1)}ue.firstLower=t;function e(i,c){let l=c;return i=i.slice(0,i.length-1),i.forEach(o=>{l+=o.toString()}),l=="cell"?"builder":l}ue.getCurrentSlice=e;function r(i){return i.toString(2).length}ue.bitLen=r;function u(i){return!!(["abstract","arguments","await","boolean","break","byte","case","catch","char","class","const","continue","debugger","default","delete","do","double","else","enum","eval","export","extends","false","final","finally","float","for","function","goto","if","implements","import","in","instanceof","int","interface","let","long","native","new","null","package","private","protected","public","return","short","static","super","switch","synchronized","this","throw","throws","transient","true","try","typeof","var","void","volatile","while","with","yield"].includes(i)||i.startsWith("slice")||i.startsWith("cell")||i=="builder")}ue.isNameReserved=u;function n(i,c="0"){for((i.startsWith("slice")||i.startsWith("cell"))&&(i="_"+i);u(i);)i+=c;return i}ue.findNotReservedName=n;function a(i,c){return i.constructors.length>1?i.name+"_"+c.name:i.name}ue.getSubStructName=a;const s=-306674912;function f(i,c=4294967295){let l=c;for(let o=0;o<i.length;o++)l^=i[o],l=l&1?l>>>1^s:l>>>1,l=l&1?l>>>1^s:l>>>1,l=l&1?l>>>1^s:l>>>1,l=l&1?l>>>1^s:l>>>1,l=l&1?l>>>1^s:l>>>1,l=l&1?l>>>1^s:l>>>1,l=l&1?l>>>1^s:l>>>1,l=l&1?l>>>1^s:l>>>1;return(l^-1)>>>0}return ue.crc32=f,ue}var Ze={},Je={},ee={},Or;function xn(){if(Or)return ee;Or=1,Object.defineProperty(ee,"__esModule",{value:!0}),ee.convertToMathExpr=ee.getNegatedVariable=ee.reorganizeExpression=ee.getVariableName=ee.deriveMathExpression=ee.splitForTypeValue=ee.getCalculatedExpression=ee.calculateVariable=ee.opCodeSetsEqual=void 0;const t=Xe(),e=We();function r(o,D){if(o===D)return!0;if(o==null||D==null||o.length!==D.length)return!1;o=o.sort(),D=D.sort();for(var p=0;p<o.length;++p)if(o[p]!==D[p])return!1;return!0}ee.opCodeSetsEqual=r;function u(o,D){o.calculated||o.deriveExpr&&(o.calculated=!0,o.deriveExpr=n(o.deriveExpr,D))}ee.calculateVariable=u;function n(o,D){if(o instanceof e.TLBVarExpr){let p=D.variablesMap.get(o.x);if(p&&(u(p,D),p.deriveExpr))return p.deriveExpr}if(o instanceof e.TLBBinaryOp){let p=n(o.left,D),d=n(o.right,D);return new e.TLBBinaryOp(p,d,o.operation,o.variables,o.hasNeg)}return o}ee.getCalculatedExpression=n;function a(o,D){if(!o.startsWith(D))return;let p=parseInt(o.slice(D.length));if(p!=null&&o==D+p.toString())return p}ee.splitForTypeValue=a;function s(o){let D=l(o);return{name:f(D),derived:D}}ee.deriveMathExpression=s;function f(o){if(o instanceof e.TLBVarExpr)return o.x;if(o instanceof e.TLBBinaryOp)return o.left.variables.size?f(o.left):f(o.right)}ee.getVariableName=f;function i(o,D){if(o instanceof e.TLBBinaryOp&&o.operation=="="){if(o.left.variables.has(D)&&(o=new e.TLBBinaryOp(o.right,o.left,"=",o.variables,o.hasNeg)),o.right instanceof e.TLBVarExpr)return new e.TLBBinaryOp(o.right,o.left,"=",o.variables,o.hasNeg);let p=o.right;if(p instanceof e.TLBBinaryOp){let d="";if(p.operation=="*")d="/";else if(p.operation=="+")d="-";else throw new Error("invalid operation");let C,A;p.left.variables.has(D)?(C=p.left,A=p.right):(A=p.left,C=p.right);let _=new e.TLBBinaryOp(o.left,A,d);return o=new e.TLBBinaryOp(_,C,"=",new Set([..._.variables,...C.variables]),_.hasNeg||p.hasNeg),i(o,D)}}throw new Error(`Couldn't reogranize expression: ${o}`)}ee.reorganizeExpression=i;function c(o){if(o.hasNeg){if(o instanceof e.TLBBinaryOp){if(o.left.hasNeg)return c(o.left);if(o.right.hasNeg)return c(o.right)}if(o instanceof e.TLBVarExpr)return o.x}}ee.getNegatedVariable=c;function l(o,D=!1){if(o instanceof t.NameExpr){let p=new Set;return p.add(o.name),new e.TLBVarExpr(o.name,p,D)}if(o instanceof t.NumberExpr)return new e.TLBNumberExpr(o.num,new Set,!1);if(o instanceof t.MathExpr){let p=l(o.left,D),d=l(o.right,D);return new e.TLBBinaryOp(p,d,o.op)}if(o instanceof t.CompareExpr){let p=l(o.left,D),d=l(o.right,D),C=o.op;return new e.TLBBinaryOp(p,d,C)}if(o instanceof t.NegateExpr&&(o.expr instanceof t.MathExpr||o.expr instanceof t.NameExpr||o.expr instanceof t.NumberExpr)){let p=l(o.expr,!0);if(p instanceof e.TLBBinaryOp)return new e.TLBBinaryOp(p.left,p.right,p.operation,p.variables,!0);if(p instanceof e.TLBVarExpr)return new e.TLBVarExpr(p.x,p.variables,!0);if(p instanceof e.TLBNumberExpr)return new e.TLBNumberExpr(p.n,p.variables,!0)}throw new Error(`Could not convert expression: ${o}`)}return ee.convertToMathExpr=l,ee}var kr;function ga(){if(kr)return Je;kr=1,Object.defineProperty(Je,"__esModule",{value:!0}),Je.getType=void 0;const t=Xe(),e=We(),r=xn();function u(n,a,s){var f;if(n instanceof t.BuiltinZeroArgs){if(n.name=="#")return{kind:"TLBNumberType",bits:new e.TLBNumberExpr(32),storeBits:new e.TLBNumberExpr(32),signed:!1,maxBits:32};throw new Error("Expression not supported"+n)}else if(n instanceof t.BuiltinOneArgExpr){if(n.name.toString()=="##"||n.name.toString()=="(##)"){if(n.arg instanceof t.NumberExpr)return{kind:"TLBNumberType",bits:new e.TLBNumberExpr(n.arg.num),storeBits:new e.TLBNumberExpr(n.arg.num),signed:!1,maxBits:n.arg.num};if(n.arg instanceof t.NameExpr){let i=a.parametersMap.get(n.arg.name);if(!i||!i.variable.deriveExpr||!i.variable.initialExpr)throw new Error(`Couldn't handle expression ${n}`);return{kind:"TLBNumberType",bits:(0,r.getCalculatedExpression)(i.variable.deriveExpr,a),storeBits:i.variable.initialExpr,signed:!1,maxBits:void 0}}else throw new Error(`Couldn't handle expression ${n}`)}else if(n.name=="#<")if(n.arg instanceof t.NumberExpr||n.arg instanceof t.NameExpr){let i=new e.TLBUnaryOp(new e.TLBBinaryOp((0,r.getCalculatedExpression)((0,r.convertToMathExpr)(n.arg),a),new e.TLBNumberExpr(1),"-"),".");return{kind:"TLBNumberType",bits:i,storeBits:i,signed:!1,maxBits:32}}else throw new Error(`Couldn't handle expression ${n}`);else if(n.name=="#<=")if(n.arg instanceof t.NumberExpr||n.arg instanceof t.NameExpr){let i=new e.TLBUnaryOp((0,r.getCalculatedExpression)((0,r.convertToMathExpr)(n.arg),a),".");return{kind:"TLBNumberType",bits:i,storeBits:i,signed:!1,maxBits:32}}else throw new Error(`Couldn't handle expression ${n}`)}else if(n instanceof t.CombinatorExpr){if(n.name=="int"&&n.args.length==1&&(n.args[0]instanceof t.MathExpr||n.args[0]instanceof t.NumberExpr||n.args[0]instanceof t.NameExpr))return{kind:"TLBNumberType",bits:(0,r.getCalculatedExpression)((0,r.convertToMathExpr)(n.args[0]),a),storeBits:(0,r.convertToMathExpr)(n.args[0]),signed:!0,maxBits:void 0};if(n.name=="uint"&&n.args.length==1&&(n.args[0]instanceof t.MathExpr||n.args[0]instanceof t.NumberExpr||n.args[0]instanceof t.NameExpr))return{kind:"TLBNumberType",bits:(0,r.getCalculatedExpression)((0,r.convertToMathExpr)(n.args[0]),a),storeBits:(0,r.convertToMathExpr)(n.args[0]),signed:!1,maxBits:void 0};if(n.name=="bits"&&n.args.length==1&&(n.args[0]instanceof t.MathExpr||n.args[0]instanceof t.NumberExpr||n.args[0]instanceof t.NameExpr))return{kind:"TLBBitsType",bits:(0,r.getCalculatedExpression)((0,r.convertToMathExpr)(n.args[0]),a)};if(n.name=="HashmapE"){if(n.args.length!=2)throw new Error("");let i=u(n.args[0],a,s),c=u(n.args[1],a,s);if(i.kind!="TLBExprMathType")throw new Error("Hashmap key should be number");return{kind:"TLBHashmapType",key:i,value:c,directStore:!1}}else if(n.name=="HashmapAugE"){if(n.args.length!=3)throw new Error("Not enough arguments for HashmapAugE");let i=u(n.args[0],a,s),c=u(n.args[1],a,s),l=u(n.args[2],a,s);if(i.kind!="TLBExprMathType")throw new Error("Hashmap key should be number");return{kind:"TLBHashmapType",key:i,value:c,extra:l,directStore:!1}}else if(n.name=="Hashmap"&&a.tlbType!="HashmapNode"){let i=u(n.args[0],a,s),c=u(n.args[1],a,s);if(i.kind!="TLBExprMathType")throw new Error("Hashmap key should be number");return{kind:"TLBHashmapType",key:i,value:c,directStore:!0}}else{if(n.name=="VarUInteger"&&(n.args[0]instanceof t.MathExpr||n.args[0]instanceof t.NumberExpr||n.args[0]instanceof t.NameExpr))return{kind:"TLBVarIntegerType",n:new e.TLBUnaryOp(new e.TLBBinaryOp((0,r.convertToMathExpr)(n.args[0]),new e.TLBNumberExpr(1),"-"),"."),signed:!1};if(n.name=="VarInteger"&&(n.args[0]instanceof t.MathExpr||n.args[0]instanceof t.NumberExpr||n.args[0]instanceof t.NameExpr))return{kind:"TLBVarIntegerType",n:(0,r.convertToMathExpr)(n.args[0]),signed:!0};{let i=[];return n.args.forEach(c=>{let l=u(c,a,s);i.push(l)}),{kind:"TLBNamedType",name:n.name,arguments:i}}}}else if(n instanceof t.NameExpr){let i;return n.name=="Int"?{kind:"TLBNumberType",bits:new e.TLBNumberExpr(257),storeBits:new e.TLBNumberExpr(257),signed:!0,maxBits:257}:n.name=="VmStack"?{kind:"TLBTupleType"}:n.name=="Bits"?{kind:"TLBBitsType",bits:new e.TLBNumberExpr(1023)}:n.name=="Bit"?{kind:"TLBBitsType",bits:new e.TLBNumberExpr(1)}:n.name=="Uint"?{kind:"TLBNumberType",bits:new e.TLBNumberExpr(257),storeBits:new e.TLBNumberExpr(257),signed:!1,maxBits:257}:n.name=="Any"||n.name=="Cell"?{kind:"TLBCellType"}:(i=(0,r.splitForTypeValue)(n.name,"int"))!=null?{kind:"TLBNumberType",bits:new e.TLBNumberExpr(i),storeBits:new e.TLBNumberExpr(i),signed:!0,maxBits:i}:(i=(0,r.splitForTypeValue)(n.name,"uint"))!=null?{kind:"TLBNumberType",bits:new e.TLBNumberExpr(i),storeBits:new e.TLBNumberExpr(i),signed:!1,maxBits:i}:(i=(0,r.splitForTypeValue)(n.name,"bits"))!=null?{kind:"TLBBitsType",bits:new e.TLBNumberExpr(i)}:n.name=="MsgAddressInt"?{kind:"TLBAddressType",addrType:"Internal"}:n.name=="MsgAddressExt"?{kind:"TLBAddressType",addrType:"External"}:n.name=="MsgAddress"?{kind:"TLBAddressType",addrType:"Any"}:n.name=="Grams"||n.name=="Coins"?{kind:"TLBCoinsType"}:n.name=="Bool"?{kind:"TLBBoolType",value:void 0}:n.name=="BoolFalse"?{kind:"TLBBoolType",value:!1}:n.name=="BoolTrue"?{kind:"TLBBoolType",value:!0}:((f=a.variablesMap.get(n.name))===null||f===void 0?void 0:f.type)=="#"?{kind:"TLBExprMathType",expr:(0,r.getCalculatedExpression)(new e.TLBVarExpr(n.name),a),initialExpr:new e.TLBVarExpr(n.name)}:{kind:"TLBNamedType",name:n.name,arguments:[]}}else{if(n instanceof t.NumberExpr)return{kind:"TLBExprMathType",expr:new e.TLBNumberExpr(n.num),initialExpr:new e.TLBNumberExpr(n.num)};if(n instanceof t.NegateExpr&&n.expr instanceof t.NameExpr)return{kind:"TLBNegatedType",variableName:n.expr.name};if(n instanceof t.CellRefExpr)return{kind:"TLBCellInsideType",value:u(n.expr,a,s)};if(n instanceof t.MathExpr)if(s=="")if(n.op=="*"){let i=u(n.right,a,s);return{kind:"TLBMultipleType",times:(0,r.getCalculatedExpression)((0,r.convertToMathExpr)(n.left),a),value:i}}else throw new Error(`Couldn't handle expression ${n}`);else return{kind:"TLBExprMathType",expr:(0,r.getCalculatedExpression)((0,r.convertToMathExpr)(n),a),initialExpr:(0,r.convertToMathExpr)(n)};else if(n instanceof t.CondExpr){let i=u(n.condExpr,a,s);if(n.left instanceof t.NameExpr){let c=(0,r.getCalculatedExpression)((0,r.convertToMathExpr)(n.left),a);return n.dotExpr!=null&&(c=new e.TLBBinaryOp(c,new e.TLBBinaryOp(new e.TLBNumberExpr(1),new e.TLBNumberExpr(n.dotExpr),"<<"),"&")),{kind:"TLBCondType",value:i,condition:c}}}else throw new Error(`Couldn't handle expression ${n}`)}throw new Error(`Couldn't handle expression ${n}`)}return Je.getType=u,Je}var Mr;function Ca(){if(Mr)return Ze;Mr=1,Object.defineProperty(Ze,"__esModule",{value:!0}),Ze.fillFields=void 0;const t=Xe(),e=ga();function r(n,a,s){if(n instanceof t.FieldAnonymousDef){let f={name:"",anonymous:!0,fieldType:{kind:"TLBNamedType",name:"Bool",arguments:[]},subFields:[]},i=0;return n.fields.forEach(c=>{let l=r(c,a,s+"_"+i.toString());l&&f.subFields.push(l),i++}),f}if(n instanceof t.FieldNamedDef||n instanceof t.FieldExprDef){let f;if(n instanceof t.FieldNamedDef?f=n.name:f="anon"+s,n instanceof t.FieldExprDef&&n.expr instanceof t.NameExpr&&n.expr.name=="_")return;if(n.expr instanceof t.CellRefExpr){if(n.expr.expr instanceof t.CombinatorExpr&&(n.expr.expr.name=="MERKLE_UPDATE"||n.expr.expr.name=="MERKLE_ROOT"))return{name:f,anonymous:!0,fieldType:{kind:"TLBExoticType"},subFields:[]};{let i=r(new t.FieldNamedDef(f,n.expr.expr),a,s+"_0");return i&&{name:f,anonymous:!0,fieldType:{kind:"TLBNamedType",name:"Bool",arguments:[]},subFields:[i]}}}if(n.expr instanceof t.CombinatorExpr||n.expr instanceof t.NameExpr||n.expr instanceof t.BuiltinZeroArgs||n.expr instanceof t.BuiltinOneArgExpr||n.expr instanceof t.MathExpr||n.expr instanceof t.CondExpr){let i;n.expr instanceof t.MathExpr||n.expr instanceof t.CondExpr?i="":i=n.expr.name;let c=(0,e.getType)(n.expr,a,i);return{name:f,anonymous:!(n instanceof t.FieldNamedDef),fieldType:c,subFields:[]}}}}function u(n,a){let s=n.constructor,f=n.declaration,i=-1;f.fields.forEach(c=>{i++;let l=r(c,s,i.toString());l!=null&&s.fields.push(l)})}return Ze.fillFields=u,Ze}var Rr;function $r(){if(Rr)return qe;Rr=1,Object.defineProperty(qe,"__esModule",{value:!0}),qe.convertCodeToReadonly=qe.fillConstructors=void 0;const t=Xe(),e=We(),r=bt(),u=Ca(),n=xn();function a(h,y,m){let g=new Map;h.forEach(b=>{let P=y.types.get(b.combinator.name);P==null&&(P={name:b.combinator.name,constructors:[]});let L={parameters:[],parametersMap:new Map,name:b.constructorDef.name,variables:new Array,variablesMap:new Map,tag:D(b),constraints:[],fields:[],declaration:"",tlbType:P.name};P.constructors.push(L),y.types.set(P.name,P);let U=g.get(P.name);U||(U=[]),U.push({declaration:b,constructor:L}),g.set(P.name,U)}),y.types.forEach(b=>{var P;(P=g.get(b.name))===null||P===void 0||P.forEach(L=>{let U=L.declaration,z=L.constructor;U.fields.forEach(q=>{q instanceof t.FieldBuiltinDef&&z.variables.push({name:q.name,isConst:!1,negated:!1,type:q.type,calculated:!1,isField:!1}),q instanceof t.FieldNamedDef&&z.variables.push({name:q.name,isConst:!1,negated:!1,type:"#",calculated:!1,isField:!0})}),z.variables.forEach(q=>{q.name&&z.variablesMap.set(q.name,q)});let we=-1;U.combinator.args.forEach(q=>{we++;let X;if(q instanceof t.NameExpr){let J=z.variablesMap.get(q.name);if(J)J.type=="#"&&(J.deriveExpr=new e.TLBVarExpr(q.name),J.initialExpr=J.deriveExpr),X={variable:J,paramExpr:new e.TLBVarExpr(q.name)};else throw new Error("Field not known before using (should be tagged as implicit): "+q)}else if(q instanceof t.MathExpr){let J=(0,n.deriveMathExpression)(q);if(!J.name)throw new Error(`Expression should contain variable ${q}`);let T=z.variablesMap.get(J.name);if(T&&T.name)X={variable:T,paramExpr:J.derived},X.argName="arg"+we,X.variable.deriveExpr=o((0,n.convertToMathExpr)(q),X.argName,T.name),X.variable.initialExpr=new e.TLBVarExpr(T.name);else throw new Error(`Variable should have name ${T}`)}else if(q instanceof t.NegateExpr&&(q.expr instanceof t.MathExpr||q.expr instanceof t.NumberExpr||q.expr instanceof t.NameExpr)){let J=(0,n.deriveMathExpression)(q.expr),T=!1;if(q.expr instanceof t.NumberExpr&&(T=!0),J.name==null)if(T)X={variable:{negated:!0,isConst:T,type:"#",name:void 0,deriveExpr:J.derived,initialExpr:J.derived,calculated:!1,isField:!1},paramExpr:J.derived};else throw new Error("Cannot identify combinator arg "+q);else{let R=z.variablesMap.get(J.name);if(R)R.negated=!0,R.isConst=T,R.initialExpr=J.derived,X={variable:R,paramExpr:J.derived};else throw new Error("Cannot identify combinator arg "+q)}}else if(q instanceof t.NumberExpr)X={variable:{negated:!1,isConst:!0,type:"#",name:void 0,deriveExpr:new e.TLBNumberExpr(q.num),initialExpr:new e.TLBNumberExpr(q.num),calculated:!1,isField:!1},paramExpr:new e.TLBNumberExpr(q.num)};else throw new Error("Cannot identify combinator arg: "+q);z.parameters.push(X),X.variable.name!=null&&z.parametersMap.set(X.variable.name,X)}),z.declaration=O(U,m),s(z,U),(0,u.fillFields)(L,b),$(z)}),f(b),i(b),p(b),b.constructors.sort(c)}),d(y,m,g),C(y)}qe.fillConstructors=a;function s(h,y){y.fields.forEach(m=>{if(m instanceof t.FieldCurlyExprDef&&m.expr instanceof t.CompareExpr)if(m.expr.op=="="){let g=(0,n.convertToMathExpr)(m.expr),b=(0,n.getNegatedVariable)(g);if(b){g=(0,n.reorganizeExpression)(g,b),g instanceof e.TLBBinaryOp&&(g=g.right);let P=h.variablesMap.get(b);if(P)P.negated=!0,P.deriveExpr=g;else throw new Error(`Variable ${b} not defined`)}else h.constraints.push(g)}else h.constraints.push((0,n.convertToMathExpr)(m.expr))})}function f(h){var y;let m=[];(y=h.constructors[0])===null||y===void 0||y.parameters.forEach(g=>{m.push(g.variable.name)}),h.constructors.forEach(g=>{var b;for(let P=0;P<g.parameters.length;P++)if(m[P]==null){let L=(b=g.parameters[P])===null||b===void 0?void 0:b.variable.name;L!=null&&(m[P]=L)}});for(let g=0;g<m.length;g++)m[g]==null&&(m[g]="arg"+g);h.constructors.forEach(g=>{var b;for(let P=0;P<g.parameters.length;P++){let L=m[P];L!=null&&((b=g.parameters[P])===null||b===void 0?void 0:b.variable.name)==null&&(g.parameters[P].variable.name=L)}})}function i(h){var y;let m=[];(y=h.constructors[0])===null||y===void 0||y.parameters.forEach(g=>{m.push(void 0)}),h.constructors.forEach(g=>{var b;for(let P=0;P<g.parameters.length;P++){let L=(b=g.parameters[P])===null||b===void 0?void 0:b.argName;L&&(m[P]=L)}}),h.constructors.forEach(g=>{for(let b=0;b<g.parameters.length;b++){let P=m[b],L=g.parameters[b];P!=null&&L!=null&&(L.argName=P,L.paramExpr instanceof e.TLBVarExpr&&(L.variable.deriveExpr=new e.TLBVarExpr(L.argName),L.paramExpr=L.variable.deriveExpr))}})}function c(h,y){let m=l(h),g=l(y);return m<g?1:m>g?-1:0}function l(h){let y=0;return h.tag.bitLen>0&&y++,h.parameters.forEach(m=>{m.variable.isConst&&y++}),y}function o(h,y,m){let g=(0,n.reorganizeExpression)(new e.TLBBinaryOp(new e.TLBVarExpr(y),h,"=",new Set,!1),m);if(g instanceof e.TLBBinaryOp)return g.right;throw new Error(`Couldn't reorganize expression ${h}`)}function D(h,y){let m=h.constructorDef.tag;if(m==null&&h.constructorDef.name=="_"||m&&m.length>1&&m[1]=="_")return{bitLen:0,binary:""};if(m==null)return{bitLen:32,binary:"0x"+F(h)};if(m[0]=="$")return{bitLen:m?.length-1,binary:"0b"+m.slice(1)};if(m[0]=="#"){const g=m.endsWith("_"),b=m.slice(1,g?-1:void 0);if(g){const L=parseInt(b,16).toString(2).padStart(b.length*4,"0").slice(0,-1),U=parseInt(L,2).toString(16).padStart(Math.ceil(L.length/4),"0");return{bitLen:L.length,binary:"0x"+U}}return{bitLen:b.length*4,binary:"0x"+b}}throw new Error("Unknown tag "+m)}function p(h){let y=new Set,m=0;h.constructors.forEach(g=>{for(;y.has(g.name);)g.name+=m.toString();y.add(g.name),m++})}function d(h,y,m){let g=[],b=new Map;b.set("Bool",["b814e002","e95dd78d"]),b.set("MsgAddressInt",["9bb90082","ca70d9f6"]),b.set("Bit",["12acf7f6"]),b.set("Grams",["31468450"]),b.set("MsgAddressExt",["9ccb7139","ee7b72a3"]),b.set("MsgAddress",["21d0382b","e06aa05e"]),b.set("VarUInteger",["988e36b3"]),b.set("VarInteger",["225aaee0"]),b.set("HashmapE",["1cc05be9","40b92161"]),b.set("HashmapAugE",["af55dae6","e135d248"]),b.set("BoolTrue",["b5311773"]),b.set("BoolFalse",["f3214771"]),b.forEach((P,L)=>{let U=m.get(L);if(U){let z=[];if(U.forEach(we=>{z.push(F(we.declaration))}),!(0,n.opCodeSetsEqual)(P,z))throw new Error("Bool primitive type is not correct in scheme");g.push(L)}}),g.forEach(P=>{h.types.delete(P)})}function C(h){h.types.forEach(y=>{y.constructors.forEach(m=>{let g=new Set;A(m.fields,g)})})}function A(h,y){h.forEach(m=>{m.subFields.length==0&&_(m,y),A(m.subFields,y)})}function _(h,y){let m=0;for(h.name=(0,r.findNotReservedName)(h.name);y.has(h.name);)h.name=(0,r.findNotReservedName)(h.name+"_"+m),m++;y.add(h.name)}function B(h){let y=new Map;return h.types.forEach((m,g)=>{let b=new Array;m.constructors.forEach(L=>{let U=new Map;L.variablesMap.forEach((q,X)=>{U.set(X,S(q))});let z=new Map;L.parametersMap.forEach((q,X)=>{z.set(X,E(q))});let we=new e.TLBConstructor(L.parameters.map(E),L.variables.map(S),U,z,L.name,L.fields,L.tag,L.constraints,L.declaration,L.tlbType);b.push(we)});let P=new e.TLBType(m.name,b);y.set(g,P)}),new e.TLBCode(y)}qe.convertCodeToReadonly=B;function E(h){return new e.TLBParameter(S(h.variable),h.paramExpr,h.argName)}function S(h){if(h.name==null)throw new Error("Variable is undefined");return new e.TLBVariable(h.isConst,h.negated,h.type,h.name,h.isField,h.deriveExpr,h.initialExpr)}function O(h,y){var m,g;let b="",P=y,L=h.locations.line-1,U=0;for(;!(!((m=P[L])===null||m===void 0)&&m.includes(";"));)b+=((g=P[L])===null||g===void 0?void 0:g.substring(U))+`
`,L++,U=0;let z=P[L];return z&&(b+=z.substring(U,z.indexOf(";")+1)),b}function $(h){h.variables.forEach(y=>{(0,n.calculateVariable)(y,h)}),h.parameters.forEach(y=>{(0,n.calculateVariable)(y.variable,h)})}const w={isFieldBuiltinDef:h=>h instanceof t.FieldBuiltinDef,isFieldCurlyExprDef:h=>h instanceof t.FieldCurlyExprDef,isFieldAnonymousDef:h=>h instanceof t.FieldAnonymousDef,isFieldNamedDef:h=>h instanceof t.FieldNamedDef,isFieldExprDef:h=>h instanceof t.FieldExprDef,isCompareExpr:h=>h instanceof t.CompareExpr,isMathExpr:h=>h instanceof t.MathExpr,isNegateExpr:h=>h instanceof t.NegateExpr,isNameExpr:h=>h instanceof t.NameExpr,isNumberExpr:h=>h instanceof t.NumberExpr,isCellRefExpr:h=>h instanceof t.CellRefExpr,isBuiltinZeroArgs:h=>h instanceof t.BuiltinZeroArgs,isBuiltinOneArgExpr:h=>h instanceof t.BuiltinOneArgExpr,isCombinatorExpr:h=>h instanceof t.CombinatorExpr,isCondExpr:h=>h instanceof t.CondExpr};function F(h){const y=x(h),m=new TextEncoder;return(0,r.crc32)(m.encode(y)).toString(16)}function v(h){const{isFieldBuiltinDef:y,isFieldCurlyExprDef:m,isFieldNamedDef:g,isFieldExprDef:b,isCompareExpr:P}=w;return!!(y(h)||m(h)||(g(h)||b(h))&&P(h.expr)&&h.expr.op==="=")}function x(h){const y=[h.constructorDef.name];return h.fields.forEach(m=>{y.push(M(m))}),y.push("=",h.combinator.name),h.combinator.args.forEach(m=>{y.push(j(m))}),y.join(" ")}function M(h){const{isFieldBuiltinDef:y,isFieldCurlyExprDef:m,isFieldNamedDef:g,isFieldExprDef:b,isFieldAnonymousDef:P}=w,L=[];return v(h)?((y(h)||g(h)||P(h)&&h.name)&&L.push(`${h.name}:`),y(h)?L.push(h.type):m(h)||g(h)||b(h)?L.push(j(h.expr)):P(h)&&L.push(V(h)),L.join("")):(g(h)?L.push(`${h.name}:`):P(h)&&h.name&&L.push(`${h.name}:`),g(h)||b(h)?L.push(j(h.expr)):P(h)&&L.push(V(h)),L.join(""))}function V(h){const y=h.fields.map((m,g)=>g>0?" "+M(m):M(m)).join("");return`${h.isRef?"^[ ":"[ "}${y} ]`}function j(h){const{isCompareExpr:y,isMathExpr:m,isNegateExpr:g,isNameExpr:b,isNumberExpr:P,isCellRefExpr:L,isBuiltinZeroArgs:U,isBuiltinOneArgExpr:z,isCombinatorExpr:we,isCondExpr:q}=w;if(y(h))return`${h.op} ${j(h.left)} ${j(h.right)}`;if(m(h))return oe(h);if(g(h))return"~"+j(h.expr);if(P(h))return String(h.num);if(b(h))return h.name;if(L(h))return"^"+j(h.expr);if(U(h))return h.name;if(z(h))return`${h.name} ${j(h.arg)}`;if(we(h)){const X=h.args.map(J=>j(J)).join(" ");return`${h.name} ${X}`}if(q(h)){let X=j(h.left);return h.dotExpr!==null&&(X+="."+h.dotExpr),X+="?"+j(h.condExpr),X}return String(h)}function oe(h){const{isNumberExpr:y}=w;return h.op==="+"?`${j(h.left)} + ${j(h.right)}`:h.op==="*"?y(h.right)&&!y(h.left)?`${j(h.right)} * ${j(h.left)}`:y(h.left)&&y(h.right)?String(h.left.num*h.right.num):`${j(h.left)} * ${j(h.right)}`:`${j(h.left)} ${h.op} ${j(h.right)}`}return qe}var Qe={},Vr;function nr(){if(Vr)return Qe;Vr=1,Object.defineProperty(Qe,"__esModule",{value:!0}),Qe.CodeBuilder=void 0;let t=class{constructor(){this.tabLevel=0,this.code=""}tab(){this.tabLevel++}unTab(){this.tabLevel--}inTab(r){this.tab(),r(),this.unTab()}add(r,u=!0){if(!r){this.code+=`
`;return}let n=" ".repeat(this.tabLevel*4);this.code+=n+r+(u?`
`:"")}addMultiline(r,u=!1){let n=r.split(`
`),a=0;for(let s of n)s===`
`&&n.indexOf(s)===n.length-1||(u&&a===0?this.code+=s+`
`:this.add(s),a++)}append(r){this.addMultiline(r.render())}appendInline(r){this.addMultiline(r.render(),!0)}render(){return this.code}};return Qe.CodeBuilder=t,Qe}var et={},I={},N={},jr;function ur(){if(jr)return N;jr=1,Object.defineProperty(N,"__esModule",{value:!0}),N.id=N.toCode=N.tCodeAsIs=N.tTernaryExpression=N.tComment=N.tMultiStatement=N.tDeclareVariable=N.tArrowFunctionType=N.tBinaryExpression=N.tUnaryOpExpression=N.tIfStatement=N.tExpressionStatement=N.tUnionTypeDeclaration=N.tArrowFunctionExpression=N.tUnionTypeExpression=N.tTypeParametersExpression=N.tBinaryNumericLiteral=N.tNumericLiteral=N.tMemberExpression=N.tFunctionCall=N.tReturnStatement=N.tStructExpression=N.tObjectExpression=N.tForCycle=N.tObjectProperty=N.tStructDeclaration=N.tTypeWithParameters=N.tTypedIdentifier=N.tFunctionDeclaration=N.tImportDeclaration=N.tStringLiteral=N.tIdentifier=void 0;const t=nr();function e(m){return{type:"Identifier",name:m}}N.tIdentifier=e;function r(m){return{type:"StringLiteral",value:m}}N.tStringLiteral=r;function u(m,g){return{type:"ImportDeclaration",importValue:m,from:g}}N.tImportDeclaration=u;function n(m,g,b,P,L){return{type:"FunctionDeclaration",name:m,typeParameters:g,returnType:b,parameters:P,body:L}}N.tFunctionDeclaration=n;function a(m,g,b=!1){return{type:"TypedIdentifier",name:m,typeId:g,optional:b}}N.tTypedIdentifier=a;function s(m,g){return{type:"TypeWithParameters",name:m,typeParameters:g}}N.tTypeWithParameters=s;function f(m,g,b){return{type:"StructDeclaration",name:m,fields:g,typeParametersExpression:b}}N.tStructDeclaration=f;function i(m,g){return{type:"ObjectProperty",key:m,value:g}}N.tObjectProperty=i;function c(m,g,b,P){return{type:"ForCycle",init:m,cond:g,inc:b,body:P}}N.tForCycle=c;function l(m){return{type:"ObjectExpression",objectValues:m}}N.tObjectExpression=l;function o(m){return{type:"StructExpression",fields:m}}N.tStructExpression=o;function D(m){return{type:"ReturnStatement",returnValue:m}}N.tReturnStatement=D;function p(m,g,b){return{type:"FunctionCall",functionId:m,parameters:g,typeParameters:b}}N.tFunctionCall=p;function d(m,g){return{type:"MemberExpression",thisObject:m,memberName:g}}N.tMemberExpression=d;function C(m){return{type:"NumericLiteral",value:m}}N.tNumericLiteral=C;function A(m){return{type:"BinaryNumericLiteral",value:m}}N.tBinaryNumericLiteral=A;function _(m){return{type:"TypeParametersExpression",typeParameters:m}}N.tTypeParametersExpression=_;function B(m){return{type:"UnionTypeExpression",unionMembers:m}}N.tUnionTypeExpression=B;function E(m,g){return{type:"ArrowFunctionExpression",parameters:m,body:g}}N.tArrowFunctionExpression=E;function S(m,g){return{type:"UnionTypeDeclaration",name:m,union:g}}N.tUnionTypeDeclaration=S;function O(m){return{type:"ExpressionStatement",expression:m}}N.tExpressionStatement=O;function $(m,g,b){return{type:"IfStatement",condition:m,body:g,elseBody:b}}N.tIfStatement=$;function w(m,g){return{type:"UnaryOpExpression",unaryOperator:m,expr:g}}N.tUnaryOpExpression=w;function F(m,g,b){return{type:"BinaryExpression",binarySign:g,left:m,right:b}}N.tBinaryExpression=F;function v(m,g){return{type:"ArrowFunctionType",parameters:m,returnType:g}}N.tArrowFunctionType=v;function x(m,g,b){return{type:"DeclareVariable",name:m,init:g,typeName:b}}N.tDeclareVariable=x;function M(m){return{type:"MultiStatement",statements:m}}N.tMultiStatement=M;function V(m){return{type:"Comment",value:m}}N.tComment=V;function j(m,g,b){return{type:"TernaryExpression",condition:m,body:g,elseBody:b}}N.tTernaryExpression=j;function oe(m){return{type:"CodeAsIs",code:m}}N.tCodeAsIs=oe;function h(m,g,b){for(let P=0;P<m.length;P++){let L=m[P];L!=null&&y(L,g),P+1<m.length&&g.add(b,!1)}return g}function y(m,g=new t.CodeBuilder){if(m.type=="Identifier"&&g.add(m.name,!1),m.type=="NumericLiteral"&&g.add(m.value.toString(),!1),m.type=="ImportDeclaration"&&g.add(`import { ${y(m.importValue).render()} } from ${y(m.from).render()}`,!1),m.type=="FunctionDeclaration"&&(g.add(`export function ${y(m.name).render()}${y(m.typeParameters).render()}(`,!1),h(m.parameters,g,", "),g.add(`)${m.returnType?": "+y(m.returnType).render():""} {`),g.inTab(()=>{m.body.forEach(b=>{g.append(y(b))})}),g.add("}")),m.type=="ArrowFunctionExpression"&&(g.add("((",!1),h(m.parameters,g,", "),g.add(") => {"),g.inTab(()=>{m.body.forEach(b=>{g.append(y(b))})}),g.add("})",!1)),m.type=="ArrowFunctionType"&&g.add(`(${h(m.parameters,new t.CodeBuilder,", ").render()}) => ${m.returnType?y(m.returnType).render():""}`,!1),m.type=="TypeWithParameters"&&g.add(`${y(m.name).render()}${y(m.typeParameters).render()}`,!1),m.type=="TypedIdentifier"&&g.add(y(m.name).render()+(m.optional?"?":"")+": "+y(m.typeId).render(),!1),m.type=="ObjectProperty"&&g.add(y(m.key).render()+": "+y(m.value).render(),!1),m.type=="DeclareVariable"&&(g.add(`let ${y(m.name).render()}${m.typeName?": "+y(m.typeName).render():""}`,!1),m.init&&(g.add(" = ",!1),y(m.init,g))),m.type=="ObjectExpression"&&(g.add("{"),g.inTab(()=>{m.objectValues.forEach(b=>{g.add(y(b).render()+",")})}),g.add("}",!1)),m.type=="StructExpression"&&(g.add("{",!1),h(m.fields,g,", "),g.add("}",!1)),m.type=="MultiStatement"&&m.statements.forEach(b=>{g.append(y(b))}),m.type=="ReturnStatement"&&(g.add("return ",!1),g.appendInline(y(m.returnValue))),m.type=="ExpressionStatement"&&g.add(y(m.expression).render()+";",!1),m.type=="TypeParametersExpression"&&m.typeParameters.length>0&&(g.add("<",!1),h(m.typeParameters,g,", "),g.add(">",!1)),m.type=="StructDeclaration"&&(g.add(`export interface ${y(m.name).render()}${y(m.typeParametersExpression).render()} {`),g.inTab(()=>{m.fields.forEach(b=>{g.add(`readonly ${y(b).render()};`)})}),g.add("}")),m.type=="UnionTypeDeclaration"&&g.add(`export type ${y(m.name).render()} = ${y(m.union).render()};`),m.type=="UnionTypeExpression"&&h(m.unionMembers,g," | "),m.type=="FunctionCall"&&(g.add(`${y(m.functionId).render()}${m.typeParameters?y(m.typeParameters).render():""}(`,!1),h(m.parameters,g,", "),g.add(")",!1)),m.type=="StringLiteral"&&g.add(`'${m.value}'`,!1),m.type=="MemberExpression"&&g.add(y(m.thisObject).render()+"."+y(m.memberName).render(),!1),m.type=="IfStatement"&&(g.add(`if (${y(m.condition).render()}) {`),g.inTab(()=>{m.body.forEach(b=>{g.append(y(b))})}),g.add("}",!1)),m.type=="ForCycle"&&(g.add(`for (${y(m.init).render()};${y(m.cond).render()};${y(m.inc).render()}) {`),g.inTab(()=>{m.body.forEach(b=>{g.append(y(b))})}),g.add("}",!1)),m.type=="UnaryOpExpression"&&g.add(`(${m.unaryOperator}${y(m.expr).render()})`,!1),m.type=="BinaryExpression"&&g.add(`(${y(m.left).render()} ${m.binarySign} ${y(m.right).render()})`,!1),m.type=="TernaryExpression"&&g.add(`(${y(m.condition).render()} ? ${y(m.body).render()} : ${y(m.elseBody).render()})`,!1),m.type=="Comment"){let b=m.value.split(`
`);b.length==1?g.add(`// ${b[0]}`):(g.add("/*"),b.forEach(P=>{g.add(P)}),g.add("*/"))}return m.type=="CodeAsIs"&&g.add(m.code,!1),g}return N.toCode=y,N.id=e,N}var Y={},qr;function ir(){if(qr)return Y;qr=1,Object.defineProperty(Y,"__esModule",{value:!0}),Y.useBuffer=Y.isBigInt=Y.isBigIntExpr=Y.getCondition=Y.getTypeParametersExpression=Y.convertToAST=Y.addLoadProperty=Y.getNegationDerivationFunctionBody=Y.getVarExprByName=Y.getParamVarExpr=void 0;const t=We(),e=bt(),r=Sn(),u=ur();function n(d,C){if(d.variable.deriveExpr)return i(d.variable.deriveExpr,C);throw new Error(`Could not get expression for param ${d.variable.name} for constructor ${C.name} of type ${C.tlbType}`)}Y.getParamVarExpr=n;function a(d,C){let A=C.variablesMap.get(d);return A?.deriveExpr?i(A.deriveExpr,C):(0,u.id)(d)}Y.getVarExprByName=a;function s(d,C,A,_){let B=[],E=d.types.get(C);if(!E)throw new Error(`Can not find type ${C}`);E.constructors.forEach($=>{let w=$.parameters[A];if(w){let F;F=i(w.paramExpr,$);let v=[];w.variable.isConst||v.push((0,u.tExpressionStatement)((0,u.tDeclareVariable)((0,u.id)(w.variable.name),(0,u.tMemberExpression)((0,u.id)(_),(0,u.id)(w.variable.name))))),v.push((0,u.tReturnStatement)(F)),E&&B.push((0,u.tIfStatement)((0,r.tEqualExpression)((0,u.tMemberExpression)((0,u.id)(_),(0,u.id)("kind")),(0,u.tStringLiteral)((0,e.getSubStructName)(E,$))),v))}});let S=E.constructors.map($=>`"${E?(0,e.getSubStructName)(E,$):""}"`).join(", "),O=(0,u.tExpressionStatement)((0,u.id)(`throw new Error('Expected one of ${S} for type "${E.name}" while getting "${_}", but data does not satisfy any constructor')`));return B.push(O),B}Y.getNegationDerivationFunctionBody=s;function f(d,C,A,_){let B=(0,u.id)(d);_.loadStatements.push((0,u.tExpressionStatement)((0,u.tDeclareVariable)(B,C,A))),_.loadProperties.push((0,u.tObjectProperty)(B,B))}Y.addLoadProperty=f;function i(d,C,A){if(d instanceof t.TLBVarExpr){let _=d.x;return A!=null?(0,u.tMemberExpression)(A,(0,u.id)(_)):(0,u.id)(_)}if(d instanceof t.TLBNumberExpr)return(0,u.tNumericLiteral)(d.n);if(d instanceof t.TLBBinaryOp){let _=d.operation;return _=="="&&(_="=="),(0,u.tBinaryExpression)(i(d.left,C,A),_,i(d.right,C,A))}if(d instanceof t.TLBUnaryOp)return d.operation=="."?(0,u.tFunctionCall)((0,u.id)("bitLen"),[i(d.value,C,A)]):(0,u.tUnaryOpExpression)(d.operation,i(d.value,C,A));throw new Error(`Type ${C.tlbType}, constructor ${C.name}: couldn't convert to math expression: ${d}`)}Y.convertToAST=i;function c(d){let C=[];return d.forEach(_=>{_.variable.type=="Type"&&C.push((0,u.id)(_.variable.name))}),(0,u.tTypeParametersExpression)(C)}Y.getTypeParametersExpression=c;function l(d){let C=d[0];return C?d.length>1?(0,u.tBinaryExpression)(C,"&&",l(d.slice(1))):C:(0,u.id)("true")}Y.getCondition=l;function o(d){return!(d.expr instanceof t.TLBNumberExpr&&d.expr.n<=32)}Y.isBigIntExpr=o;function D(d){return!(d.bits instanceof t.TLBNumberExpr&&d.bits.n<=32||d.maxBits&&d.maxBits<=32)}Y.isBigInt=D;function p(d){return d.bits instanceof t.TLBNumberExpr&&d.bits.n%8==0}return Y.useBuffer=p,Y}var Gr;function Sn(){if(Gr)return I;Gr=1,Object.defineProperty(I,"__esModule",{value:!0}),I.dictAugTypeExpr=I.dictAugParse=I.dictKeyExpr=I.dictLoadExpr=I.dictValueStore=I.dictTypeParamExpr=I.dictStoreStmt=I.negationDerivationFuncDecl=I.inSeparateRef=I.checkConstraintStmt=I.newCellStmt=I.storeRefStmt=I.loadRefStmt=I.storeRefObjectStmt=I.storeExpressionNamedType=I.storeExprCond=I.loadTupleExpr=I.storeTupleStmt=I.arrayedType=I.loadFromNewSlice=I.storeInNewCell=I.storeCombinator=I.loadExprForParam=I.returnSliceFunc=I.storeExprForParam=I.coverFuncCall=I.storeFunctionExpr=I.checkHasBitsForTag=I.checkTagExpr=I.skipTagStmt=I.loadFunctionParam=I.storeFunctionParam=I.simpleCycle=I.sliceLoad=I.typedSlice=I.bitlenFunctionDecl=I.checkKindStmt=I.storeFunctionStmt=I.storeTagExpression=I.tEqualExpression=void 0;const t=bt(),e=ur(),r=ir();function u(T,R){return(0,e.tBinaryExpression)(T,"==",R)}I.tEqualExpression=u;function n(T){return(0,e.tExpressionStatement)((0,e.tFunctionCall)((0,e.tMemberExpression)((0,e.id)("builder"),(0,e.id)("storeUint")),[(0,e.id)(T.binary),(0,e.tNumericLiteral)(T.bitLen)]))}I.storeTagExpression=n;function a(T){return(0,e.tReturnStatement)((0,e.tArrowFunctionExpression)([(0,e.tTypedIdentifier)((0,e.id)("builder"),(0,e.id)("Builder"))],T))}I.storeFunctionStmt=a;function s(T,R,K){return(0,e.tIfStatement)(u((0,e.tMemberExpression)((0,e.id)(T),(0,e.id)("kind")),(0,e.tStringLiteral)(R)),[K])}I.checkKindStmt=s;function f(){return(0,e.tFunctionDeclaration)((0,e.id)("bitLen"),(0,e.tTypeParametersExpression)([]),null,[(0,e.tTypedIdentifier)((0,e.id)("n"),(0,e.id)("number"))],[(0,e.tExpressionStatement)((0,e.id)("return n.toString(2).length"))])}I.bitlenFunctionDecl=f;function i(){return[(0,e.tTypedIdentifier)((0,e.id)("slice"),(0,e.id)("Slice"))]}I.typedSlice=i;function c(T,R){return(0,e.tExpressionStatement)((0,e.tDeclareVariable)((0,e.id)((0,t.getCurrentSlice)(T,"slice")),(0,e.tFunctionCall)((0,e.tMemberExpression)((0,e.tFunctionCall)((0,e.tMemberExpression)((0,e.id)(R),(0,e.id)("loadRef")),[]),(0,e.id)("beginParse")),[(0,e.id)("true")])))}I.sliceLoad=c;function l(T,R){return(0,e.tForCycle)((0,e.tDeclareVariable)((0,e.id)(T),(0,e.tNumericLiteral)(0)),(0,e.tBinaryExpression)((0,e.id)(T),"<",R),(0,e.tNumericLiteral)(5),[])}I.simpleCycle=l;function o(T){return(0,e.tTypedIdentifier)((0,e.id)("store"+T),(0,e.tArrowFunctionType)([(0,e.tTypedIdentifier)((0,e.id)((0,t.firstLower)(T)),(0,e.id)(T))],(0,e.tArrowFunctionType)([(0,e.tTypedIdentifier)((0,e.id)("builder"),(0,e.id)("Builder"))],(0,e.id)("void"))))}I.storeFunctionParam=o;function D(T){return(0,e.tTypedIdentifier)((0,e.id)("load"+T),(0,e.tArrowFunctionType)(i(),(0,e.id)(T)))}I.loadFunctionParam=D;function p(T){return(0,e.tExpressionStatement)((0,e.tFunctionCall)((0,e.tMemberExpression)((0,e.id)("slice"),(0,e.id)("loadUint")),[(0,e.tNumericLiteral)(T)]))}I.skipTagStmt=p;function d(T){return u((0,e.tFunctionCall)((0,e.tMemberExpression)((0,e.id)("slice"),(0,e.id)("preloadUint")),[(0,e.tNumericLiteral)(T.bitLen)]),(0,e.id)(T.binary))}I.checkTagExpr=d;function C(T){return(0,e.tBinaryExpression)((0,e.tMemberExpression)((0,e.id)("slice"),(0,e.id)("remainingBits")),">=",(0,e.tNumericLiteral)(T))}I.checkHasBitsForTag=C;function A(T,R){return(0,e.tArrowFunctionExpression)([(0,e.tTypedIdentifier)((0,e.id)("arg"),T)],[(0,e.tReturnStatement)((0,e.tArrowFunctionExpression)([(0,e.tTypedIdentifier)((0,e.id)("builder"),(0,e.id)("Builder"))],[R]))])}I.storeFunctionExpr=A;function _(T){return T.type=="FunctionCall"?(0,e.tArrowFunctionExpression)(i(),[(0,e.tReturnStatement)(T)]):T}I.coverFuncCall=_;function B(T,R,K){return(0,e.tExpressionStatement)((0,e.tFunctionCall)((0,e.tMemberExpression)((0,e.id)(T),(0,e.id)("store"+R.fieldStoreSuffix)),K))}I.storeExprForParam=B;function E(){return(0,e.tArrowFunctionExpression)(i(),[(0,e.tReturnStatement)((0,e.tFunctionCall)((0,e.tMemberExpression)((0,e.id)("slice"),(0,e.id)("asCell")),[]))])}I.returnSliceFunc=E;function S(T,R){return(0,e.tFunctionCall)((0,e.tMemberExpression)((0,e.id)(T),(0,e.id)("load"+R.fieldLoadSuffix)),R.argLoadExpr?[R.argLoadExpr]:[])}I.loadExprForParam=S;function O(T,R,K,le,Ye){return(0,e.tExpressionStatement)((0,e.tFunctionCall)((0,e.tFunctionCall)((0,e.id)("store"+T),R.concat(K),le),[(0,e.id)(Ye)]))}I.storeCombinator=O;function $(T,R){return(0,e.tMultiStatement)([(0,e.tExpressionStatement)((0,e.tDeclareVariable)((0,e.id)(T),(0,e.tFunctionCall)((0,e.id)("beginCell"),[]))),R,(0,e.tExpressionStatement)((0,e.tFunctionCall)((0,e.tMemberExpression)((0,e.id)("builder"),(0,e.id)("storeRef")),[(0,e.id)(T)]))])}I.storeInNewCell=$;function w(T){return(0,e.tArrowFunctionExpression)(i(),[c([1,0],"slice"),(0,e.tReturnStatement)(T)])}I.loadFromNewSlice=w;function F(T){return(0,e.tTypeWithParameters)((0,e.id)("Array"),(0,e.tTypeParametersExpression)([T]))}I.arrayedType=F;function v(T,R,K){return(0,e.tExpressionStatement)((0,e.tFunctionCall)((0,e.tMemberExpression)(T,(0,e.id)("forEach")),[(0,e.tArrowFunctionExpression)([(0,e.tTypedIdentifier)((0,e.id)("arg"),K)],[R])]))}I.storeTupleStmt=v;function x(T,R){return(0,e.tFunctionCall)((0,e.tMemberExpression)((0,e.tFunctionCall)((0,e.tMemberExpression)((0,e.id)("Array"),(0,e.id)("from")),[(0,e.tFunctionCall)((0,e.tMemberExpression)((0,e.tFunctionCall)((0,e.id)("Array"),[T]),(0,e.id)("keys")),[])]),(0,e.id)("map")),[(0,e.tArrowFunctionExpression)([(0,e.tTypedIdentifier)((0,e.id)("arg"),(0,e.id)("number"))],[(0,e.tReturnStatement)(R)])])}I.loadTupleExpr=x;function M(T,R){return(0,e.tIfStatement)((0,e.tBinaryExpression)(T,"!=",(0,e.id)("undefined")),[R])}I.storeExprCond=M;function V(T,R,K){return(0,e.tExpressionStatement)((0,e.tFunctionCall)((0,e.tFunctionCall)((0,e.id)("store"+T),R),[(0,e.id)(K)]))}I.storeExpressionNamedType=V;function j(T,R,K){return(0,e.tExpressionStatement)((0,e.tFunctionCall)((0,e.tMemberExpression)((0,e.id)(T),(0,e.id)("storeRef")),[(0,e.tMemberExpression)((0,e.id)(R.typeName),(0,e.id)(K.name))]))}I.storeRefObjectStmt=j;function oe(T,R){return(0,e.tExpressionStatement)((0,e.tDeclareVariable)((0,e.id)((0,t.getCurrentSlice)(T,"cell")),(0,e.tFunctionCall)((0,e.tMemberExpression)((0,e.id)(R),(0,e.id)("loadRef")),[])))}I.loadRefStmt=oe;function h(T,R){return(0,e.tExpressionStatement)((0,e.tFunctionCall)((0,e.tMemberExpression)((0,e.id)(R),(0,e.id)("storeRef")),[(0,e.id)((0,t.getCurrentSlice)(T,"cell"))]))}I.storeRefStmt=h;function y(T){return(0,e.tExpressionStatement)((0,e.tDeclareVariable)((0,e.id)((0,t.getCurrentSlice)(T,"cell")),(0,e.tFunctionCall)((0,e.id)("beginCell"),[])))}I.newCellStmt=y;function m(T,R){return(0,e.tIfStatement)((0,e.tUnaryOpExpression)("!",T),[(0,e.tExpressionStatement)((0,e.id)("throw new Error('Condition "+(0,e.toCode)(T).code+R+"')"))])}I.checkConstraintStmt=m;function g(T,R){T[T.length-1]++,T.push(0),R(),T.pop()}I.inSeparateRef=g;function b(T,R,K,le,Ye){return(0,e.tFunctionDeclaration)(R,(0,e.tTypeParametersExpression)([]),(0,e.id)("number"),[(0,e.tTypedIdentifier)((0,e.id)((0,t.findNotReservedName)(K)),(0,e.id)(le))],(0,r.getNegationDerivationFunctionBody)(T,le,Ye,K))}I.negationDerivationFuncDecl=b;function P(T,R,K,le,Ye){return(0,e.tExpressionStatement)((0,e.tFunctionCall)((0,e.tMemberExpression)((0,e.id)(T),(0,e.id)("storeDict"+(Ye?"Direct":""))),R.concat([K,le])))}I.dictStoreStmt=P;function L(T,R){return(0,e.tTypeWithParameters)((0,e.id)("Dictionary"),(0,e.tTypeParametersExpression)([(0,r.isBigIntExpr)(T.key)?(0,e.id)("bigint"):(0,e.id)("number"),R]))}I.dictTypeParamExpr=L;function U(T,R,K){let le=[(0,e.tExpressionStatement)((0,e.tFunctionCall)((0,e.tFunctionCall)(R,[(0,e.id)(K?"arg.value":"arg")]),[(0,e.id)("builder")]))];return K&&(le=[(0,e.tExpressionStatement)((0,e.tFunctionCall)((0,e.tFunctionCall)(K,[(0,e.id)("arg.extra")]),[(0,e.id)("builder")]))].concat(le)),(0,e.tObjectExpression)([(0,e.tObjectProperty)((0,e.id)("serialize"),(0,e.tArrowFunctionExpression)([(0,e.tTypedIdentifier)((0,e.id)("arg"),T),(0,e.tTypedIdentifier)((0,e.id)("builder"),(0,e.id)("Builder"))],le)),(0,e.tObjectProperty)((0,e.id)("parse"),(0,e.id)("() => { throw new Error('Not implemented') }"))])}I.dictValueStore=U;function z(T,R,K,le){return(0,e.tFunctionCall)((0,e.tMemberExpression)((0,e.id)("Dictionary"),(0,e.id)("load"+(le?"Direct":""))),[T,we(R),(0,e.id)(K)])}I.dictLoadExpr=z;function we(T){return(0,e.tObjectExpression)([(0,e.tObjectProperty)((0,e.id)("serialize"),(0,e.id)("() => { throw new Error('Not implemented') }")),(0,e.tObjectProperty)((0,e.id)("parse"),T)])}function q(T,R,K){let le;return K?le=(0,r.convertToAST)(T.expr,R.constructor,(0,e.id)(K)):le=(0,r.convertToAST)(T.expr,R.constructor),(0,e.tFunctionCall)((0,e.tMemberExpression)((0,e.id)("Dictionary.Keys"),(0,r.isBigIntExpr)(T)?(0,e.id)("BigUint"):(0,e.id)("Uint")),[le])}I.dictKeyExpr=q;function X(T,R){return(0,e.tArrowFunctionExpression)([(0,e.tTypedIdentifier)((0,e.id)("slice"),(0,e.id)("Slice"))],[(0,e.tReturnStatement)((0,e.tObjectExpression)([(0,e.tObjectProperty)((0,e.id)("extra"),T),(0,e.tObjectProperty)((0,e.id)("value"),R)]))])}I.dictAugParse=X;function J(T,R){return(0,e.tStructExpression)([(0,e.tTypedIdentifier)((0,e.id)("value"),T),(0,e.tTypedIdentifier)((0,e.id)("extra"),R)])}return I.dictAugTypeExpr=J,I}var Ur;function Tn(){if(Ur)return et;Ur=1,Object.defineProperty(et,"__esModule",{value:!0}),et.TypescriptGenerator=void 0;const t=We(),e=bt(),r=nr(),u=Sn(),n=ur(),a=ir();class s{constructor(i){this.jsCodeDeclarations=[],this.jsCodeConstructorDeclarations=[],this.jsCodeFunctionsDeclarations=[],this.tlbCode=i}addTonCoreClassUsage(i){this.jsCodeDeclarations.push((0,n.tImportDeclaration)((0,n.id)(i),(0,n.tStringLiteral)("@ton/core")))}addBuiltinCode(){this.addBitLenFunction(),this.addEmbeddedTypes(),this.addCopyCellToBuilder()}addBitLenFunction(){this.jsCodeDeclarations.push((0,u.bitlenFunctionDecl)())}addCopyCellToBuilder(){this.jsCodeDeclarations.push((0,n.tCodeAsIs)(`export function copyCellToBuilder(from: Cell, to: Builder): void {
    let slice = from.beginParse();
    to.storeBits(slice.loadBits(slice.remainingBits));
    while (slice.remainingRefs) {
        to.storeRef(slice.loadRef());
    }
}`))}addEmbeddedTypes(){this.jsCodeDeclarations.push((0,n.tCodeAsIs)(`export interface Bool {
    readonly kind: 'Bool';
    readonly value: boolean;
}

export function loadBool(slice: Slice): Bool {
    if (slice.remainingBits >= 1) {
        let value = slice.loadUint(1);
        return {
            kind: 'Bool',
            value: value == 1
        }

    }
    throw new Error('Expected one of "BoolFalse" in loading "BoolFalse", but data does not satisfy any constructor');
}

export function storeBool(bool: Bool): (builder: Builder) => void {
    return ((builder: Builder) => {
        builder.storeUint(bool.value ? 1: 0, 1);
    })

}



export function loadBoolFalse(slice: Slice): Bool {
  if (((slice.remainingBits >= 1) && (slice.preloadUint(1) == 0b0))) {
      slice.loadUint(1);
      return {
          kind: 'Bool',
          value: false
      }

  }
  throw new Error('Expected one of "BoolFalse" in loading "BoolFalse", but data does not satisfy any constructor');
}

export function loadBoolTrue(slice: Slice): Bool {
  if (((slice.remainingBits >= 1) && (slice.preloadUint(1) == 0b1))) {
      slice.loadUint(1);
      return {
          kind: 'Bool',
          value: true
      }

  }
  throw new Error('Expected one of "BoolTrue" in loading "BoolTrue", but data does not satisfy any constructor');
}
`))}addTlbType(i){let c=(0,e.findNotReservedName)((0,e.firstLower)(i.name),"0"),l=[],o=[],D=[],p=[],d=(0,n.tTypeParametersExpression)([]);i.constructors.forEach(S=>{let O=(0,e.getSubStructName)(i,S),$={constructor:S,name:(0,e.findNotReservedName)((0,e.firstLower)(O),"_"+S.name),typeName:c,loadStatements:[],loadProperties:[(0,n.tObjectProperty)((0,n.id)("kind"),(0,n.tStringLiteral)(O))],properties:[(0,n.tTypedIdentifier)((0,n.id)("kind"),(0,n.tStringLiteral)(O))],storeStatements:[]};d=(0,a.getTypeParametersExpression)(S.parameters);let w=[0];S.variables.forEach(x=>{this.addVarToConstructorLoadProperty(x,$,S)}),S.fields.forEach(x=>{this.handleField(x,w,$)}),l.push((0,n.tTypeWithParameters)((0,n.id)(O),d));let F=(0,n.tStructDeclaration)((0,n.id)(O),$.properties,d);S.constraints.forEach(x=>{this.genCodeForConstraint(x,c,i,$)}),$.loadStatements.push((0,n.tReturnStatement)((0,n.tObjectExpression)($.loadProperties))),D=this.constructorStmtsToTypeStmts(S,i,$,D),S.tag.bitLen!=0&&$.storeStatements.splice(0,0,(0,u.storeTagExpression)(S.tag));let v=(0,u.storeFunctionStmt)($.storeStatements);i.constructors.length>1&&(v=(0,u.checkKindStmt)(c,O,v)),p.push(v),o.push(F),this.jsCodeFunctionsDeclarations.push((0,n.tComment)(S.declaration)),this.jsCodeConstructorDeclarations.push((0,n.tComment)(S.declaration))}),this.addExceptionStmts(i,D,p);let C=(0,u.typedSlice)();const A=(0,n.tTypeWithParameters)((0,n.id)(i.name),d);let _=[(0,n.tTypedIdentifier)((0,n.id)(c),A)];this.addFunctionParameters(i,C,_);let B=(0,n.tFunctionDeclaration)((0,n.id)("load"+i.name),d,A,C,D),E=(0,n.tFunctionDeclaration)((0,n.id)("store"+i.name),d,(0,n.id)("(builder: Builder) => void"),_,p);i.constructors.length>1&&this.jsCodeConstructorDeclarations.push((0,n.tUnionTypeDeclaration)(A,(0,n.tUnionTypeExpression)(l))),o.forEach(S=>{this.jsCodeConstructorDeclarations.push(S)}),this.jsCodeFunctionsDeclarations.push(B),this.jsCodeFunctionsDeclarations.push(E)}addFunctionParameters(i,c,l){let o=i.constructors[0];if(o)o.parameters.forEach(D=>{D.variable.type=="Type"&&(c.push((0,u.loadFunctionParam)(D.variable.name)),l.push((0,u.storeFunctionParam)(D.variable.name))),D.variable.type=="#"&&!D.variable.negated&&(D.argName?c.push((0,n.tTypedIdentifier)((0,n.id)(D.argName),(0,n.id)("number"))):c.push((0,n.tTypedIdentifier)((0,n.id)(D.variable.name),(0,n.id)("number"))))});else throw new Error(`Type ${i.name} should have at least one constructor`)}addExceptionStmts(i,c,l){var o;let D=i.constructors.map(d=>`"${(0,e.getSubStructName)(i,d)}"`).join(", "),p=(0,n.tExpressionStatement)((0,n.id)(`throw new Error('Expected one of ${D} in loading "${i.name}", but data does not satisfy any constructor')`));(i.constructors.length>1||((o=i.constructors.at(0))===null||o===void 0?void 0:o.tag.bitLen)!=0)&&c.push(p),i.constructors.length>1&&l.push(p)}constructorStmtsToTypeStmts(i,c,l,o){if(i.tag.bitLen!=0||c.constructors.length>1){let D=[];if(i.tag.bitLen!=0){D.push((0,u.checkHasBitsForTag)(i.tag.bitLen)),D.push((0,u.checkTagExpr)(i.tag));let p=[(0,u.skipTagStmt)(i.tag.bitLen)];l.loadStatements=p.concat(l.loadStatements)}i.parameters.forEach(p=>{if(p.variable.isConst&&!p.variable.negated){let d=p.variable.name;p.argName&&(d=p.argName),D.push((0,u.tEqualExpression)((0,n.id)(d),(0,a.getParamVarExpr)(p,i)))}}),o.push((0,n.tIfStatement)((0,a.getCondition)(D),l.loadStatements))}else o=o.concat(l.loadStatements);return o}genCodeForConstraint(i,c,l,o){let D=(0,a.convertToAST)(i,o.constructor),p=(0,a.convertToAST)(i,o.constructor,(0,n.id)(c)),d=` is not satisfied while loading "${(0,e.getSubStructName)(l,o.constructor)}" for type "${l.name}"`;o.loadStatements.push((0,u.checkConstraintStmt)(D,d)),o.storeStatements.push((0,u.checkConstraintStmt)(p,d))}addVarToConstructorLoadProperty(i,c,l){let o;if(i.negated&&i.deriveExpr&&(o=(0,a.convertToAST)(i.deriveExpr,l)),i.type=="#"&&!i.isField){const D=this.isOptionalVariable(i,c);c.properties.push((0,n.tTypedIdentifier)((0,n.id)(i.name),(0,n.id)("number"),D));let p=l.parametersMap.get(i.name);p&&!p.variable.isConst&&!p.variable.negated&&(o=(0,a.getParamVarExpr)(p,l))}o&&c.loadProperties.push((0,n.tObjectProperty)((0,n.id)(i.name),o))}toCode(i,c=new r.CodeBuilder){return(0,n.toCode)(i,c)}handleField(i,c,l){let o=(0,e.getCurrentSlice)(c,"slice"),D=(0,e.getCurrentSlice)(c,"cell");if(i.subFields.length>0&&(0,u.inSeparateRef)(c,()=>{l.loadStatements.push((0,u.sliceLoad)(c,o)),l.storeStatements.push((0,u.newCellStmt)(c)),i.subFields.forEach(p=>{this.handleField(p,c,l)}),l.storeStatements.push((0,u.storeRefStmt)(c,D))}),i.fieldType.kind=="TLBExoticType")(0,u.inSeparateRef)(c,()=>{l.loadStatements.push((0,u.loadRefStmt)(c,o)),(0,a.addLoadProperty)(i.name,(0,n.id)((0,e.getCurrentSlice)(c,"cell")),void 0,l),l.properties.push((0,n.tTypedIdentifier)((0,n.id)(i.name),(0,n.id)("Cell"))),l.storeStatements.push((0,u.storeRefObjectStmt)(D,l,i))});else if(i.subFields.length==0){let p=this.handleType(i,i.fieldType,!0,l,c,0);p.loadExpr&&(0,a.addLoadProperty)(i.name,p.loadExpr,p.typeParamExpr,l),p.typeParamExpr&&l.properties.push((0,n.tTypedIdentifier)((0,n.id)(i.name),p.typeParamExpr)),p.storeStmtOutside&&l.storeStatements.push(p.storeStmtOutside),p.negatedVariablesLoads.forEach(d=>{(0,a.addLoadProperty)(d.name,d.expression,void 0,l)})}}handleType(i,c,l,o,D,p){let d=(0,e.getCurrentSlice)(D,"slice"),C=(0,e.getCurrentSlice)(D,"cell"),A=i.name,_="slice",B="builder";l&&(_=d,B=C);let E={typeParamExpr:void 0,loadExpr:void 0,loadFunctionExpr:void 0,storeStmtOutside:void 0,storeStmtInside:void 0,storeFunctionExpr:void 0,negatedVariablesLoads:[]},S,O;O=[(0,n.tMemberExpression)((0,n.id)(o.typeName),(0,n.id)(A))];let $=[(0,n.id)("arg")];if(c.kind=="TLBNumberType")S={argLoadExpr:(0,a.convertToAST)(c.bits,o.constructor),argStoreExpr:(0,a.convertToAST)(c.storeBits,o.constructor,(0,n.id)(o.typeName)),paramType:"number",fieldLoadSuffix:c.signed?"Int":"Uint",fieldStoreSuffix:c.signed?"Int":"Uint"},(0,a.isBigInt)(c)&&(S.fieldLoadSuffix+="Big",S.paramType="bigint");else if(c.kind=="TLBBitsType")if(c.bits instanceof t.TLBNumberExpr&&c.bits.n==1)S={argLoadExpr:void 0,argStoreExpr:void 0,paramType:"boolean",fieldLoadSuffix:"Bit",fieldStoreSuffix:"Bit"};else{let w=(0,a.useBuffer)(c),F=w?"Buffer":"Bits",v=(0,a.convertToAST)(c.bits,o.constructor),x=(0,a.convertToAST)(c.bits,o.constructor,(0,n.id)(o.name));w&&(v=(0,n.tBinaryExpression)(v,"/",(0,n.tNumericLiteral)(8)),x=(0,n.tBinaryExpression)(x,"/",(0,n.tNumericLiteral)(8))),S={argLoadExpr:v,argStoreExpr:x,paramType:w?"Buffer":"BitString",fieldLoadSuffix:F,fieldStoreSuffix:F}}else if(c.kind=="TLBCellType")S={argLoadExpr:(0,n.id)(_),argStoreExpr:(0,n.id)(_),paramType:"Cell",fieldLoadSuffix:"Ref",fieldStoreSuffix:"Slice"},O[0]=(0,n.tFunctionCall)((0,n.tMemberExpression)(O[0],(0,n.id)("beginParse")),[(0,n.id)("true")]),$[0]=(0,n.tFunctionCall)((0,n.tMemberExpression)($[0],(0,n.id)("beginParse")),[(0,n.id)("true")]);else if(c.kind=="TLBCoinsType")S={argLoadExpr:void 0,argStoreExpr:void 0,paramType:"bigint",fieldLoadSuffix:"Coins",fieldStoreSuffix:"Coins"};else if(c.kind=="TLBVarIntegerType")S={argLoadExpr:(0,a.convertToAST)(c.n,o.constructor),argStoreExpr:(0,a.convertToAST)(c.n,o.constructor,(0,n.id)(o.name)),paramType:"bigint",fieldLoadSuffix:c.signed?"VarIntBig":"VarUintBig",fieldStoreSuffix:c.signed?"VarInt":"VarUint"};else if(c.kind=="TLBTupleType")E.loadExpr=(0,n.tFunctionCall)((0,n.id)("parseTuple"),[(0,n.tFunctionCall)((0,n.tMemberExpression)((0,n.id)("slice"),(0,n.id)("asCell")),[])]),E.typeParamExpr=(0,n.id)("TupleItem[]"),E.storeStmtInside=(0,n.tExpressionStatement)((0,n.tFunctionCall)((0,n.id)("copyCellToBuilder"),[(0,n.tFunctionCall)((0,n.id)("serializeTuple"),$),(0,n.id)("builder")])),E.storeStmtOutside=(0,n.tExpressionStatement)((0,n.tFunctionCall)((0,n.id)("copyCellToBuilder"),[(0,n.tFunctionCall)((0,n.id)("serializeTuple"),O),(0,n.id)("builder")]));else if(c.kind=="TLBAddressType")if(c.addrType=="Internal")S={argLoadExpr:void 0,argStoreExpr:void 0,paramType:"Address",fieldLoadSuffix:"Address",fieldStoreSuffix:"Address"};else if(c.addrType=="External")S={argLoadExpr:void 0,argStoreExpr:void 0,paramType:"ExternalAddress | null",fieldLoadSuffix:"MaybeExternalAddress",fieldStoreSuffix:"Address"};else if(c.addrType=="Any")S={argLoadExpr:void 0,argStoreExpr:void 0,paramType:"Address | ExternalAddress | null",fieldLoadSuffix:"AddressAny",fieldStoreSuffix:"Address"};else throw new Error("Address has type other than ['Internal', 'External', 'Any']");else if(c.kind=="TLBExprMathType")E.loadExpr=(0,a.convertToAST)(c.expr,o.constructor),E.storeStmtOutside=(0,n.tExpressionStatement)(E.loadExpr);else if(c.kind=="TLBNegatedType"){let w=(0,n.id)(o.name+"_get_"+c.variableName);if(i.fieldType.kind=="TLBNamedType"){let F=i.fieldType.name;this.jsCodeFunctionsDeclarations.push((0,u.negationDerivationFuncDecl)(this.tlbCode,w,A,F,p))}E.negatedVariablesLoads.push({name:c.variableName,expression:(0,n.tFunctionCall)(w,[(0,n.id)(A)])})}else if(c.kind=="TLBNamedType"&&c.arguments.length==0){let w=c.name;E.typeParamExpr=(0,n.id)(w),l?(E.loadExpr=(0,n.tFunctionCall)((0,n.id)("load"+w),[(0,n.id)(_)]),E.storeStmtOutside=(0,u.storeExpressionNamedType)(w,O,C),E.storeStmtInside=(0,u.storeExpressionNamedType)(w,$,C)):(E.loadExpr=(0,n.id)("load"+w),E.storeStmtOutside=(0,n.tExpressionStatement)((0,n.id)("store"+w)))}else if(c.kind=="TLBCondType"){let w,F;w=this.handleType(i,c.value,!0,o,D,p),F=(0,a.convertToAST)(c.condition,o.constructor),w.typeParamExpr&&(E.typeParamExpr=(0,n.tUnionTypeExpression)([w.typeParamExpr,(0,n.id)("undefined")])),w.loadExpr&&(E.loadExpr=(0,n.tTernaryExpression)(F,w.loadExpr,(0,n.id)("undefined")));let v=O[0],x=$[0];v&&x&&w.storeStmtOutside&&(E.storeStmtOutside=(0,u.storeExprCond)(v,w.storeStmtOutside),E.storeStmtInside=(0,u.storeExprCond)(x,w.storeStmtOutside))}else if(c.kind=="TLBMultipleType"){let w,F;w=(0,a.convertToAST)(c.times,o.constructor),F=this.handleType(i,c.value,!1,o,D,p);let v=O[0],x=$[0];F.loadExpr&&(E.loadExpr=(0,u.loadTupleExpr)(w,F.loadExpr)),v&&x&&F.typeParamExpr&&F.storeStmtOutside&&F.storeFunctionExpr&&F.storeStmtInside&&(E.storeStmtOutside=(0,u.storeTupleStmt)(v,F.storeStmtInside,F.typeParamExpr),E.storeStmtInside=(0,u.storeTupleStmt)(x,F.storeStmtInside,F.typeParamExpr)),F.typeParamExpr&&(E.typeParamExpr=(0,u.arrayedType)(F.typeParamExpr))}else if(c.kind=="TLBCellInsideType"){let w=(0,e.getCurrentSlice)([1,0],"cell"),F=this.handleType(i,c.value,!0,o,[1,0],p);F.loadExpr&&(E.typeParamExpr=F.typeParamExpr,E.storeStmtOutside=F.storeStmtOutside,E.negatedVariablesLoads=F.negatedVariablesLoads,E.loadFunctionExpr=(0,u.loadFromNewSlice)(F.loadExpr),E.loadExpr=(0,n.tFunctionCall)(E.loadFunctionExpr,[(0,n.id)(_)])),F.storeStmtOutside&&(E.storeStmtOutside=(0,u.storeInNewCell)(w,F.storeStmtOutside)),F.storeStmtInside&&(E.storeStmtInside=(0,u.storeInNewCell)(w,F.storeStmtInside))}else if(c.kind=="TLBBoolType"){let w="load"+(c.value===void 0?"Bool":c.value?"BoolTrue":"BoolFalse");E.loadExpr=(0,n.tFunctionCall)((0,n.id)(w),[(0,n.id)("slice")]),E.typeParamExpr=(0,n.id)("Bool"),E.storeStmtInside=(0,n.tExpressionStatement)((0,n.tFunctionCall)((0,n.tFunctionCall)((0,n.id)("storeBool"),$),[(0,n.id)("builder")])),E.storeStmtOutside=(0,n.tExpressionStatement)((0,n.tFunctionCall)((0,n.tFunctionCall)((0,n.id)("storeBool"),O),[(0,n.id)("builder")]))}else if(c.kind=="TLBHashmapType"){let w=(0,u.dictKeyExpr)(c.key,o),F=(0,u.dictKeyExpr)(c.key,o,o.typeName),v=this.handleType(i,c.value,c.extra!=null,o,D,p);if(v.typeParamExpr&&v.loadFunctionExpr&&v.storeFunctionExpr){let x;if(c.extra&&v.loadExpr){let M=this.handleType(i,c.extra,!0,o,D,p);M.typeParamExpr&&(v.typeParamExpr=(0,u.dictAugTypeExpr)(v.typeParamExpr,M.typeParamExpr)),x=(0,u.dictValueStore)(v.typeParamExpr,v.storeFunctionExpr,M.storeFunctionExpr),M.loadExpr&&(E.loadExpr=(0,u.dictLoadExpr)(w,(0,u.dictAugParse)(M.loadExpr,v.loadExpr),d,c.directStore))}else x=(0,u.dictValueStore)(v.typeParamExpr,v.storeFunctionExpr),E.loadExpr=(0,u.dictLoadExpr)(w,v.loadFunctionExpr,d,c.directStore);E.typeParamExpr=(0,u.dictTypeParamExpr)(c,v.typeParamExpr),E.storeStmtInside=(0,u.dictStoreStmt)(C,$,F,x,c.directStore),E.storeStmtOutside=(0,u.dictStoreStmt)(C,O,F,x,c.directStore)}}else if(c.kind=="TLBNamedType"&&c.arguments.length){let w=c.name,F=(0,n.tTypeParametersExpression)([]),v=[],x=[],M=-1;c.arguments.forEach(oe=>{M++;let h=this.handleType(i,oe,!1,o,D,M);h.typeParamExpr&&F.typeParameters.push(h.typeParamExpr),h.loadFunctionExpr&&v.push(h.loadFunctionExpr),h.storeFunctionExpr&&x.push(h.storeFunctionExpr),E.negatedVariablesLoads=E.negatedVariablesLoads.concat(h.negatedVariablesLoads)}),E.typeParamExpr=(0,n.tTypeWithParameters)((0,n.id)(w),F);let V=F,j=[(0,n.id)(_)];E.loadExpr=(0,n.tFunctionCall)((0,n.id)("load"+w),j.concat(v),V),E.storeStmtOutside=(0,u.storeCombinator)(w,O,x,V,B),E.storeStmtInside=(0,u.storeCombinator)(w,$,x,V,B),S&&(E.typeParamExpr=(0,n.id)(S.paramType))}return S&&(S.paramType!="BitString"&&S.paramType!="Cell"&&S.argStoreExpr&&(O.push(S.argStoreExpr),$.push(S.argStoreExpr)),E.loadExpr=(0,u.loadExprForParam)(d,S),S.paramType=="Cell"&&(E.loadExpr=(0,n.tFunctionCall)((0,n.tMemberExpression)((0,n.id)(d),(0,n.id)("asCell")),[]),E.loadFunctionExpr=(0,u.returnSliceFunc)()),E.typeParamExpr=(0,n.id)(S.paramType),E.storeStmtOutside=(0,u.storeExprForParam)(B,S,O),E.storeStmtInside=(0,u.storeExprForParam)(B,S,$)),E.loadExpr&&!E.loadFunctionExpr&&(E.loadFunctionExpr=(0,u.coverFuncCall)(E.loadExpr)),E.storeStmtOutside&&!E.storeFunctionExpr&&(E.storeStmtInside||(E.storeStmtInside=E.storeStmtOutside),E.typeParamExpr&&(E.storeStmtOutside.type=="ExpressionStatement"&&E.storeStmtOutside.expression.type=="FunctionCall"||E.storeStmtOutside.type=="MultiStatement"?E.storeFunctionExpr=(0,u.storeFunctionExpr)(E.typeParamExpr,E.storeStmtInside):E.storeStmtOutside.type=="ExpressionStatement"&&(E.storeFunctionExpr=E.storeStmtOutside.expression))),E.storeStmtInside&&(E.storeStmtInside=Object.assign({},E.storeStmtInside)),E}isOptionalVariable(i,c){const l=this.collectFieldsUsedInStore(c),o=c.constructor.parameters.some(D=>D.variable.name===i.name||D.argName===i.name);return!l.has(i.name)&&!o}collectFieldsUsedInStore(i){const c=new Set;for(const l of i.storeStatements)this.extractFieldReferences(l,i.typeName,c);return c}extractFieldReferences(i,c,l){if(i)switch(i.type){case"ExpressionStatement":this.extractFieldReferences(i.expression,c,l);break;case"IfStatement":this.extractFieldReferences(i.condition,c,l),i.body&&i.body.forEach(o=>this.extractFieldReferences(o,c,l)),i.elseBody&&i.elseBody.forEach(o=>this.extractFieldReferences(o,c,l));break;case"MultiStatement":i.statements.forEach(o=>this.extractFieldReferences(o,c,l));break;case"ReturnStatement":this.extractFieldReferences(i.returnValue,c,l);break;case"MemberExpression":i.thisObject.type==="Identifier"&&i.thisObject.name===c&&i.memberName.type==="Identifier"&&l.add(i.memberName.name),this.extractFieldReferences(i.thisObject,c,l);break;case"FunctionCall":this.extractFieldReferences(i.functionId,c,l),i.parameters.forEach(o=>this.extractFieldReferences(o,c,l));break;case"BinaryExpression":this.extractFieldReferences(i.left,c,l),this.extractFieldReferences(i.right,c,l);break;case"UnaryOpExpression":this.extractFieldReferences(i.expr,c,l);break;case"TernaryExpression":this.extractFieldReferences(i.condition,c,l),this.extractFieldReferences(i.body,c,l),this.extractFieldReferences(i.elseBody,c,l);break;case"ArrowFunctionExpression":i.body.forEach(o=>this.extractFieldReferences(o,c,l));break;case"ObjectExpression":i.objectValues.forEach(o=>{this.extractFieldReferences(o.key,c,l),this.extractFieldReferences(o.value,c,l)});break}}}return et.TypescriptGenerator=s,et}var Hr;function In(){if(Hr)return ye;Hr=1;var t=ye&&ye.__awaiter||function(l,o,D,p){function d(C){return C instanceof D?C:new D(function(A){A(C)})}return new(D||(D=Promise))(function(C,A){function _(S){try{E(p.next(S))}catch(O){A(O)}}function B(S){try{E(p.throw(S))}catch(O){A(O)}}function E(S){S.done?C(S.value):d(S.value).then(_,B)}E((p=p.apply(l,o||[])).next())})};Object.defineProperty(ye,"__esModule",{value:!0}),ye.generateCodeFromData=ye.getGenerator=ye.generateCodeByAST=ye.getTLBCodeByAST=void 0;const e=Xe(),r=$r(),u=$r(),n=nr(),a=Tn();function s(l,o){let D={types:new Map},p=o.split(`
`);return(0,u.fillConstructors)(l.declarations,D,p),(0,r.convertCodeToReadonly)(D)}ye.getTLBCodeByAST=s;function f(l,o,D){let p=s(l,o),d=D(p);d.addTonCoreClassUsage("Builder"),d.addTonCoreClassUsage("Slice"),d.addTonCoreClassUsage("beginCell"),d.addTonCoreClassUsage("BitString"),d.addTonCoreClassUsage("Cell"),d.addTonCoreClassUsage("Address"),d.addTonCoreClassUsage("ExternalAddress"),d.addTonCoreClassUsage("Dictionary"),d.addTonCoreClassUsage("DictionaryValue"),d.addTonCoreClassUsage("TupleItem"),d.addTonCoreClassUsage("parseTuple"),d.addTonCoreClassUsage("serializeTuple"),d.addBuiltinCode();let C=[];d.jsCodeDeclarations.forEach(_=>{C.push(_)}),p.types.forEach(_=>{d.addTlbType(_)});let A="";return d.jsCodeConstructorDeclarations.forEach(_=>{C.push(_)}),d.jsCodeFunctionsDeclarations.forEach(_=>{C.push(_)}),C.forEach(_=>{A+=d.toCode(_,new n.CodeBuilder).render()+`
`}),A}ye.generateCodeByAST=f;function i(l){return o=>{if(l=="typescript")return new a.TypescriptGenerator(o);throw new Error(`Result language ${l} is not supported`)}}ye.getGenerator=i;function c(l,o){return t(this,void 0,void 0,function*(){const D=(0,e.ast)(l);return f(D,l,i(o))})}return ye.generateCodeFromData=c,ye}var Fe={},zr;function Aa(){if(zr)return Fe;zr=1;var t=Fe&&Fe.__awaiter||function(i,c,l,o){function D(p){return p instanceof l?p:new l(function(d){d(p)})}return new(l||(l=Promise))(function(p,d){function C(B){try{_(o.next(B))}catch(E){d(E)}}function A(B){try{_(o.throw(B))}catch(E){d(E)}}function _(B){B.done?p(B.value):D(B.value).then(C,A)}_((o=o.apply(i,c||[])).next())})},e=Fe&&Fe.__importDefault||function(i){return i&&i.__esModule?i:{default:i}};Object.defineProperty(Fe,"__esModule",{value:!0}),Fe.generateCode=Fe.generateCodeWithGenerator=Fe.getTLBCode=void 0;const r=e(Nn),u=Xe(),n=In();function a(i){return t(this,void 0,void 0,function*(){const c=yield r.default.readFile(i,"utf-8"),l=(0,u.ast)(c);return(0,n.getTLBCodeByAST)(l,c)})}Fe.getTLBCode=a;function s(i,c,l){return t(this,void 0,void 0,function*(){const o=yield r.default.readFile(i,"utf-8"),D=(0,u.ast)(o);yield r.default.writeFile(c,(0,n.generateCodeByAST)(D,o,l),{}),console.log(`Generated code is saved to ${c}`)})}Fe.generateCodeWithGenerator=s;function f(i,c,l){return t(this,void 0,void 0,function*(){return s(i,c,(0,n.getGenerator)(l))})}return Fe.generateCode=f,Fe}var Xr;function wn(){return Xr||(Xr=1,(function(t){var e=$e&&$e.__createBinding||(Object.create?(function(f,i,c,l){l===void 0&&(l=c);var o=Object.getOwnPropertyDescriptor(i,c);(!o||("get"in o?!i.__esModule:o.writable||o.configurable))&&(o={enumerable:!0,get:function(){return i[c]}}),Object.defineProperty(f,l,o)}):(function(f,i,c,l){l===void 0&&(l=c),f[l]=i[c]})),r=$e&&$e.__exportStar||function(f,i){for(var c in f)c!=="default"&&!Object.prototype.hasOwnProperty.call(i,c)&&e(i,f,c)};Object.defineProperty(t,"__esModule",{value:!0}),t.TypescriptGenerator=t.isBigIntExprForJson=t.isBigIntForJson=t.generateCodeWithGenerator=t.getTLBCode=t.generateCode=t.generateCodeFromData=t.generateCodeByAST=t.getTLBCodeByAST=void 0;var u=In();Object.defineProperty(t,"getTLBCodeByAST",{enumerable:!0,get:function(){return u.getTLBCodeByAST}}),Object.defineProperty(t,"generateCodeByAST",{enumerable:!0,get:function(){return u.generateCodeByAST}}),Object.defineProperty(t,"generateCodeFromData",{enumerable:!0,get:function(){return u.generateCodeFromData}});var n=Aa();Object.defineProperty(t,"generateCode",{enumerable:!0,get:function(){return n.generateCode}}),Object.defineProperty(t,"getTLBCode",{enumerable:!0,get:function(){return n.getTLBCode}}),Object.defineProperty(t,"generateCodeWithGenerator",{enumerable:!0,get:function(){return n.generateCodeWithGenerator}}),r(We(),t);var a=ir();Object.defineProperty(t,"isBigIntForJson",{enumerable:!0,get:function(){return a.isBigInt}}),Object.defineProperty(t,"isBigIntExprForJson",{enumerable:!0,get:function(){return a.isBigIntExpr}});var s=Tn();Object.defineProperty(t,"TypescriptGenerator",{enumerable:!0,get:function(){return s.TypescriptGenerator}})})($e)),$e}var Ge={},Kr;function _a(){if(Kr)return Ge;Kr=1,Object.defineProperty(Ge,"__esModule",{value:!0}),Ge.stringToBits=r,Ge.bitsToString=u,Ge.normalizeBitString=n,Ge.toCell=a;const t=$t(),e=ar();function r(s){const f=sr.from(s,"utf-8");return new t.BitString(f,0,f.length*8)}function u(s){if(s.length%8!==0)throw new Error("Bits must be at least 8 bits");let f="";for(let i=0;i<s.length;i+=8)f+=String.fromCharCode(parseInt(`0x${s.substring(i,8).toString()}`));return f}function n(s){const f=s.length,i=sr.alloc(Math.ceil(f/8));for(let c=0;c<f;c++){const l=Math.floor(c/8),o=7-c%8;s.at(c)&&(i[l]|=1<<o)}return new t.BitString(i,0,f)}function a(s){try{return{success:!0,value:t.Cell.fromBase64(s)}}catch{try{return{success:!0,value:t.Cell.fromHex(s)}}catch{return{success:!1,error:new e.TLBDataError("Bad BoC string")}}}}return Ge}var tt={},Wr;function ya(){if(Wr)return tt;Wr=1,Object.defineProperty(tt,"__esModule",{value:!0}),tt.MathExprEvaluator=void 0;const t=wn();let e=class Mt{variables;constructor(u=new Map){this.variables=u}static calculateBitsForLessThan(u){if(u<=0||u===1)return 0;const n=u-1;return n===0?0:Math.ceil(Math.log2(n+1))}static calculateBitsForLessThanOrEqual(u){return u<0||u===0?0:Math.ceil(Math.log2(u+1))}evaluate(u){if(u instanceof t.TLBNumberExpr)return u.n;if(u instanceof t.TLBVarExpr){const n=this.variables.get(u.x);if(n===void 0)throw new Error(`Variable ${u.x} is not defined`);return n}if(u instanceof t.TLBBinaryOp){const n=this.evaluate(u.left),a=this.evaluate(u.right);switch(u.operation){case"+":return n+a;case"-":return n-a;case"*":return n*a;case"/":return Math.floor(n/a);case"%":return n%a;case"<<":return n<<a;case">>":return n>>a;case"&":return n&a;case"|":return n|a;case"^":return n^a;case"==":return n===a?1:0;case"!=":return n!==a?1:0;case"<":return n<a?1:0;case"<=":return n<=a?1:0;case">":return n>a?1:0;case">=":return n>=a?1:0;case"=":return n===a?1:0;default:throw new Error(`Unknown operation: ${u.operation}`)}}if(u instanceof t.TLBUnaryOp){const n=u.operation;switch(n){case".":{const a=u.value;if(a instanceof t.TLBBinaryOp&&a.operation==="-"){const s=this.evaluate(a.left),f=this.evaluate(a.right);return f===1?Mt.calculateBitsForLessThan(s):s-f}return a instanceof t.TLBNumberExpr?Mt.calculateBitsForLessThanOrEqual(a.n):this.evaluate(a)}case"-":return-this.evaluate(u.value);case"~":return~this.evaluate(u.value);case"!":return this.evaluate(u.value)?0:1;default:throw new Error(`Unknown unary operation: ${n}`)}}throw new Error(`Unsupported expression type: ${typeof u}`)}};return tt.MathExprEvaluator=e,tt}var rt={},Yr;function Ln(){if(Yr)return rt;Yr=1,Object.defineProperty(rt,"__esModule",{value:!0}),rt.error=t,rt.unwrap=e;function t(r){return r instanceof Error?r:new Error(String(r))}function e(r){if(r.success)return r.value;throw t(r.error)}return rt}var Zr;function ar(){if(Zr)return xe;Zr=1,Object.defineProperty(xe,"__esModule",{value:!0}),xe.TLBRuntime=xe.TLBDataError=xe.TLBSchemaError=xe.TLBRuntimeError=void 0,xe.parseTLB=o;const t=$t(),e=wn(),r=Xe(),u=_a(),n=ya(),a=Ln();class s extends Error{}xe.TLBRuntimeError=s;class f extends s{}xe.TLBSchemaError=f;class i extends s{}xe.TLBDataError=i;function c(D){return`0b${BigInt(D.binary).toString(2).padStart(D.bitLen,"0")}`}let l=class Rt{schema;types;lastTypeName;config;tagMap=new Map;maxSizeTag=0;constructor(p,d,C,A={}){this.schema=p,this.types=d,this.lastTypeName=C,this.config=A,A.autoText=A.autoText||!0;for(const _ of this.types.values())for(const B of _.constructors)if(B.tag.bitLen>0){B.tag.bitLen>this.maxSizeTag&&(this.maxSizeTag=B.tag.bitLen);const E=c(B.tag);this.tagMap.set(E,{type:_,item:B})}}static from(p,d={}){try{const C=(0,r.ast)(p),A=(0,e.getTLBCodeByAST)(C,p),_=p.split("="),B=_[_.length-1].split(";")[0].trim().split(" ")[0].trim();return{success:!0,value:new Rt(p,A.types,B,d)}}catch{}return{success:!1,error:new f("Bad Schema")}}changeSchema(p){return this.schema===p?{success:!0,value:this}:Rt.from(p,this.config)}parseCell(p){return(0,a.unwrap)(this.deserialize(p))}encodeCell(p){return typeof p=="string"&&(p=JSON.parse(p)),(0,a.unwrap)(this.serialize(p)).endCell()}findByTag(p){const d=p.remainingBits,C=Math.min(this.maxSizeTag,d);for(let A=C;A>=1;A--){if(d<A)continue;const _=p.preloadUint(A),B=c({bitLen:A,binary:`0x${_.toString(16)}`}),E=this.tagMap.get(B);if(E)return E}return null}deserialize(p,d=!1){if(typeof p=="string"){const _=(0,u.toCell)(p);if(!_.success)return _;p=_.value}const C=p.asSlice();if(d){const _=this.findByTag(C);if(_)return this.deserializeConstructor(_.type,_.item,C)}const A=Array.from(this.types.keys());try{const _=this.deserializeByTypeName(this.lastTypeName,C.clone());if(_.success)return _}catch{}for(const _ of A.slice().reverse()){if(_===this.lastTypeName)continue;const B=this.deserializeByTypeName(_,C.clone());if(B.success)return B}return{success:!1,error:new i("No matching constructor")}}deserializeByTypeName(p,d){const C=this.types.get(p);return C?this.deserializeType(C,d):{success:!1,error:new i(`Type ${p} not found in TL-B schema`)}}serialize(p){const d=p.kind;return d?this.serializeByTypeName(d,p):{success:!1,error:new i("Data must by typed")}}serializeByTypeName(p,d){const C=p.indexOf("_"),A=C===-1?p:p.slice(0,C),_=this.types.get(A);if(!_)return{success:!1,error:new i(`Type ${A} not found in TL-B schema`)};const B=(0,t.beginCell)();return this.serializeType(_,d,B),{success:!0,value:B}}deserializeType(p,d,C=[],A){for(const _ of p.constructors){const B=d.clone(),E=this.deserializeConstructor(p,_,B,C,A);if(E.success){const S=d.remainingBits-B.remainingBits,O=d.remainingRefs-B.remainingRefs;S>0&&d.skip(S);for(let $=0;$<O;$++)d.loadRef();return E}}return{success:!1,error:new i(`Failed to deserialize type ${p.name} no matching constructor found`)}}deserializeConstructor(p,d,C,A=[],_){const B=p.constructors.length>1?`${p.name}_${d.name}`:p.name;if(d.tag.bitLen>0){const F=d.tag.bitLen;if(C.remainingBits<F)return{success:!1,error:new i(`Not enough bits to read tag for ${B}`)};const v=`0b${C.loadUint(F).toString(2).padStart(F,"0")}`,x=c(d.tag);if(v!==x)return{success:!1,error:new i(`Failed to deserialize type ${B}`)}}const E=new Map(_);if(A.length>0&&d.parameters.length>0){const F=new n.MathExprEvaluator(E);for(let v=0;v<Math.min(A.length,d.parameters.length);v++){const x=d.parameters[v],M=A[v];let V;try{M.kind==="TLBExprMathType"?V=F.evaluate(M.initialExpr):M.kind==="TLBNumberType"&&(V=F.evaluate(M.bits))}catch{}x.argName&&typeof V=="number"&&E.set(x.argName,V);try{if(x.variable?.name&&typeof V=="number"){const j=x.variable.name;let oe=!1;if(x.paramExpr){const h=x.paramExpr;let y;for(let m=0;m<=1024;m++){const g=new Map(E);if(g.set(j,m),new n.MathExprEvaluator(g).evaluate(h)===V){y=m;break}}typeof y=="number"&&(E.set(j,y),oe=!0)}if(!oe&&x.variable.deriveExpr&&E.get(j)===void 0){let h;for(let y=0;y<=1024;y++){const m=new Map(E);if(m.set(j,y),new n.MathExprEvaluator(m).evaluate(x.variable.deriveExpr)===V){h=y;break}}typeof h=="number"&&(E.set(j,h),oe=!0)}!oe&&!x.variable.negated&&E.set(j,V)}}catch{}}}if(A.length===0&&d.parameters.length>0)for(const F of d.parameters)try{if(F.variable?.type==="#"&&!F.variable.negated&&!F.variable.isConst&&C.remainingBits>=32){const v=Number(C.loadUint(32));E.set(F.variable.name,v)}}catch{}if(d.fields.length===0&&d.parameters.length===1&&d.parameters[0].variable.type==="#"&&E.get(d.parameters[0].variable.name)===void 0&&C.remainingBits>=32)try{const F=Number(C.loadUint(32));E.set(d.parameters[0].variable.name,F)}catch{}if(A.length>0&&d.parameters.length===0&&d.variables.length>0){const F=new n.MathExprEvaluator(E),v=d.variables.filter(x=>x.type==="#");for(let x=0;x<Math.min(A.length,v.length);x++){const M=v[x],V=A[x];try{let j;V.kind==="TLBExprMathType"?j=F.evaluate(V.initialExpr):V.kind==="TLBNumberType"&&(j=F.evaluate(V.bits)),typeof j=="number"&&E.set(M.name,j)}catch{}}}let S={kind:B};for(const F of d.fields)if(F.subFields.length>0){if(C.remainingRefs===0)return{success:!1,error:new i(`No more references available for field ${F.name}`)};const v=C.loadRef();if(F.subFields.length===1){const x=F.subFields[0];if(x.fieldType.kind==="TLBCellType")S[F.name]=v;else if(x.fieldType.kind==="TLBNamedType"){const M=v.beginParse(!0),V=this.types.get(x.fieldType.name);if(V){let j;if(V.constructors.length>0){const h=V.constructors[0],y=new n.MathExprEvaluator(E),m=x.fieldType.arguments??[],g=new Map(E);if(h.parameters.length>0){for(let b=0;b<Math.min(m.length,h.parameters.length);b++){const P=h.parameters[b],L=m[b];try{let U;L.kind==="TLBExprMathType"?U=y.evaluate(L.initialExpr):L.kind==="TLBNumberType"&&(U=y.evaluate(L.bits)),typeof U=="number"&&P.variable.type==="#"&&!P.variable.negated&&g.set(P.variable.name,U)}catch{}}j=g}}const oe=this.deserializeType(V,M,x.fieldType.arguments,j);if(oe.success)S[F.name]=oe.value;else return oe}else return{success:!1,error:new i(`Type ${x.fieldType.name} not found`)}}else{const M=v.beginParse(!0);S[F.name]=this.deserializeField(x,M,E,d,A)}}else{const x=v.beginParse(!0),M={};for(const V of F.subFields)M[V.name]=this.deserializeField(V,x,E,d,A);S[F.name]=M}}else S[F.name]=this.deserializeField(F,C,E,d,A);if(d.parameters.length>0)for(const F of d.parameters)try{if(F.variable?.name&&F.variable.deriveExpr&&E.get(F.variable.name)===void 0){const v=new n.MathExprEvaluator(E).evaluate(F.variable.deriveExpr);E.set(F.variable.name,v)}}catch{}const O=new n.MathExprEvaluator(E);for(const F of d.constraints)if(O.evaluate(F)!==1)return{success:!1,error:new i(`Failed to deserialize type ${B} due to constraint`)};B==="ExprType"&&typeof S.x=="number"&&(S.x=BigInt(S.x));const $={kind:B};if(d.parameters.length>0)for(const F of d.parameters)try{if(F.variable.type==="#"&&!F.variable.negated&&!F.variable.isConst){const v=E.get(F.variable.name);typeof v=="number"&&($[F.variable.name]=v)}}catch{}else if(d.variables.length>0){const F=new Set(d.fields.map(v=>v.name));for(const v of d.variables)try{if(v.type==="#"&&!v.negated&&!v.isConst&&!F.has(v.name)){const x=E.get(v.name);typeof x=="number"&&($[v.name]=x)}}catch{}}if(Object.keys($).length===1&&d.parameters.length===0&&d.variables.filter(F=>F.type==="#").length===1){const F=d.variables.find(x=>x.type==="#"),v=E.get(F.name);typeof v=="number"&&($[F.name]=v)}const w=d.fields.map(F=>F.name).sort((F,v)=>F<v?-1:F>v?1:0);for(const F of w)$[F]=S[F];return{success:!0,value:$}}deserializeField(p,d,C,A,_){const B=this.deserializeFieldType(p.fieldType,d,C,A,_);if(p.name&&(p.fieldType.kind==="TLBNumberType"||p.fieldType.kind==="TLBVarIntegerType"||p.fieldType.kind==="TLBBoolType")&&C.set(p.name,Number(B)),B&&typeof B=="object"){for(const E of A.parameters)if(E.variable?.type==="#"&&!E.variable.negated&&C.get(E.variable.name)===void 0){const S=this.extractNumericProperty(B,E.variable.name);typeof S=="number"&&C.set(E.variable.name,S)}}return B}extractNumericProperty(p,d){if(!(!p||typeof p!="object")){if(typeof p[d]=="number")return p[d];for(const C of Object.keys(p)){const A=p[C];if(A&&typeof A=="object"){const _=this.extractNumericProperty(A,d);if(typeof _=="number")return _}}}}deserializeFieldType(p,d,C,A,_){const B=new n.MathExprEvaluator(C);switch(p.kind){case"TLBNumberType":{let E;try{E=B.evaluate(p.bits)}catch(w){let F=!1;if(A?.parameters?.length&&_?.length){for(let v=0;v<Math.min(A.parameters.length,_.length);v++){const x=A.parameters[v],M=_[v];if(x.variable?.type==="#")try{let V;M.kind==="TLBExprMathType"?V=new n.MathExprEvaluator(C).evaluate(M.initialExpr):M.kind==="TLBNumberType"&&(V=new n.MathExprEvaluator(C).evaluate(M.bits)),typeof V=="number"&&(C.set(x.variable.name,V),F=!0)}catch{}}if(F)E=new n.MathExprEvaluator(C).evaluate(p.bits);else throw w}else throw w}const S=this.loadBigInt(d,E,p.signed),O=p.maxBits,$=O!==void 0?O<=32:!1;return!$&&E>32?S:$||E<=32?Number(S):S}case"TLBBoolType":return p.value!==void 0?p.value:d.loadBit();case"TLBBitsType":{const E=B.evaluate(p.bits),S=d.loadBits(E);return this.config.autoText&&E%8===0?(0,u.bitsToString)(S):E===1?S.at(0):(0,u.normalizeBitString)(S)}case"TLBNamedType":{const E=A.parametersMap.get(p.name);if(E&&E.variable.type==="Type"){const w=A.parameters.findIndex(F=>F.variable.name===E.variable.name);if(w>=0&&_[w])return this.deserializeFieldType(_[w],d,C,A,_)}if(p.name==="Bool")return d.loadBit();if(p.name==="Any"){const w=(0,t.beginCell)(),F=d.remainingBits;for(F>0&&w.storeBits(d.loadBits(F));d.remainingRefs>0;)w.storeRef(d.loadRef());return w.endCell()}const S=this.types.get(p.name);if(!S)throw new i(`Type ${p.name} not found in TL-B schema`);const O=p.arguments??[];let $=new Map(C);if(S.constructors.length>0&&O.length>0){const w=S.constructors[0],F=new n.MathExprEvaluator($),v=Math.min(O.length,w.parameters.length);for(let x=0;x<v;x++){const M=w.parameters[x],V=O[x];if(M.variable?.type==="#")try{let j;V.kind==="TLBExprMathType"?j=F.evaluate(V.initialExpr):V.kind==="TLBNumberType"&&(j=F.evaluate(V.bits)),typeof j=="number"&&$.set(M.variable.name,j)}catch{}}}return(0,a.unwrap)(this.deserializeType(S,d,O,$))}case"TLBCoinsType":return d.loadCoins();case"TLBAddressType":{if(d.preloadUint(2)!==2){if(d.remainingBits===2)return null;if(d.loadUint(2)===1){const S=d.loadUint(9);return new t.ExternalAddress(d.loadUintBig(S),S)}}return d.loadAddress()}case"TLBCellType":{if(d.remainingRefs===0)throw new i("No more references available for TLBCellType");return d.loadRef()}case"TLBCellInsideType":{if(d.remainingRefs===0)throw new i("No more references available for TLBCellInsideType");const E=d.loadRef();if(p.value.kind==="TLBCellType")return E;const S=E.beginParse();return this.deserializeFieldType(p.value,S,C,A,_)}case"TLBHashmapType":{const E=B.evaluate(p.key.expr),S=w=>this.deserializeFieldType(p.value,w,new Map(C),A,_),O=()=>t.Dictionary.empty(t.Dictionary.Keys.BigUint(E)),$=()=>t.Dictionary.empty(t.Dictionary.Keys.Uint(E));if(E>32){const w=p.directStore?d.loadDictDirect(t.Dictionary.Keys.BigUint(E),{serialize:()=>{},parse:S}):d.loadDict(t.Dictionary.Keys.BigUint(E),{serialize:()=>{},parse:S});return w.size===0?O():w}else{const w=p.directStore?d.loadDictDirect(t.Dictionary.Keys.Uint(E),{serialize:()=>{},parse:S}):d.loadDict(t.Dictionary.Keys.Uint(E),{serialize:()=>{},parse:S});return w.size===0?$():w}}case"TLBVarIntegerType":{const E=B.evaluate(p.n);return p.signed?d.loadVarIntBig(E):d.loadVarUintBig(E)}case"TLBMultipleType":{const E=B.evaluate(p.times),S=[];for(let O=0;O<E;O++)S.push(this.deserializeFieldType(p.value,d,C,A,_));return S}case"TLBCondType":return B.evaluate(p.condition)?this.deserializeFieldType(p.value,d,C,A,_):void 0;case"TLBTupleType":{const E=d.loadRef();return(0,t.parseTuple)(E)}default:throw new i(`Unsupported field type: ${p.kind}`)}}serializeType(p,d,C){const A=d.kind;if(!A)throw new i("Data must by typed");const _=A.substring(p.name.length+1);let B;if(_?B=p.constructors.find(O=>O.name===_):p.constructors.length>0&&(B=p.constructors[0]),!B)throw new i(`Constructor not found for type ${A}`);if(B.tag.bitLen>0){const O=BigInt(B.tag.binary);C.storeUint(O,B.tag.bitLen)}const E=new Map;for(const O of B.fields)O.anonymous?this.serializeField(O,null,C,E):this.serializeField(O,d[O.name],C,E);const S=new n.MathExprEvaluator(E);for(const O of B.constraints)if(S.evaluate(O)!==1)throw new i(`Constraint failed for type ${p.name}, constructor ${B.name}`)}serializeField(p,d,C,A){p.name&&(p.fieldType.kind==="TLBNumberType"||p.fieldType.kind==="TLBVarIntegerType"||p.fieldType.kind==="TLBBoolType")&&A.set(p.name,Number(d)),this.serializeFieldType(p.fieldType,d,C,A)}serializeFieldType(p,d,C,A){const _=new n.MathExprEvaluator(A);switch(p.kind){case"TLBNumberType":{const B=_.evaluate(p.bits);C.storeUint(d,B);break}case"TLBBoolType":{if(p.value!==void 0)break;C.storeBit(d?1:0);break}case"TLBBitsType":{typeof d=="string"&&(d=(0,u.stringToBits)(d)),d instanceof t.BitString&&C.storeBits(d);break}case"TLBNamedType":{const B=this.types.get(p.name);if(!B)throw new i(`Type ${p.name} not found in TL-B schema`);this.serializeType(B,d,C);break}case"TLBCoinsType":{C.storeCoins(d);break}case"TLBAddressType":{typeof d=="string"&&(d=t.Address.parse(d)),C.storeAddress(d);break}case"TLBCellType":{C.storeRef(d);break}case"TLBCellInsideType":{const B=(0,t.beginCell)();this.serializeFieldType(p.value,d,B,A),C.storeRef(B.endCell());break}case"TLBHashmapType":{const B=_.evaluate(p.key.expr),E=t.Dictionary.empty(t.Dictionary.Keys.BigInt(B),t.Dictionary.Values.Cell());if(d)for(const[S,O]of Object.entries(d)){const $=(0,t.beginCell)();this.serializeFieldType(p.value,O,$,new Map(A)),E.set(BigInt(S),$.endCell())}C.storeDict(E);break}case"TLBVarIntegerType":{const B=_.evaluate(p.n);p.signed?C.storeVarInt(d,B):C.storeVarUint(d,B);break}case"TLBMultipleType":{const B=_.evaluate(p.times);for(let E=0;E<B;E++)this.serializeFieldType(p.value,d[E],C,A);break}case"TLBCondType":{_.evaluate(p.condition)&&this.serializeFieldType(p.value,d,C,A);break}case"TLBTupleType":{const B=(0,t.serializeTuple)(d);C.storeRef(B);break}default:throw new i(`Unsupported field type: ${p.kind}`)}}loadBigInt(p,d,C=!1){return C?p.loadIntBig(d):p.loadUintBig(d)}};xe.TLBRuntime=l;function o(D){return(0,a.unwrap)(l.from(D))}return xe}var Jr;function Fa(){if(Jr)return Ke;Jr=1,Object.defineProperty(Ke,"__esModule",{value:!0}),Ke.parseCell=r,Ke.encodeCell=u,Ke.replacer=n;const t=$t(),e=ar();function r(a,s){return(0,e.parseTLB)(a).parseCell(s)}function u(a,s){return(0,e.parseTLB)(a).encodeCell(s)}function n(a,s){return typeof s=="bigint"||s instanceof t.Address||s instanceof t.BitString?s.toString():s instanceof t.Cell?s.toBoc().toString("base64"):s}return Ke}var nt={},Qr;function Ba(){return Qr||(Qr=1,Object.defineProperty(nt,"__esModule",{value:!0}),nt.blockSchema=void 0,nt.blockSchema=`// https://github.com/ton-blockchain/ton/raw/774371bdc9f6107fd05106c1fd559e8903e0513d/crypto/block/block.tlb
unit$_ = Unit;
true$_ = True;
// EMPTY False;
bool_false$0 = Bool;
bool_true$1 = Bool;
bool_false$0 = BoolFalse;
bool_true$1 = BoolTrue;
nothing$0 {X:Type} = Maybe X;
just$1 {X:Type} value:X = Maybe X;
left$0 {X:Type} {Y:Type} value:X = Either X Y;
right$1 {X:Type} {Y:Type} value:Y = Either X Y;
pair$_ {X:Type} {Y:Type} first:X second:Y = Both X Y;

bit$_ (## 1) = Bit;
/*
 *
 *   FROM hashmap.tlb
 *
 */
// ordinary Hashmap / HashmapE, with fixed length keys
//
hm_edge#_ {n:#} {X:Type} {l:#} {m:#} label:(HmLabel ~l n) 
          {n = (~m) + l} node:(HashmapNode m X) = Hashmap n X;

hmn_leaf#_ {X:Type} value:X = HashmapNode 0 X;
hmn_fork#_ {n:#} {X:Type} left:^(Hashmap n X) 
           right:^(Hashmap n X) = HashmapNode (n + 1) X;

hml_short$0 {m:#} {n:#} len:(Unary ~n) {n <= m} s:(n * Bit) = HmLabel ~n m;
hml_long$10 {m:#} n:(#<= m) s:(n * Bit) = HmLabel ~n m;
hml_same$11 {m:#} v:Bit n:(#<= m) = HmLabel ~n m;

unary_zero$0 = Unary ~0;
unary_succ$1 {n:#} x:(Unary ~n) = Unary ~(n + 1);

hme_empty$0 {n:#} {X:Type} = HashmapE n X;
hme_root$1 {n:#} {X:Type} root:^(Hashmap n X) = HashmapE n X;

// true#_ = True;
_ {n:#} _:(Hashmap n True) = BitstringSet n;

//  HashmapAug, hashmap with an extra value 
//   (augmentation) of type Y at every node
//
ahm_edge#_ {n:#} {X:Type} {Y:Type} {l:#} {m:#} 
  label:(HmLabel ~l n) {n = (~m) + l} 
  node:(HashmapAugNode m X Y) = HashmapAug n X Y;
ahmn_leaf#_ {X:Type} {Y:Type} extra:Y value:X = HashmapAugNode 0 X Y;
ahmn_fork#_ {n:#} {X:Type} {Y:Type} left:^(HashmapAug n X Y)
  right:^(HashmapAug n X Y) extra:Y = HashmapAugNode (n + 1) X Y;

ahme_empty$0 {n:#} {X:Type} {Y:Type} extra:Y 
          = HashmapAugE n X Y;
ahme_root$1 {n:#} {X:Type} {Y:Type} root:^(HashmapAug n X Y) 
  extra:Y = HashmapAugE n X Y;

// VarHashmap / VarHashmapE, with variable-length keys
//
vhm_edge#_ {n:#} {X:Type} {l:#} {m:#} label:(HmLabel ~l n) 
           {n = (~m) + l} node:(VarHashmapNode m X) 
           = VarHashmap n X;
vhmn_leaf$00 {n:#} {X:Type} value:X = VarHashmapNode n X;
vhmn_fork$01 {n:#} {X:Type} left:^(VarHashmap n X) 
             right:^(VarHashmap n X) value:(Maybe X) 
             = VarHashmapNode (n + 1) X;
vhmn_cont$1 {n:#} {X:Type} branch:Bit child:^(VarHashmap n X) 
            value:X = VarHashmapNode (n + 1) X;

// nothing$0 {X:Type} = Maybe X;
// just$1 {X:Type} value:X = Maybe X;

vhme_empty$0 {n:#} {X:Type} = VarHashmapE n X;
vhme_root$1 {n:#} {X:Type} root:^(VarHashmap n X) 
            = VarHashmapE n X;

//
// PfxHashmap / PfxHashmapE, with variable-length keys
//                           constituting a prefix code
//

phm_edge#_ {n:#} {X:Type} {l:#} {m:#} label:(HmLabel ~l n) 
           {n = (~m) + l} node:(PfxHashmapNode m X) 
           = PfxHashmap n X;

phmn_leaf$0 {n:#} {X:Type} value:X = PfxHashmapNode n X;
phmn_fork$1 {n:#} {X:Type} left:^(PfxHashmap n X) 
            right:^(PfxHashmap n X) = PfxHashmapNode (n + 1) X;

phme_empty$0 {n:#} {X:Type} = PfxHashmapE n X;
phme_root$1 {n:#} {X:Type} root:^(PfxHashmap n X) 
            = PfxHashmapE n X;
/*
 *
 *  END hashmap.tlb
 *
 */
//
// TON BLOCK LAYOUT
//
addr_none$00 = MsgAddressExt;
addr_extern$01 len:(## 9) external_address:(bits len) 
             = MsgAddressExt;
anycast_info$_ depth:(#<= 30) { depth >= 1 }
   rewrite_pfx:(bits depth) = Anycast;
addr_std$10 anycast:(Maybe Anycast) 
   workchain_id:int8 address:bits256  = MsgAddressInt;
addr_var$11 anycast:(Maybe Anycast) addr_len:(## 9) 
   workchain_id:int32 address:(bits addr_len) = MsgAddressInt;
_ _:MsgAddressInt = MsgAddress;
_ _:MsgAddressExt = MsgAddress;
//
var_uint$_ {n:#} len:(#< n) value:(uint (len * 8))
         = VarUInteger n;
var_int$_ {n:#} len:(#< n) value:(int (len * 8)) 
        = VarInteger n;
nanograms$_ amount:(VarUInteger 16) = Grams;

_ grams:Grams = Coins;

//
extra_currencies$_ dict:(HashmapE 32 (VarUInteger 32)) 
                 = ExtraCurrencyCollection;
currencies$_ grams:Grams other:ExtraCurrencyCollection 
           = CurrencyCollection;
//
int_msg_info$0 ihr_disabled:Bool bounce:Bool bounced:Bool
  src:MsgAddressInt dest:MsgAddressInt 
  value:CurrencyCollection ihr_fee:Grams fwd_fee:Grams
  created_lt:uint64 created_at:uint32 = CommonMsgInfo;
ext_in_msg_info$10 src:MsgAddressExt dest:MsgAddressInt 
  import_fee:Grams = CommonMsgInfo;
ext_out_msg_info$11 src:MsgAddressInt dest:MsgAddressExt
  created_lt:uint64 created_at:uint32 = CommonMsgInfo;

int_msg_info$0 ihr_disabled:Bool bounce:Bool bounced:Bool
  src:MsgAddress dest:MsgAddressInt 
  value:CurrencyCollection ihr_fee:Grams fwd_fee:Grams
  created_lt:uint64 created_at:uint32 = CommonMsgInfoRelaxed;
ext_out_msg_info$11 src:MsgAddress dest:MsgAddressExt
  created_lt:uint64 created_at:uint32 = CommonMsgInfoRelaxed;

tick_tock$_ tick:Bool tock:Bool = TickTock;

_ fixed_prefix_length:(Maybe (## 5)) special:(Maybe TickTock)
  code:(Maybe ^Cell) data:(Maybe ^Cell)
  library:(Maybe ^Cell) = StateInit;

// StateInitWithLibs is used to validate sent and received messages
_ fixed_prefix_length:(Maybe (## 5)) special:(Maybe TickTock)
  code:(Maybe ^Cell) data:(Maybe ^Cell)
  library:(HashmapE 256 SimpleLib) = StateInitWithLibs;

simple_lib$_ public:Bool root:^Cell = SimpleLib;

message$_ {X:Type} info:CommonMsgInfo
  init:(Maybe (Either StateInit ^StateInit))
  body:(Either X ^X) = Message X;

message$_ {X:Type} info:CommonMsgInfoRelaxed
  init:(Maybe (Either StateInit ^StateInit))
  body:(Either X ^X) = MessageRelaxed X;
  
_ (Message Any) = MessageAny;

//
interm_addr_regular$0 use_dest_bits:(#<= 96) 
  = IntermediateAddress;
interm_addr_simple$10 workchain_id:int8 addr_pfx:uint64 
  = IntermediateAddress;
interm_addr_ext$11 workchain_id:int32 addr_pfx:uint64
  = IntermediateAddress;
msg_envelope#4 cur_addr:IntermediateAddress 
  next_addr:IntermediateAddress fwd_fee_remaining:Grams 
  msg:^(Message Any) = MsgEnvelope;
msg_metadata#0 depth:uint32 initiator_addr:MsgAddressInt initiator_lt:uint64 = MsgMetadata;
msg_envelope_v2#5 cur_addr:IntermediateAddress
  next_addr:IntermediateAddress fwd_fee_remaining:Grams
  msg:^(Message Any)
  emitted_lt:(Maybe uint64)
  metadata:(Maybe MsgMetadata) = MsgEnvelope;
//
msg_import_ext$000 msg:^(Message Any) transaction:^Transaction 
              = InMsg;
msg_import_ihr$010 msg:^(Message Any) transaction:^Transaction 
    ihr_fee:Grams proof_created:^Cell = InMsg;
msg_import_imm$011 in_msg:^MsgEnvelope
    transaction:^Transaction fwd_fee:Grams = InMsg;
msg_import_fin$100 in_msg:^MsgEnvelope 
    transaction:^Transaction fwd_fee:Grams = InMsg;
msg_import_tr$101  in_msg:^MsgEnvelope out_msg:^MsgEnvelope 
    transit_fee:Grams = InMsg;
msg_discard_fin$110 in_msg:^MsgEnvelope transaction_id:uint64 
    fwd_fee:Grams = InMsg;
msg_discard_tr$111 in_msg:^MsgEnvelope transaction_id:uint64 
    fwd_fee:Grams proof_delivered:^Cell = InMsg;
msg_import_deferred_fin$00100 in_msg:^MsgEnvelope
    transaction:^Transaction fwd_fee:Grams = InMsg;
msg_import_deferred_tr$00101 in_msg:^MsgEnvelope out_msg:^MsgEnvelope = InMsg;
//
import_fees$_ fees_collected:Grams 
  value_imported:CurrencyCollection = ImportFees;

_ (HashmapAugE 256 InMsg ImportFees) = InMsgDescr;

msg_export_ext$000 msg:^(Message Any)
    transaction:^Transaction = OutMsg;
msg_export_imm$010 out_msg:^MsgEnvelope 
    transaction:^Transaction reimport:^InMsg = OutMsg;
msg_export_new$001 out_msg:^MsgEnvelope 
    transaction:^Transaction = OutMsg;
msg_export_tr$011  out_msg:^MsgEnvelope 
    imported:^InMsg = OutMsg;
msg_export_deq$1100 out_msg:^MsgEnvelope
    import_block_lt:uint63 = OutMsg;
msg_export_deq_short$1101 msg_env_hash:bits256
    next_workchain:int32 next_addr_pfx:uint64
    import_block_lt:uint64 = OutMsg;
msg_export_tr_req$111 out_msg:^MsgEnvelope 
    imported:^InMsg = OutMsg;
msg_export_deq_imm$100 out_msg:^MsgEnvelope 
    reimport:^InMsg = OutMsg;
msg_export_new_defer$10100 out_msg:^MsgEnvelope
    transaction:^Transaction = OutMsg;
msg_export_deferred_tr$10101  out_msg:^MsgEnvelope
    imported:^InMsg = OutMsg;

_ enqueued_lt:uint64 out_msg:^MsgEnvelope = EnqueuedMsg;

_ (HashmapAugE 256 OutMsg CurrencyCollection) = OutMsgDescr;

_ (HashmapAugE 352 EnqueuedMsg uint64) = OutMsgQueue;

processed_upto$_ last_msg_lt:uint64 last_msg_hash:bits256 = ProcessedUpto;
// key is [ shard:uint64 mc_seqno:uint32 ]  
_ (HashmapE 96 ProcessedUpto) = ProcessedInfo;

ihr_pending$_ import_lt:uint64 = IhrPendingSince;
_ (HashmapE 320 IhrPendingSince) = IhrPendingInfo;

// key - created_lt
_ messages:(HashmapE 64 EnqueuedMsg) count:uint48 = AccountDispatchQueue;
// key - sender address, aug - min created_lt
_ (HashmapAugE 256 AccountDispatchQueue uint64) = DispatchQueue;

out_msg_queue_extra#0 dispatch_queue:DispatchQueue out_queue_size:(Maybe uint48) = OutMsgQueueExtra;

_ out_queue:OutMsgQueue proc_info:ProcessedInfo
  extra:(Maybe OutMsgQueueExtra) = OutMsgQueueInfo;

storage_extra_none$000 = StorageExtraInfo;
storage_extra_info$001 dict_hash:uint256 = StorageExtraInfo;

storage_used$_ cells:(VarUInteger 7) bits:(VarUInteger 7) = StorageUsed;

storage_info$_ used:StorageUsed storage_extra:StorageExtraInfo last_paid:uint32
              due_payment:(Maybe Grams) = StorageInfo;

account_none$0 = Account;
account$1 addr:MsgAddressInt storage_stat:StorageInfo
          storage:AccountStorage = Account;

account_storage$_ last_trans_lt:uint64
    balance:CurrencyCollection state:AccountState 
  = AccountStorage;

account_uninit$00 = AccountState;
account_active$1 _:StateInit = AccountState;
account_frozen$01 state_hash:bits256 = AccountState;

acc_state_uninit$00 = AccountStatus;
acc_state_frozen$01 = AccountStatus;
acc_state_active$10 = AccountStatus;
acc_state_nonexist$11 = AccountStatus;

account_descr$_ account:^Account last_trans_hash:bits256 
  last_trans_lt:uint64 = ShardAccount;

depth_balance$_ split_depth:(#<= 30) balance:CurrencyCollection = DepthBalanceInfo;

_ (HashmapAugE 256 ShardAccount DepthBalanceInfo) = ShardAccounts;

transaction$0111 account_addr:bits256 lt:uint64 
  prev_trans_hash:bits256 prev_trans_lt:uint64 now:uint32
  outmsg_cnt:uint15
  orig_status:AccountStatus end_status:AccountStatus
  ^[ in_msg:(Maybe ^(Message Any)) out_msgs:(HashmapE 15 ^(Message Any)) ]
  total_fees:CurrencyCollection state_update:^(HASH_UPDATE Account)
  description:^TransactionDescr = Transaction;

!merkle_update#04 {X:Type} old_hash:bits256 new_hash:bits256 old_depth:uint16 new_depth:uint16
  old:^X new:^X = MERKLE_UPDATE X;
update_hashes#72 {X:Type} old_hash:bits256 new_hash:bits256
  = HASH_UPDATE X;
!merkle_proof#03 {X:Type} virtual_hash:bits256 depth:uint16 virtual_root:^X = MERKLE_PROOF X;

acc_trans#5 account_addr:bits256
            transactions:(HashmapAug 64 ^Transaction CurrencyCollection)
            state_update:^(HASH_UPDATE Account)
          = AccountBlock;

_ (HashmapAugE 256 AccountBlock CurrencyCollection) = ShardAccountBlocks;
//
tr_phase_storage$_ storage_fees_collected:Grams 
  storage_fees_due:(Maybe Grams)
  status_change:AccStatusChange
  = TrStoragePhase;

acst_unchanged$0 = AccStatusChange;  // x -> x
acst_frozen$10 = AccStatusChange;    // init -> frozen
acst_deleted$11 = AccStatusChange;   // frozen -> deleted

tr_phase_credit$_ due_fees_collected:(Maybe Grams)
  credit:CurrencyCollection = TrCreditPhase;

tr_phase_compute_skipped$0 reason:ComputeSkipReason
  = TrComputePhase;
tr_phase_compute_vm$1 success:Bool msg_state_used:Bool 
  account_activated:Bool gas_fees:Grams
  ^[ gas_used:(VarUInteger 7)
  gas_limit:(VarUInteger 7) gas_credit:(Maybe (VarUInteger 3))
  mode:int8 exit_code:int32 exit_arg:(Maybe int32)
  vm_steps:uint32
  vm_init_state_hash:bits256 vm_final_state_hash:bits256 ]
  = TrComputePhase;
cskip_no_state$00 = ComputeSkipReason;
cskip_bad_state$01 = ComputeSkipReason;
cskip_no_gas$10 = ComputeSkipReason;
cskip_suspended$110 = ComputeSkipReason;

tr_phase_action$_ success:Bool valid:Bool no_funds:Bool
  status_change:AccStatusChange
  total_fwd_fees:(Maybe Grams) total_action_fees:(Maybe Grams)
  result_code:int32 result_arg:(Maybe int32) tot_actions:uint16
  spec_actions:uint16 skipped_actions:uint16 msgs_created:uint16 
  action_list_hash:bits256 tot_msg_size:StorageUsed
  = TrActionPhase;

tr_phase_bounce_negfunds$00 = TrBouncePhase;
tr_phase_bounce_nofunds$01 msg_size:StorageUsed
  req_fwd_fees:Grams = TrBouncePhase;
tr_phase_bounce_ok$1 msg_size:StorageUsed
  msg_fees:Grams fwd_fees:Grams = TrBouncePhase;
//
trans_ord$0000 credit_first:Bool
  storage_ph:(Maybe TrStoragePhase)
  credit_ph:(Maybe TrCreditPhase)
  compute_ph:TrComputePhase action:(Maybe ^TrActionPhase)
  aborted:Bool bounce:(Maybe TrBouncePhase)
  destroyed:Bool
  = TransactionDescr;

trans_storage$0001 storage_ph:TrStoragePhase
  = TransactionDescr;

trans_tick_tock$001 is_tock:Bool storage_ph:TrStoragePhase
  compute_ph:TrComputePhase action:(Maybe ^TrActionPhase)
  aborted:Bool destroyed:Bool = TransactionDescr;
//
split_merge_info$_ cur_shard_pfx_len:(## 6)
  acc_split_depth:(## 6) this_addr:bits256 sibling_addr:bits256
  = SplitMergeInfo;
trans_split_prepare$0100 split_info:SplitMergeInfo
  storage_ph:(Maybe TrStoragePhase)
  compute_ph:TrComputePhase action:(Maybe ^TrActionPhase)
  aborted:Bool destroyed:Bool
  = TransactionDescr;
trans_split_install$0101 split_info:SplitMergeInfo
  prepare_transaction:^Transaction
  installed:Bool = TransactionDescr;

trans_merge_prepare$0110 split_info:SplitMergeInfo
  storage_ph:TrStoragePhase aborted:Bool
  = TransactionDescr;
trans_merge_install$0111 split_info:SplitMergeInfo
  prepare_transaction:^Transaction
  storage_ph:(Maybe TrStoragePhase)
  credit_ph:(Maybe TrCreditPhase)
  compute_ph:TrComputePhase action:(Maybe ^TrActionPhase)
  aborted:Bool destroyed:Bool
  = TransactionDescr;

smc_info#076ef1ea actions:uint16 msgs_sent:uint16
  unixtime:uint32 block_lt:uint64 trans_lt:uint64 
  rand_seed:bits256 balance_remaining:CurrencyCollection
  myself:MsgAddressInt global_config:(Maybe Cell) = SmartContractInfo;
//
//
out_list_empty$_ = OutList 0;
out_list$_ {n:#} prev:^(OutList n) action:OutAction
  = OutList (n + 1);
action_send_msg#0ec3c86d mode:(## 8) 
  out_msg:^(MessageRelaxed Any) = OutAction;
action_set_code#ad4de08e new_code:^Cell = OutAction;
action_reserve_currency#36e6b809 mode:(## 8)
  currency:CurrencyCollection = OutAction;
libref_hash$0 lib_hash:bits256 = LibRef;
libref_ref$1 library:^Cell = LibRef;
action_change_library#26fa1dd4 mode:(## 7)
  libref:LibRef = OutAction;

out_list_node$_ prev:^Cell action:OutAction = OutListNode;
//
//
shard_ident$00 shard_pfx_bits:(#<= 60) 
  workchain_id:int32 shard_prefix:uint64 = ShardIdent;

ext_blk_ref$_ end_lt:uint64
  seq_no:uint32 root_hash:bits256 file_hash:bits256 
  = ExtBlkRef;

block_id_ext$_ shard_id:ShardIdent seq_no:uint32
  root_hash:bits256 file_hash:bits256 = BlockIdExt;

master_info$_ master:ExtBlkRef = BlkMasterInfo;

shard_state#9023afe2 global_id:int32
  shard_id:ShardIdent 
  seq_no:uint32 vert_seq_no:#
  gen_utime:uint32 gen_lt:uint64
  min_ref_mc_seqno:uint32
  out_msg_queue_info:^OutMsgQueueInfo
  before_split:(## 1)
  accounts:^ShardAccounts
  ^[ overload_history:uint64 underload_history:uint64
  total_balance:CurrencyCollection
  total_validator_fees:CurrencyCollection
  libraries:(HashmapE 256 LibDescr)
  master_ref:(Maybe BlkMasterInfo) ]
  custom:(Maybe ^McStateExtra)
  = ShardStateUnsplit;
  
_ ShardStateUnsplit = ShardState;
split_state#5f327da5 left:^ShardStateUnsplit right:^ShardStateUnsplit = ShardState;

shared_lib_descr$00 lib:^Cell publishers:(Hashmap 256 True)
  = LibDescr;

block_info#9bc7a987 version:uint32 
  not_master:(## 1) 
  after_merge:(## 1) before_split:(## 1) 
  after_split:(## 1) 
  want_split:Bool want_merge:Bool
  key_block:Bool vert_seqno_incr:(## 1)
  flags:(## 8) { flags <= 1 }
  seq_no:# vert_seq_no:# { vert_seq_no >= vert_seqno_incr } 
  { prev_seq_no:# } { ~prev_seq_no + 1 = seq_no } 
  shard:ShardIdent gen_utime:uint32
  start_lt:uint64 end_lt:uint64
  gen_validator_list_hash_short:uint32
  gen_catchain_seqno:uint32
  min_ref_mc_seqno:uint32
  prev_key_block_seqno:uint32
  gen_software:flags . 0?GlobalVersion
  master_ref:not_master?^BlkMasterInfo 
  prev_ref:^(BlkPrevInfo after_merge)
  prev_vert_ref:vert_seqno_incr?^(BlkPrevInfo 0)
  = BlockInfo;

prev_blk_info$_ prev:ExtBlkRef = BlkPrevInfo 0;
prev_blks_info$_ prev1:^ExtBlkRef prev2:^ExtBlkRef = BlkPrevInfo 1;

block#11ef55aa global_id:int32
  info:^BlockInfo value_flow:^ValueFlow
  state_update:^(MERKLE_UPDATE ShardState) 
  extra:^BlockExtra = Block;

block_extra in_msg_descr:^InMsgDescr
  out_msg_descr:^OutMsgDescr
  account_blocks:^ShardAccountBlocks
  rand_seed:bits256
  created_by:bits256
  custom:(Maybe ^McBlockExtra) = BlockExtra;
//
value_flow#b8e48dfb ^[ from_prev_blk:CurrencyCollection 
  to_next_blk:CurrencyCollection
  imported:CurrencyCollection
  exported:CurrencyCollection ]
  fees_collected:CurrencyCollection
  ^[
  fees_imported:CurrencyCollection
  recovered:CurrencyCollection
  created:CurrencyCollection
  minted:CurrencyCollection
  ] = ValueFlow;

value_flow_v2#3ebf98b7 ^[ from_prev_blk:CurrencyCollection
  to_next_blk:CurrencyCollection
  imported:CurrencyCollection
  exported:CurrencyCollection ]
  fees_collected:CurrencyCollection
  burned:CurrencyCollection
  ^[
  fees_imported:CurrencyCollection
  recovered:CurrencyCollection
  created:CurrencyCollection
  minted:CurrencyCollection
  ] = ValueFlow;

//
//
bt_leaf$0 {X:Type} leaf:X = BinTree X;
bt_fork$1 {X:Type} left:^(BinTree X) right:^(BinTree X) 
          = BinTree X;

fsm_none$0 = FutureSplitMerge;
fsm_split$10 split_utime:uint32 interval:uint32 = FutureSplitMerge;
fsm_merge$11 merge_utime:uint32 interval:uint32 = FutureSplitMerge;

shard_descr#b seq_no:uint32 reg_mc_seqno:uint32
  start_lt:uint64 end_lt:uint64
  root_hash:bits256 file_hash:bits256 
  before_split:Bool before_merge:Bool
  want_split:Bool want_merge:Bool
  nx_cc_updated:Bool flags:(## 3) { flags = 0 }
  next_catchain_seqno:uint32 next_validator_shard:uint64
  min_ref_mc_seqno:uint32 gen_utime:uint32
  split_merge_at:FutureSplitMerge
  fees_collected:CurrencyCollection
  funds_created:CurrencyCollection = ShardDescr;

shard_descr_new#a seq_no:uint32 reg_mc_seqno:uint32
  start_lt:uint64 end_lt:uint64
  root_hash:bits256 file_hash:bits256 
  before_split:Bool before_merge:Bool
  want_split:Bool want_merge:Bool
  nx_cc_updated:Bool flags:(## 3) { flags = 0 }
  next_catchain_seqno:uint32 next_validator_shard:uint64
  min_ref_mc_seqno:uint32 gen_utime:uint32
  split_merge_at:FutureSplitMerge
  ^[ fees_collected:CurrencyCollection
     funds_created:CurrencyCollection ] = ShardDescr;

_ (HashmapE 32 ^(BinTree ShardDescr)) = ShardHashes;

bta_leaf$0 {X:Type} {Y:Type} extra:Y leaf:X = BinTreeAug X Y;
bta_fork$1 {X:Type} {Y:Type} left:^(BinTreeAug X Y) 
           right:^(BinTreeAug X Y) extra:Y = BinTreeAug X Y;

_ fees:CurrencyCollection create:CurrencyCollection = ShardFeeCreated;
_ (HashmapAugE 96 ShardFeeCreated ShardFeeCreated) = ShardFees;

_ config_addr:bits256 config:^(Hashmap 32 ^Cell) 
  = ConfigParams;

validator_info$_
  validator_list_hash_short:uint32 
  catchain_seqno:uint32
  nx_cc_updated:Bool
= ValidatorInfo;

validator_base_info$_
  validator_list_hash_short:uint32 
  catchain_seqno:uint32
= ValidatorBaseInfo;

_ key:Bool max_end_lt:uint64 = KeyMaxLt;
_ key:Bool blk_ref:ExtBlkRef = KeyExtBlkRef;

_ (HashmapAugE 32 KeyExtBlkRef KeyMaxLt) = OldMcBlocksInfo;


counters#_ last_updated:uint32 total:uint64 cnt2048:uint64 cnt65536:uint64 = Counters; 
creator_info#4 mc_blocks:Counters shard_blocks:Counters = CreatorStats; 
block_create_stats#17 counters:(HashmapE 256 CreatorStats) = BlockCreateStats;
block_create_stats_ext#34 counters:(HashmapAugE 256 CreatorStats uint32) = BlockCreateStats;

masterchain_state_extra#cc26
  shard_hashes:ShardHashes
  config:ConfigParams
  ^[ flags:(## 16) { flags <= 1 }
     validator_info:ValidatorInfo
     prev_blocks:OldMcBlocksInfo
     after_key_block:Bool
     last_key_block:(Maybe ExtBlkRef)
     block_create_stats:(flags . 0)?BlockCreateStats ]
  global_balance:CurrencyCollection
= McStateExtra;

ed25519_pubkey#8e81278a pubkey:bits256 = SigPubKey;  // 288 bits
ed25519_signature#5 R:bits256 s:bits256 = CryptoSignatureSimple;  // 516 bits
_ CryptoSignatureSimple = CryptoSignature;
sig_pair$_ node_id_short:bits256 sign:CryptoSignature = CryptoSignaturePair;  // 256+x ~ 772 bits

certificate#4 temp_key:SigPubKey valid_since:uint32 valid_until:uint32 = Certificate;  // 356 bits
certificate_env#a419b7d certificate:Certificate = CertificateEnv;  // 384 bits
signed_certificate$_ certificate:Certificate certificate_signature:CryptoSignature
  = SignedCertificate;  // 356+516 = 872 bits
// certificate_signature is the signature of CertificateEnv (with embedded certificate) with persistent key
chained_signature#f signed_cert:^SignedCertificate temp_key_signature:CryptoSignatureSimple
  = CryptoSignature;   // 4+(356+516)+516 = 520 bits+ref (1392 bits total)
// temp_key_signature is the signature of whatever was originally intended to be signed with temp_key from certificate

masterchain_block_extra#cca5
  key_block:(## 1)
  shard_hashes:ShardHashes
  shard_fees:ShardFees
  ^[ prev_blk_signatures:(HashmapE 16 CryptoSignaturePair)
     recover_create_msg:(Maybe ^InMsg)
     mint_msg:(Maybe ^InMsg) ]
  config:key_block?ConfigParams
= McBlockExtra;

//
//  CONFIGURATION PARAMETERS
//

validator#53 public_key:SigPubKey weight:uint64 = ValidatorDescr;
validator_addr#73 public_key:SigPubKey weight:uint64 adnl_addr:bits256 = ValidatorDescr;
validators#11 utime_since:uint32 utime_until:uint32 
  total:(## 16) main:(## 16) { main <= total } { main >= 1 } 
  list:(Hashmap 16 ValidatorDescr) = ValidatorSet;
validators_ext#12 utime_since:uint32 utime_until:uint32 
  total:(## 16) main:(## 16) { main <= total } { main >= 1 } 
  total_weight:uint64 list:(HashmapE 16 ValidatorDescr) = ValidatorSet;

_ config_addr:bits256 = ConfigParam 0;
_ elector_addr:bits256 = ConfigParam 1;
_ minter_addr:bits256 = ConfigParam 2;  // ConfigParam 0 is used if absent
_ fee_collector_addr:bits256 = ConfigParam 3;  // ConfigParam 1 is used if absent
_ dns_root_addr:bits256 = ConfigParam 4;  // root TON DNS resolver

burning_config#01
  blackhole_addr:(Maybe bits256)
  fee_burn_num:# fee_burn_denom:# { fee_burn_num <= fee_burn_denom } { fee_burn_denom >= 1 } = BurningConfig;
_ BurningConfig = ConfigParam 5;

_ mint_new_price:Grams mint_add_price:Grams = ConfigParam 6;
_ to_mint:ExtraCurrencyCollection = ConfigParam 7;

capabilities#c4 version:uint32 capabilities:uint64 = GlobalVersion;
_ GlobalVersion = ConfigParam 8;  // all zero if absent
_ mandatory_params:(Hashmap 32 True) = ConfigParam 9;
_ critical_params:(Hashmap 32 True) = ConfigParam 10;

cfg_vote_cfg#36 min_tot_rounds:uint8 max_tot_rounds:uint8 min_wins:uint8 max_losses:uint8 min_store_sec:uint32 max_store_sec:uint32 bit_price:uint32 cell_price:uint32 = ConfigProposalSetup;
cfg_vote_setup#91 normal_params:^ConfigProposalSetup critical_params:^ConfigProposalSetup = ConfigVotingSetup;
_ ConfigVotingSetup = ConfigParam 11;

cfg_proposal#f3 param_id:int32 param_value:(Maybe ^Cell) if_hash_equal:(Maybe uint256) 
  = ConfigProposal;
cfg_proposal_status#ce expires:uint32 proposal:^ConfigProposal is_critical:Bool
  voters:(HashmapE 16 True) remaining_weight:int64 validator_set_id:uint256 
  rounds_remaining:uint8 wins:uint8 losses:uint8 = ConfigProposalStatus;

wfmt_basic#1 vm_version:int32 vm_mode:uint64 = WorkchainFormat 1;
wfmt_ext#0 min_addr_len:(## 12) max_addr_len:(## 12) addr_len_step:(## 12)
  { min_addr_len >= 64 } { min_addr_len <= max_addr_len } 
  { max_addr_len <= 1023 } { addr_len_step <= 1023 }
  workchain_type_id:(## 32) { workchain_type_id >= 1 }
  = WorkchainFormat 0;

wc_split_merge_timings#0
  split_merge_delay:uint32 split_merge_interval:uint32
  min_split_merge_interval:uint32 max_split_merge_delay:uint32
  = WcSplitMergeTimings;

//workchain#a5 enabled_since:uint32 min_split:(## 8) max_split:(## 8)
//  { min_split <= max_split } { max_split <= 60 }

workchain#a6 enabled_since:uint32 monitor_min_split:(## 8)
  min_split:(## 8) max_split:(## 8) { monitor_min_split <= min_split }
  basic:(## 1) active:Bool accept_msgs:Bool flags:(## 13) { flags = 0 }
  zerostate_root_hash:bits256 zerostate_file_hash:bits256
  version:uint32 format:(WorkchainFormat basic)
  = WorkchainDescr;

workchain_v2#a7 enabled_since:uint32 monitor_min_split:(## 8)
  min_split:(## 8) max_split:(## 8) { monitor_min_split <= min_split }
  basic:(## 1) active:Bool accept_msgs:Bool flags:(## 13) { flags = 0 }
  zerostate_root_hash:bits256 zerostate_file_hash:bits256
  version:uint32 format:(WorkchainFormat basic)
  split_merge_timings:WcSplitMergeTimings
  persistent_state_split_depth:(## 8) { persistent_state_split_depth <= 63 }
  = WorkchainDescr;

_ workchains:(HashmapE 32 WorkchainDescr) = ConfigParam 12;

complaint_prices#1a deposit:Grams bit_price:Grams cell_price:Grams = ComplaintPricing; 
_ ComplaintPricing = ConfigParam 13;

block_grams_created#6b masterchain_block_fee:Grams basechain_block_fee:Grams
  = BlockCreateFees;
_ BlockCreateFees = ConfigParam 14;

_ validators_elected_for:uint32 elections_start_before:uint32 
  elections_end_before:uint32 stake_held_for:uint32
  = ConfigParam 15;
  
_ max_validators:(## 16) max_main_validators:(## 16) min_validators:(## 16) 
  { max_validators >= max_main_validators } 
  { max_main_validators >= min_validators } 
  { min_validators >= 1 }
  = ConfigParam 16;

_ min_stake:Grams max_stake:Grams min_total_stake:Grams max_stake_factor:uint32 = ConfigParam 17;

_#cc utime_since:uint32 bit_price_ps:uint64 cell_price_ps:uint64 
  mc_bit_price_ps:uint64 mc_cell_price_ps:uint64 = StoragePrices;
_ (Hashmap 32 StoragePrices) = ConfigParam 18;

_ global_id:int32 = ConfigParam 19;

gas_prices#dd gas_price:uint64 gas_limit:uint64 gas_credit:uint64 
  block_gas_limit:uint64 freeze_due_limit:uint64 delete_due_limit:uint64 
  = GasLimitsPrices;

gas_prices_ext#de gas_price:uint64 gas_limit:uint64 special_gas_limit:uint64 gas_credit:uint64 
  block_gas_limit:uint64 freeze_due_limit:uint64 delete_due_limit:uint64 
  = GasLimitsPrices;

gas_flat_pfx#d1 flat_gas_limit:uint64 flat_gas_price:uint64 other:GasLimitsPrices
  = GasLimitsPrices;

config_mc_gas_prices#_ GasLimitsPrices = ConfigParam 20;
config_gas_prices#_ GasLimitsPrices = ConfigParam 21;

param_limits#c3 underload:# soft_limit:# { underload <= soft_limit }
  hard_limit:# { soft_limit <= hard_limit } = ParamLimits;
block_limits#5d bytes:ParamLimits gas:ParamLimits lt_delta:ParamLimits
  = BlockLimits;
  
config_mc_block_limits#_ BlockLimits = ConfigParam 22;
config_block_limits#_ BlockLimits = ConfigParam 23;

// msg_fwd_fees = (lump_price + ceil((bit_price * msg.bits + cell_price * msg.cells)/2^16)) nanograms
// ihr_fwd_fees = ceil((msg_fwd_fees * ihr_price_factor)/2^16) nanograms
// bits in the root cell of a message are not included in msg.bits (lump_price pays for them)
msg_forward_prices#ea lump_price:uint64 bit_price:uint64 cell_price:uint64
  ihr_price_factor:uint32 first_frac:uint16 next_frac:uint16 = MsgForwardPrices;

// used for messages to/from masterchain
config_mc_fwd_prices#_ MsgForwardPrices = ConfigParam 24;
// used for all other messages
config_fwd_prices#_ MsgForwardPrices = ConfigParam 25;

catchain_config#c1 mc_catchain_lifetime:uint32 shard_catchain_lifetime:uint32 
  shard_validators_lifetime:uint32 shard_validators_num:uint32 = CatchainConfig;

catchain_config_new#c2 flags:(## 7) { flags = 0 } shuffle_mc_validators:Bool
  mc_catchain_lifetime:uint32 shard_catchain_lifetime:uint32
  shard_validators_lifetime:uint32 shard_validators_num:uint32 = CatchainConfig;

consensus_config#d6 round_candidates:# { round_candidates >= 1 }
  next_candidate_delay_ms:uint32 consensus_timeout_ms:uint32
  fast_attempts:uint32 attempt_duration:uint32 catchain_max_deps:uint32
  max_block_bytes:uint32 max_collated_bytes:uint32 = ConsensusConfig;

consensus_config_new#d7 flags:(## 7) { flags = 0 } new_catchain_ids:Bool
  round_candidates:(## 8) { round_candidates >= 1 }
  next_candidate_delay_ms:uint32 consensus_timeout_ms:uint32
  fast_attempts:uint32 attempt_duration:uint32 catchain_max_deps:uint32
  max_block_bytes:uint32 max_collated_bytes:uint32 = ConsensusConfig;

consensus_config_v3#d8 flags:(## 7) { flags = 0 } new_catchain_ids:Bool
  round_candidates:(## 8) { round_candidates >= 1 }
  next_candidate_delay_ms:uint32 consensus_timeout_ms:uint32
  fast_attempts:uint32 attempt_duration:uint32 catchain_max_deps:uint32
  max_block_bytes:uint32 max_collated_bytes:uint32 
  proto_version:uint16 = ConsensusConfig;

consensus_config_v4#d9 flags:(## 7) { flags = 0 } new_catchain_ids:Bool
  round_candidates:(## 8) { round_candidates >= 1 }
  next_candidate_delay_ms:uint32 consensus_timeout_ms:uint32
  fast_attempts:uint32 attempt_duration:uint32 catchain_max_deps:uint32
  max_block_bytes:uint32 max_collated_bytes:uint32
  proto_version:uint16 catchain_max_blocks_coeff:uint32 = ConsensusConfig;

_ CatchainConfig = ConfigParam 28;
_ ConsensusConfig = ConfigParam 29;

_ fundamental_smc_addr:(HashmapE 256 True) = ConfigParam 31;
_ prev_validators:ValidatorSet = ConfigParam 32;
_ prev_temp_validators:ValidatorSet = ConfigParam 33;
_ cur_validators:ValidatorSet = ConfigParam 34;
_ cur_temp_validators:ValidatorSet = ConfigParam 35;
_ next_validators:ValidatorSet = ConfigParam 36;
_ next_temp_validators:ValidatorSet = ConfigParam 37;

validator_temp_key#3 adnl_addr:bits256 temp_public_key:SigPubKey seqno:# valid_until:uint32 = ValidatorTempKey;
signed_temp_key#4 key:^ValidatorTempKey signature:CryptoSignature = ValidatorSignedTempKey;
_ (HashmapE 256 ValidatorSignedTempKey) = ConfigParam 39;

misbehaviour_punishment_config_v1#01 
  default_flat_fine:Grams default_proportional_fine:uint32
  severity_flat_mult:uint16 severity_proportional_mult:uint16
  unpunishable_interval:uint16
  long_interval:uint16 long_flat_mult:uint16 long_proportional_mult:uint16
  medium_interval:uint16 medium_flat_mult:uint16 medium_proportional_mult:uint16
   = MisbehaviourPunishmentConfig;
_ MisbehaviourPunishmentConfig = ConfigParam 40;

size_limits_config#01 max_msg_bits:uint32 max_msg_cells:uint32 max_library_cells:uint32 max_vm_data_depth:uint16
  max_ext_msg_size:uint32 max_ext_msg_depth:uint16 = SizeLimitsConfig;
size_limits_config_v2#02 max_msg_bits:uint32 max_msg_cells:uint32 max_library_cells:uint32 max_vm_data_depth:uint16
  max_ext_msg_size:uint32 max_ext_msg_depth:uint16 max_acc_state_cells:uint32 max_acc_state_bits:uint32
  max_acc_public_libraries:uint32 defer_out_queue_size_limit:uint32 max_msg_extra_currencies:uint32
  max_acc_fixed_prefix_length:uint8 = SizeLimitsConfig;
_ SizeLimitsConfig = ConfigParam 43;

// key is [ wc:int32 addr:uint256 ]
suspended_address_list#00 addresses:(HashmapE 288 Unit) suspended_until:uint32 = SuspendedAddressList;
_ SuspendedAddressList = ConfigParam 44;

precompiled_smc#b0 gas_usage:uint64 = PrecompiledSmc;
precompiled_contracts_config#c0 list:(HashmapE 256 PrecompiledSmc) = PrecompiledContractsConfig;
_ PrecompiledContractsConfig = ConfigParam 45;

oracle_bridge_params#_ bridge_address:bits256 oracle_mutlisig_address:bits256 oracles:(HashmapE 256 uint256) external_chain_address:bits256 = OracleBridgeParams;
_ OracleBridgeParams = ConfigParam 71; // Ethereum bridge
_ OracleBridgeParams = ConfigParam 72; // Binance Smart Chain bridge
_ OracleBridgeParams = ConfigParam 73; // Polygon bridge

// Note that chains in which bridge, minter and jetton-wallet operate are fixated
jetton_bridge_prices#_ bridge_burn_fee:Coins bridge_mint_fee:Coins
                       wallet_min_tons_for_storage:Coins
                       wallet_gas_consumption:Coins
                       minter_min_tons_for_storage:Coins
                       discover_gas_consumption:Coins = JettonBridgePrices;

jetton_bridge_params_v0#00 bridge_address:bits256 oracles_address:bits256 oracles:(HashmapE 256 uint256) state_flags:uint8 burn_bridge_fee:Coins = JettonBridgeParams;
jetton_bridge_params_v1#01 bridge_address:bits256 oracles_address:bits256 oracles:(HashmapE 256 uint256) state_flags:uint8 prices:^JettonBridgePrices external_chain_address:bits256 = JettonBridgeParams;

_ JettonBridgeParams = ConfigParam 79; // ETH->TON token bridge
_ JettonBridgeParams = ConfigParam 81; // BNB->TON token bridge
_ JettonBridgeParams = ConfigParam 82; // Polygon->TON token bridge


//
//  PROOFS
//
block_signatures_pure#_ sig_count:uint32 sig_weight:uint64
  signatures:(HashmapE 16 CryptoSignaturePair) = BlockSignaturesPure;
block_signatures#11 validator_info:ValidatorBaseInfo pure_signatures:BlockSignaturesPure = BlockSignatures;
block_proof#c3 proof_for:BlockIdExt root:^Cell signatures:(Maybe ^BlockSignatures) = BlockProof;

chain_empty$_ = ProofChain 0;
chain_link$_ {n:#} root:^Cell prev:n?^(ProofChain n) = ProofChain (n + 1);
top_block_descr#d5 proof_for:BlockIdExt signatures:(Maybe ^BlockSignatures) 
  len:(## 8) { len >= 1 } { len <= 8 } chain:(ProofChain len) = TopBlockDescr;

//
//  COLLATED DATA
//
top_block_descr_set#4ac789f3 collection:(HashmapE 96 ^TopBlockDescr) = TopBlockDescrSet;

//
//  VALIDATOR MISBEHAVIOR COMPLAINTS
//
prod_info#34 utime:uint32 mc_blk_ref:ExtBlkRef state_proof:^(MERKLE_PROOF Block)
  prod_proof:^(MERKLE_PROOF ShardState) = ProducerInfo;
no_blk_gen from_utime:uint32 prod_info:^ProducerInfo = ComplaintDescr;
no_blk_gen_diff prod_info_old:^ProducerInfo prod_info_new:^ProducerInfo = ComplaintDescr;
validator_complaint#bc validator_pubkey:bits256 description:^ComplaintDescr created_at:uint32 severity:uint8 reward_addr:uint256 paid:Grams suggested_fine:Grams suggested_fine_part:uint32 = ValidatorComplaint;
complaint_status#2d complaint:^ValidatorComplaint voters:(HashmapE 16 True) vset_id:uint256 weight_remaining:int64 = ValidatorComplaintStatus;

//
//  TVM REFLECTION
//
vm_stk_null#00 = VmStackValue;
vm_stk_tinyint#01 value:int64 = VmStackValue;
vm_stk_int#0201_ value:int257 = VmStackValue;
vm_stk_nan#02ff = VmStackValue;
vm_stk_cell#03 cell:^Cell = VmStackValue;
_ cell:^Cell st_bits:(## 10) end_bits:(## 10) { st_bits <= end_bits }
  st_ref:(#<= 4) end_ref:(#<= 4) { st_ref <= end_ref } = VmCellSlice;
vm_stk_slice#04 _:VmCellSlice = VmStackValue;
vm_stk_builder#05 cell:^Cell = VmStackValue;
vm_stk_cont#06 cont:VmCont = VmStackValue;
vm_tupref_nil$_ = VmTupleRef 0;
vm_tupref_single$_ entry:^VmStackValue = VmTupleRef 1;
vm_tupref_any$_ {n:#} ref:^(VmTuple (n + 2)) = VmTupleRef (n + 2);
vm_tuple_nil$_ = VmTuple 0;
vm_tuple_tcons$_ {n:#} head:(VmTupleRef n) tail:^VmStackValue = VmTuple (n + 1);
vm_stk_tuple#07 len:(## 16) data:(VmTuple len) = VmStackValue;

vm_stack#_ depth:(## 24) stack:(VmStackList depth) = VmStack;
vm_stk_cons#_ {n:#} rest:^(VmStackList n) tos:VmStackValue = VmStackList (n + 1);
vm_stk_nil#_ = VmStackList 0;

_ cregs:(HashmapE 4 VmStackValue) = VmSaveList;
gas_limits#_ remaining:int64 _:^[ max_limit:int64 cur_limit:int64 credit:int64 ]
  = VmGasLimits;
_ libraries:(HashmapE 256 ^Cell) = VmLibraries;

vm_ctl_data$_ nargs:(Maybe uint13) stack:(Maybe VmStack) save:VmSaveList
cp:(Maybe int16) = VmControlData;
vmc_std$00 cdata:VmControlData code:VmCellSlice = VmCont;
vmc_envelope$01 cdata:VmControlData next:^VmCont = VmCont;
vmc_quit$1000 exit_code:int32 = VmCont;
vmc_quit_exc$1001 = VmCont;
vmc_repeat$10100 count:uint63 body:^VmCont after:^VmCont = VmCont; 
vmc_until$110000 body:^VmCont after:^VmCont = VmCont;
vmc_again$110001 body:^VmCont = VmCont;
vmc_while_cond$110010 cond:^VmCont body:^VmCont
after:^VmCont = VmCont;
vmc_while_body$110011 cond:^VmCont body:^VmCont
after:^VmCont = VmCont;
vmc_pushint$1111 value:int32 next:^VmCont = VmCont;

//
//  DNS RECORDS
//
_ (HashmapE 256 ^DNSRecord) = DNS_RecordSet;

chunk_ref$_ {n:#} ref:^(TextChunks (n + 1)) = TextChunkRef (n + 1);
chunk_ref_empty$_ = TextChunkRef 0;
text_chunk$_ {n:#} len:(## 8) data:(bits (len * 8)) next:(TextChunkRef n) = TextChunks (n + 1);
text_chunk_empty$_ = TextChunks 0;
text$_ chunks:(## 8) rest:(TextChunks chunks) = Text;
dns_text#1eda _:Text = DNSRecord;

dns_next_resolver#ba93 resolver:MsgAddressInt = DNSRecord;  // usually in record #-1

dns_adnl_address#ad01 adnl_addr:bits256 flags:(## 8) { flags <= 1 }
  proto_list:flags . 0?ProtoList = DNSRecord;  // often in record #2
proto_list_nil$0 = ProtoList;
proto_list_next$1 head:Protocol tail:ProtoList = ProtoList;
proto_http#4854 = Protocol;

dns_smc_address#9fd3 smc_addr:MsgAddressInt flags:(## 8) { flags <= 1 }
  cap_list:flags . 0?SmcCapList = DNSRecord;   // often in record #1
cap_list_nil$0 = SmcCapList;
cap_list_next$1 head:SmcCapability tail:SmcCapList = SmcCapList;
cap_method_seqno#5371 = SmcCapability;
cap_method_pubkey#71f4 = SmcCapability;
cap_is_wallet#2177 = SmcCapability;
cap_name#ff name:Text = SmcCapability;

dns_storage_address#7473 bag_id:bits256 = DNSRecord;

//
// PAYMENT CHANNELS
//

chan_config$_  init_timeout:uint32 close_timeout:uint32 a_key:bits256 b_key:bits256 
  a_addr:^MsgAddressInt b_addr:^MsgAddressInt channel_id:uint64 min_A_extra:Grams = ChanConfig;

chan_state_init$000  signed_A:Bool signed_B:Bool min_A:Grams min_B:Grams expire_at:uint32 A:Grams B:Grams = ChanState;
chan_state_close$001 signed_A:Bool signed_B:Bool promise_A:Grams promise_B:Grams expire_at:uint32 A:Grams B:Grams = ChanState;
chan_state_payout$010 A:Grams B:Grams = ChanState;

chan_promise$_ channel_id:uint64 promise_A:Grams promise_B:Grams = ChanPromise;
chan_signed_promise#_ sig:(Maybe ^bits512) promise:ChanPromise = ChanSignedPromise;

chan_msg_init#27317822 inc_A:Grams inc_B:Grams min_A:Grams min_B:Grams channel_id:uint64 = ChanMsg;
chan_msg_close#f28ae183 extra_A:Grams extra_B:Grams promise:ChanSignedPromise  = ChanMsg;
chan_msg_timeout#43278a28 = ChanMsg;
chan_msg_payout#37fe7810 = ChanMsg;

chan_signed_msg$_ sig_A:(Maybe ^bits512) sig_B:(Maybe ^bits512) msg:ChanMsg = ChanSignedMsg;

chan_op_cmd#912838d1 msg:ChanSignedMsg = ChanOp;


chan_data$_ config:^ChanConfig state:^ChanState = ChanData;
`),nt}var en;function ba(){return en||(en=1,(function(t){Object.defineProperty(t,"__esModule",{value:!0}),t.blockSchema=t.unwrap=t.TLBSchemaError=t.TLBRuntimeError=t.TLBDataError=t.parseTLB=t.TLBRuntime=t.parseCell=t.encodeCell=t.replacer=void 0;var e=Fa();Object.defineProperty(t,"replacer",{enumerable:!0,get:function(){return e.replacer}}),Object.defineProperty(t,"encodeCell",{enumerable:!0,get:function(){return e.encodeCell}}),Object.defineProperty(t,"parseCell",{enumerable:!0,get:function(){return e.parseCell}});var r=ar();Object.defineProperty(t,"TLBRuntime",{enumerable:!0,get:function(){return r.TLBRuntime}}),Object.defineProperty(t,"parseTLB",{enumerable:!0,get:function(){return r.parseTLB}}),Object.defineProperty(t,"TLBDataError",{enumerable:!0,get:function(){return r.TLBDataError}}),Object.defineProperty(t,"TLBRuntimeError",{enumerable:!0,get:function(){return r.TLBRuntimeError}}),Object.defineProperty(t,"TLBSchemaError",{enumerable:!0,get:function(){return r.TLBSchemaError}});var u=Ln();Object.defineProperty(t,"unwrap",{enumerable:!0,get:function(){return u.unwrap}});var n=Ba();Object.defineProperty(t,"blockSchema",{enumerable:!0,get:function(){return n.blockSchema}})})(vt)),vt}var mt=ba();const va="message#_ len:(## 7) { len <= 127 } text:(bits (len * 8)) = Message;",xa="te6cckEBAQEAFwAAKSioyuboQNrK5ubCzspA0txAxsrY2Whv0fw=";class Dt{bocFormat=1;boc="";data="{}";runtime=mt.unwrap(mt.TLBRuntime.from(""));constructor(e,r,u){this.updateSchema(e),r?this.updateBoc(r):u&&this.updateData(u)}get state(){return{bocFormat:this.bocFormat,schema:this.runtime.schema,boc:this.boc,data:this.data}}static get default(){return new Dt(va,xa)}static from(e){const r=new Dt(e);return r.updateSchema(e),r}updateSchema(e,r=0){if(!e||e.trim()==="")return{success:!1,error:new Error("Schema cannot be empty")};if(e=e.replace("block.tlb",mt.blockSchema),this.runtime.schema===e)return{success:!0,value:this.state};const u=this.runtime.changeSchema(e);return u.success?(this.runtime=u.value,r===0?this.updateBoc(this.boc):this.updateData(this.data)):u}updateBoc(e){if(!e||e.trim()==="")return this.boc="",this.data="{}",{success:!0,value:this.state};this.boc=e;try{const r=this.runtime.parseCell(this.boc);this.data=JSON.stringify(r,mt.replacer,2)}catch(r){return{success:!1,error:new Error(`Parse ${r instanceof Error?r.message:"unknown error"}`)}}return{success:!0,value:this.state}}updateData(e){this.data=e.trim();try{const r=JSON.parse(this.data),u=this.runtime.encodeCell(r).toBoc();switch(this.bocFormat){case 0:this.boc=u.toString("hex");break;case 1:default:this.boc=u.toString("base64")}}catch(r){return{success:!1,error:new Error(`Encode ${r instanceof Error?r.message:"unknown error"}`)}}return{success:!0,value:this.state}}}class Sa{processor;schemaField=null;bocField=null;dataField=null;schemaErrorSpan=null;bocErrorSpan=null;dataErrorSpan=null;isUpdating=!1;constructor(){this.processor=Dt.default,this.initializeUI(),this.setupEventListeners(),this.updateFieldsFromCore()}initializeUI(){this.schemaField=document.querySelector('textarea[name="schema"]'),this.bocField=document.querySelector('textarea[name="boc"]'),this.dataField=document.querySelector('textarea[name="data"]'),this.schemaErrorSpan=document.getElementById("schema-error"),this.bocErrorSpan=document.getElementById("boc-error"),this.dataErrorSpan=document.getElementById("data-error")}setupEventListeners(){this.schemaField&&this.schemaField.addEventListener("input",e=>{const r=e.target;this.handleSchemaChange(r.value)}),this.bocField&&this.bocField.addEventListener("input",e=>{const r=e.target;this.handleBocChange(r.value)}),this.dataField&&this.dataField.addEventListener("input",e=>{const r=e.target;this.handleDataChange(r.value)})}handleSchemaChange(e){if(this.isUpdating)return;const r=this.processor.updateSchema(e);this.handleResult(r,"schema")}handleBocChange(e){this.isUpdating||this.handleResult(this.processor.updateBoc(e),"boc")}handleDataChange(e){if(this.isUpdating)return;const r=this.processor.updateData(e);this.handleResult(r,"data")}handleResult(e,r){e.success?(this.hideFieldError(r),this.updateFieldsFromData(e.value)):this.showFieldError(e.error.message,r)}updateFieldsFromCore(){this.updateFieldsFromData(this.processor.state)}updateFieldsFromData(e){this.isUpdating=!0;try{this.schemaField&&this.schemaField.value!==e.schema&&(this.schemaField.value=e.schema),this.bocField&&this.bocField.value!==e.boc&&(this.bocField.value=e.boc),this.dataField&&this.dataField.value!==e.data&&(this.dataField.value=e.data)}finally{this.isUpdating=!1}}showFieldError(e,r){let u=null,n=null;switch(r){case"schema":u=this.schemaErrorSpan,n=this.schemaField;break;case"boc":u=this.bocErrorSpan,n=this.bocField;break;case"data":u=this.dataErrorSpan,n=this.dataField;break}u&&n&&(u.textContent=e,u.style.display="inline",n.classList.add("field-error-border"))}hideFieldError(e){let r=null,u=null;switch(e){case"schema":r=this.schemaErrorSpan,u=this.schemaField;break;case"boc":r=this.bocErrorSpan,u=this.bocField;break;case"data":r=this.dataErrorSpan,u=this.dataField;break}r&&u&&(r.style.display="none",u.classList.remove("field-error-border"))}}new Sa;
