import{r as En,g as gn,a as Cn}from"./ton-C0wn69kl.js";import{a as Vr}from"./vendor-BGFlDZXx.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))u(n);new MutationObserver(n=>{for(const i of n)if(i.type==="childList")for(const a of i.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&u(a)}).observe(document,{childList:!0,subtree:!0});function r(n){const i={};return n.integrity&&(i.integrity=n.integrity),n.referrerPolicy&&(i.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?i.credentials="include":n.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function u(n){if(n.ep)return;n.ep=!0;const i=r(n);fetch(n.href,i)}})();var ue=En(),Ve={},re={},Bt={},je={},ht={exports:{}};function An(t){return t==="description"||t==="string"||t==="code"}function ge(t,e,r){if(!An(r))throw new Error("invalid Failure type: "+r);this.pexpr=t,this.text=e,this.type=r,this.fluffy=!1}ge.prototype.getPExpr=function(){return this.pexpr};ge.prototype.getText=function(){return this.text};ge.prototype.getType=function(){return this.type};ge.prototype.isDescription=function(){return this.type==="description"};ge.prototype.isStringTerminal=function(){return this.type==="string"};ge.prototype.isCode=function(){return this.type==="code"};ge.prototype.isFluffy=function(){return this.fluffy};ge.prototype.makeFluffy=function(){this.fluffy=!0};ge.prototype.clearFluffy=function(){this.fluffy=!1};ge.prototype.subsumes=function(t){return this.getText()===t.getText()&&this.type===t.type&&(!this.isFluffy()||this.isFluffy()&&t.isFluffy())};ge.prototype.toString=function(){return this.type==="string"?JSON.stringify(this.getText()):this.getText()};ge.prototype.clone=function(){const t=new ge(this.pexpr,this.text,this.type);return this.isFluffy()&&t.makeFluffy(),t};ge.prototype.toKey=function(){return this.toString()+"#"+this.type};var jr=ge,G={};(function(t){t.abstract=function(r){const u=r||"";return function(){throw new Error("this method "+u+" is abstract! (it has no implementation in class "+this.constructor.name+")")}},t.assert=function(r,u){if(!r)throw new Error(u||"Assertion failed")},t.defineLazyProperty=function(r,u,n){let i;Object.defineProperty(r,u,{get(){return i||(i=n.call(this)),i}})},t.clone=function(r){return r&&Object.assign({},r)},t.repeatFn=function(r,u){const n=[];for(;u-- >0;)n.push(r());return n},t.repeatStr=function(r,u){return new Array(u+1).join(r)},t.repeat=function(r,u){return t.repeatFn(()=>r,u)},t.getDuplicates=function(r){const u=[];for(let n=0;n<r.length;n++){const i=r[n];r.lastIndexOf(i)!==n&&u.indexOf(i)<0&&u.push(i)}return u},t.copyWithoutDuplicates=function(r){const u=[];return r.forEach(n=>{u.indexOf(n)<0&&u.push(n)}),u},t.isSyntactic=function(r){const u=r[0];return u===u.toUpperCase()},t.isLexical=function(r){return!t.isSyntactic(r)},t.padLeft=function(r,u,n){const i=n||" ";return r.length<u?t.repeatStr(i,u-r.length)+r:r},t.StringBuffer=function(){this.strings=[]},t.StringBuffer.prototype.append=function(r){this.strings.push(r)},t.StringBuffer.prototype.contents=function(){return this.strings.join("")};const e=r=>String.fromCodePoint(parseInt(r,16));t.unescapeCodePoint=function(r){if(r.charAt(0)==="\\")switch(r.charAt(1)){case"b":return"\b";case"f":return"\f";case"n":return`
`;case"r":return"\r";case"t":return"	";case"v":return"\v";case"x":return e(r.slice(2,4));case"u":return r.charAt(2)==="{"?e(r.slice(3,-1)):e(r.slice(2,6));default:return r.charAt(1)}else return r},t.unexpectedObjToString=function(r){if(r==null)return String(r);const u=Object.prototype.toString.call(r);try{let n;return r.constructor&&r.constructor.name?n=r.constructor.name:u.indexOf("[object ")===0?n=u.slice(8,-1):n=typeof r,n+": "+JSON.stringify(String(r))}catch{return u}}})(G);const tr=G;class Ot{constructor(e){this.matchLength=e}get ctorName(){throw new Error("subclass responsibility")}numChildren(){return this.children?this.children.length:0}childAt(e){if(this.children)return this.children[e]}indexOfChild(e){return this.children.indexOf(e)}hasChildren(){return this.numChildren()>0}hasNoChildren(){return!this.hasChildren()}onlyChild(){if(this.numChildren()!==1)throw new Error("cannot get only child of a node of type "+this.ctorName+" (it has "+this.numChildren()+" children)");return this.firstChild()}firstChild(){if(this.hasNoChildren())throw new Error("cannot get first child of a "+this.ctorName+" node, which has no children");return this.childAt(0)}lastChild(){if(this.hasNoChildren())throw new Error("cannot get last child of a "+this.ctorName+" node, which has no children");return this.childAt(this.numChildren()-1)}childBefore(e){const r=this.indexOfChild(e);if(r<0)throw new Error("Node.childBefore() called w/ an argument that is not a child");if(r===0)throw new Error("cannot get child before first child");return this.childAt(r-1)}childAfter(e){const r=this.indexOfChild(e);if(r<0)throw new Error("Node.childAfter() called w/ an argument that is not a child");if(r===this.numChildren()-1)throw new Error("cannot get child after last child");return this.childAt(r+1)}isTerminal(){return!1}isNonterminal(){return!1}isIteration(){return!1}isOptional(){return!1}}class _n extends Ot{get ctorName(){return"_terminal"}isTerminal(){return!0}get primitiveValue(){throw new Error("The `primitiveValue` property was removed in Ohm v17.")}}class Fn extends Ot{constructor(e,r,u,n){super(n),this.ruleName=e,this.children=r,this.childOffsets=u}get ctorName(){return this.ruleName}isNonterminal(){return!0}isLexical(){return tr.isLexical(this.ctorName)}isSyntactic(){return tr.isSyntactic(this.ctorName)}}class yn extends Ot{constructor(e,r,u,n){super(u),this.children=e,this.childOffsets=r,this.optional=n}get ctorName(){return"_iter"}isIteration(){return!0}isOptional(){return this.optional}}var kt={TerminalNode:_n,NonterminalNode:Fn,IterationNode:yn},j={},Bn={Lu:/[A-Z\xC0-\xD6\xD8-\xDE\u0100\u0102\u0104\u0106\u0108\u010A\u010C\u010E\u0110\u0112\u0114\u0116\u0118\u011A\u011C\u011E\u0120\u0122\u0124\u0126\u0128\u012A\u012C\u012E\u0130\u0132\u0134\u0136\u0139\u013B\u013D\u013F\u0141\u0143\u0145\u0147\u014A\u014C\u014E\u0150\u0152\u0154\u0156\u0158\u015A\u015C\u015E\u0160\u0162\u0164\u0166\u0168\u016A\u016C\u016E\u0170\u0172\u0174\u0176\u0178\u0179\u017B\u017D\u0181\u0182\u0184\u0186\u0187\u0189-\u018B\u018E-\u0191\u0193\u0194\u0196-\u0198\u019C\u019D\u019F\u01A0\u01A2\u01A4\u01A6\u01A7\u01A9\u01AC\u01AE\u01AF\u01B1-\u01B3\u01B5\u01B7\u01B8\u01BC\u01C4\u01C7\u01CA\u01CD\u01CF\u01D1\u01D3\u01D5\u01D7\u01D9\u01DB\u01DE\u01E0\u01E2\u01E4\u01E6\u01E8\u01EA\u01EC\u01EE\u01F1\u01F4\u01F6-\u01F8\u01FA\u01FC\u01FE\u0200\u0202\u0204\u0206\u0208\u020A\u020C\u020E\u0210\u0212\u0214\u0216\u0218\u021A\u021C\u021E\u0220\u0222\u0224\u0226\u0228\u022A\u022C\u022E\u0230\u0232\u023A\u023B\u023D\u023E\u0241\u0243-\u0246\u0248\u024A\u024C\u024E\u0370\u0372\u0376\u037F\u0386\u0388-\u038A\u038C\u038E\u038F\u0391-\u03A1\u03A3-\u03AB\u03CF\u03D2-\u03D4\u03D8\u03DA\u03DC\u03DE\u03E0\u03E2\u03E4\u03E6\u03E8\u03EA\u03EC\u03EE\u03F4\u03F7\u03F9\u03FA\u03FD-\u042F\u0460\u0462\u0464\u0466\u0468\u046A\u046C\u046E\u0470\u0472\u0474\u0476\u0478\u047A\u047C\u047E\u0480\u048A\u048C\u048E\u0490\u0492\u0494\u0496\u0498\u049A\u049C\u049E\u04A0\u04A2\u04A4\u04A6\u04A8\u04AA\u04AC\u04AE\u04B0\u04B2\u04B4\u04B6\u04B8\u04BA\u04BC\u04BE\u04C0\u04C1\u04C3\u04C5\u04C7\u04C9\u04CB\u04CD\u04D0\u04D2\u04D4\u04D6\u04D8\u04DA\u04DC\u04DE\u04E0\u04E2\u04E4\u04E6\u04E8\u04EA\u04EC\u04EE\u04F0\u04F2\u04F4\u04F6\u04F8\u04FA\u04FC\u04FE\u0500\u0502\u0504\u0506\u0508\u050A\u050C\u050E\u0510\u0512\u0514\u0516\u0518\u051A\u051C\u051E\u0520\u0522\u0524\u0526\u0528\u052A\u052C\u052E\u0531-\u0556\u10A0-\u10C5\u10C7\u10CD\u13A0-\u13F5\u1E00\u1E02\u1E04\u1E06\u1E08\u1E0A\u1E0C\u1E0E\u1E10\u1E12\u1E14\u1E16\u1E18\u1E1A\u1E1C\u1E1E\u1E20\u1E22\u1E24\u1E26\u1E28\u1E2A\u1E2C\u1E2E\u1E30\u1E32\u1E34\u1E36\u1E38\u1E3A\u1E3C\u1E3E\u1E40\u1E42\u1E44\u1E46\u1E48\u1E4A\u1E4C\u1E4E\u1E50\u1E52\u1E54\u1E56\u1E58\u1E5A\u1E5C\u1E5E\u1E60\u1E62\u1E64\u1E66\u1E68\u1E6A\u1E6C\u1E6E\u1E70\u1E72\u1E74\u1E76\u1E78\u1E7A\u1E7C\u1E7E\u1E80\u1E82\u1E84\u1E86\u1E88\u1E8A\u1E8C\u1E8E\u1E90\u1E92\u1E94\u1E9E\u1EA0\u1EA2\u1EA4\u1EA6\u1EA8\u1EAA\u1EAC\u1EAE\u1EB0\u1EB2\u1EB4\u1EB6\u1EB8\u1EBA\u1EBC\u1EBE\u1EC0\u1EC2\u1EC4\u1EC6\u1EC8\u1ECA\u1ECC\u1ECE\u1ED0\u1ED2\u1ED4\u1ED6\u1ED8\u1EDA\u1EDC\u1EDE\u1EE0\u1EE2\u1EE4\u1EE6\u1EE8\u1EEA\u1EEC\u1EEE\u1EF0\u1EF2\u1EF4\u1EF6\u1EF8\u1EFA\u1EFC\u1EFE\u1F08-\u1F0F\u1F18-\u1F1D\u1F28-\u1F2F\u1F38-\u1F3F\u1F48-\u1F4D\u1F59\u1F5B\u1F5D\u1F5F\u1F68-\u1F6F\u1FB8-\u1FBB\u1FC8-\u1FCB\u1FD8-\u1FDB\u1FE8-\u1FEC\u1FF8-\u1FFB\u2102\u2107\u210B-\u210D\u2110-\u2112\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u2130-\u2133\u213E\u213F\u2145\u2183\u2C00-\u2C2E\u2C60\u2C62-\u2C64\u2C67\u2C69\u2C6B\u2C6D-\u2C70\u2C72\u2C75\u2C7E-\u2C80\u2C82\u2C84\u2C86\u2C88\u2C8A\u2C8C\u2C8E\u2C90\u2C92\u2C94\u2C96\u2C98\u2C9A\u2C9C\u2C9E\u2CA0\u2CA2\u2CA4\u2CA6\u2CA8\u2CAA\u2CAC\u2CAE\u2CB0\u2CB2\u2CB4\u2CB6\u2CB8\u2CBA\u2CBC\u2CBE\u2CC0\u2CC2\u2CC4\u2CC6\u2CC8\u2CCA\u2CCC\u2CCE\u2CD0\u2CD2\u2CD4\u2CD6\u2CD8\u2CDA\u2CDC\u2CDE\u2CE0\u2CE2\u2CEB\u2CED\u2CF2\uA640\uA642\uA644\uA646\uA648\uA64A\uA64C\uA64E\uA650\uA652\uA654\uA656\uA658\uA65A\uA65C\uA65E\uA660\uA662\uA664\uA666\uA668\uA66A\uA66C\uA680\uA682\uA684\uA686\uA688\uA68A\uA68C\uA68E\uA690\uA692\uA694\uA696\uA698\uA69A\uA722\uA724\uA726\uA728\uA72A\uA72C\uA72E\uA732\uA734\uA736\uA738\uA73A\uA73C\uA73E\uA740\uA742\uA744\uA746\uA748\uA74A\uA74C\uA74E\uA750\uA752\uA754\uA756\uA758\uA75A\uA75C\uA75E\uA760\uA762\uA764\uA766\uA768\uA76A\uA76C\uA76E\uA779\uA77B\uA77D\uA77E\uA780\uA782\uA784\uA786\uA78B\uA78D\uA790\uA792\uA796\uA798\uA79A\uA79C\uA79E\uA7A0\uA7A2\uA7A4\uA7A6\uA7A8\uA7AA-\uA7AE\uA7B0-\uA7B4\uA7B6\uFF21-\uFF3A]|\uD801[\uDC00-\uDC27\uDCB0-\uDCD3]|\uD803[\uDC80-\uDCB2]|\uD806[\uDCA0-\uDCBF]|\uD835[\uDC00-\uDC19\uDC34-\uDC4D\uDC68-\uDC81\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB5\uDCD0-\uDCE9\uDD04\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD38\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD6C-\uDD85\uDDA0-\uDDB9\uDDD4-\uDDED\uDE08-\uDE21\uDE3C-\uDE55\uDE70-\uDE89\uDEA8-\uDEC0\uDEE2-\uDEFA\uDF1C-\uDF34\uDF56-\uDF6E\uDF90-\uDFA8\uDFCA]|\uD83A[\uDD00-\uDD21]/,Ll:/[a-z\xB5\xDF-\xF6\xF8-\xFF\u0101\u0103\u0105\u0107\u0109\u010B\u010D\u010F\u0111\u0113\u0115\u0117\u0119\u011B\u011D\u011F\u0121\u0123\u0125\u0127\u0129\u012B\u012D\u012F\u0131\u0133\u0135\u0137\u0138\u013A\u013C\u013E\u0140\u0142\u0144\u0146\u0148\u0149\u014B\u014D\u014F\u0151\u0153\u0155\u0157\u0159\u015B\u015D\u015F\u0161\u0163\u0165\u0167\u0169\u016B\u016D\u016F\u0171\u0173\u0175\u0177\u017A\u017C\u017E-\u0180\u0183\u0185\u0188\u018C\u018D\u0192\u0195\u0199-\u019B\u019E\u01A1\u01A3\u01A5\u01A8\u01AA\u01AB\u01AD\u01B0\u01B4\u01B6\u01B9\u01BA\u01BD-\u01BF\u01C6\u01C9\u01CC\u01CE\u01D0\u01D2\u01D4\u01D6\u01D8\u01DA\u01DC\u01DD\u01DF\u01E1\u01E3\u01E5\u01E7\u01E9\u01EB\u01ED\u01EF\u01F0\u01F3\u01F5\u01F9\u01FB\u01FD\u01FF\u0201\u0203\u0205\u0207\u0209\u020B\u020D\u020F\u0211\u0213\u0215\u0217\u0219\u021B\u021D\u021F\u0221\u0223\u0225\u0227\u0229\u022B\u022D\u022F\u0231\u0233-\u0239\u023C\u023F\u0240\u0242\u0247\u0249\u024B\u024D\u024F-\u0293\u0295-\u02AF\u0371\u0373\u0377\u037B-\u037D\u0390\u03AC-\u03CE\u03D0\u03D1\u03D5-\u03D7\u03D9\u03DB\u03DD\u03DF\u03E1\u03E3\u03E5\u03E7\u03E9\u03EB\u03ED\u03EF-\u03F3\u03F5\u03F8\u03FB\u03FC\u0430-\u045F\u0461\u0463\u0465\u0467\u0469\u046B\u046D\u046F\u0471\u0473\u0475\u0477\u0479\u047B\u047D\u047F\u0481\u048B\u048D\u048F\u0491\u0493\u0495\u0497\u0499\u049B\u049D\u049F\u04A1\u04A3\u04A5\u04A7\u04A9\u04AB\u04AD\u04AF\u04B1\u04B3\u04B5\u04B7\u04B9\u04BB\u04BD\u04BF\u04C2\u04C4\u04C6\u04C8\u04CA\u04CC\u04CE\u04CF\u04D1\u04D3\u04D5\u04D7\u04D9\u04DB\u04DD\u04DF\u04E1\u04E3\u04E5\u04E7\u04E9\u04EB\u04ED\u04EF\u04F1\u04F3\u04F5\u04F7\u04F9\u04FB\u04FD\u04FF\u0501\u0503\u0505\u0507\u0509\u050B\u050D\u050F\u0511\u0513\u0515\u0517\u0519\u051B\u051D\u051F\u0521\u0523\u0525\u0527\u0529\u052B\u052D\u052F\u0561-\u0587\u13F8-\u13FD\u1C80-\u1C88\u1D00-\u1D2B\u1D6B-\u1D77\u1D79-\u1D9A\u1E01\u1E03\u1E05\u1E07\u1E09\u1E0B\u1E0D\u1E0F\u1E11\u1E13\u1E15\u1E17\u1E19\u1E1B\u1E1D\u1E1F\u1E21\u1E23\u1E25\u1E27\u1E29\u1E2B\u1E2D\u1E2F\u1E31\u1E33\u1E35\u1E37\u1E39\u1E3B\u1E3D\u1E3F\u1E41\u1E43\u1E45\u1E47\u1E49\u1E4B\u1E4D\u1E4F\u1E51\u1E53\u1E55\u1E57\u1E59\u1E5B\u1E5D\u1E5F\u1E61\u1E63\u1E65\u1E67\u1E69\u1E6B\u1E6D\u1E6F\u1E71\u1E73\u1E75\u1E77\u1E79\u1E7B\u1E7D\u1E7F\u1E81\u1E83\u1E85\u1E87\u1E89\u1E8B\u1E8D\u1E8F\u1E91\u1E93\u1E95-\u1E9D\u1E9F\u1EA1\u1EA3\u1EA5\u1EA7\u1EA9\u1EAB\u1EAD\u1EAF\u1EB1\u1EB3\u1EB5\u1EB7\u1EB9\u1EBB\u1EBD\u1EBF\u1EC1\u1EC3\u1EC5\u1EC7\u1EC9\u1ECB\u1ECD\u1ECF\u1ED1\u1ED3\u1ED5\u1ED7\u1ED9\u1EDB\u1EDD\u1EDF\u1EE1\u1EE3\u1EE5\u1EE7\u1EE9\u1EEB\u1EED\u1EEF\u1EF1\u1EF3\u1EF5\u1EF7\u1EF9\u1EFB\u1EFD\u1EFF-\u1F07\u1F10-\u1F15\u1F20-\u1F27\u1F30-\u1F37\u1F40-\u1F45\u1F50-\u1F57\u1F60-\u1F67\u1F70-\u1F7D\u1F80-\u1F87\u1F90-\u1F97\u1FA0-\u1FA7\u1FB0-\u1FB4\u1FB6\u1FB7\u1FBE\u1FC2-\u1FC4\u1FC6\u1FC7\u1FD0-\u1FD3\u1FD6\u1FD7\u1FE0-\u1FE7\u1FF2-\u1FF4\u1FF6\u1FF7\u210A\u210E\u210F\u2113\u212F\u2134\u2139\u213C\u213D\u2146-\u2149\u214E\u2184\u2C30-\u2C5E\u2C61\u2C65\u2C66\u2C68\u2C6A\u2C6C\u2C71\u2C73\u2C74\u2C76-\u2C7B\u2C81\u2C83\u2C85\u2C87\u2C89\u2C8B\u2C8D\u2C8F\u2C91\u2C93\u2C95\u2C97\u2C99\u2C9B\u2C9D\u2C9F\u2CA1\u2CA3\u2CA5\u2CA7\u2CA9\u2CAB\u2CAD\u2CAF\u2CB1\u2CB3\u2CB5\u2CB7\u2CB9\u2CBB\u2CBD\u2CBF\u2CC1\u2CC3\u2CC5\u2CC7\u2CC9\u2CCB\u2CCD\u2CCF\u2CD1\u2CD3\u2CD5\u2CD7\u2CD9\u2CDB\u2CDD\u2CDF\u2CE1\u2CE3\u2CE4\u2CEC\u2CEE\u2CF3\u2D00-\u2D25\u2D27\u2D2D\uA641\uA643\uA645\uA647\uA649\uA64B\uA64D\uA64F\uA651\uA653\uA655\uA657\uA659\uA65B\uA65D\uA65F\uA661\uA663\uA665\uA667\uA669\uA66B\uA66D\uA681\uA683\uA685\uA687\uA689\uA68B\uA68D\uA68F\uA691\uA693\uA695\uA697\uA699\uA69B\uA723\uA725\uA727\uA729\uA72B\uA72D\uA72F-\uA731\uA733\uA735\uA737\uA739\uA73B\uA73D\uA73F\uA741\uA743\uA745\uA747\uA749\uA74B\uA74D\uA74F\uA751\uA753\uA755\uA757\uA759\uA75B\uA75D\uA75F\uA761\uA763\uA765\uA767\uA769\uA76B\uA76D\uA76F\uA771-\uA778\uA77A\uA77C\uA77F\uA781\uA783\uA785\uA787\uA78C\uA78E\uA791\uA793-\uA795\uA797\uA799\uA79B\uA79D\uA79F\uA7A1\uA7A3\uA7A5\uA7A7\uA7A9\uA7B5\uA7B7\uA7FA\uAB30-\uAB5A\uAB60-\uAB65\uAB70-\uABBF\uFB00-\uFB06\uFB13-\uFB17\uFF41-\uFF5A]|\uD801[\uDC28-\uDC4F\uDCD8-\uDCFB]|\uD803[\uDCC0-\uDCF2]|\uD806[\uDCC0-\uDCDF]|\uD835[\uDC1A-\uDC33\uDC4E-\uDC54\uDC56-\uDC67\uDC82-\uDC9B\uDCB6-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDCCF\uDCEA-\uDD03\uDD1E-\uDD37\uDD52-\uDD6B\uDD86-\uDD9F\uDDBA-\uDDD3\uDDEE-\uDE07\uDE22-\uDE3B\uDE56-\uDE6F\uDE8A-\uDEA5\uDEC2-\uDEDA\uDEDC-\uDEE1\uDEFC-\uDF14\uDF16-\uDF1B\uDF36-\uDF4E\uDF50-\uDF55\uDF70-\uDF88\uDF8A-\uDF8F\uDFAA-\uDFC2\uDFC4-\uDFC9\uDFCB]|\uD83A[\uDD22-\uDD43]/,Lt:/[\u01C5\u01C8\u01CB\u01F2\u1F88-\u1F8F\u1F98-\u1F9F\u1FA8-\u1FAF\u1FBC\u1FCC\u1FFC]/,Lm:/[\u02B0-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0374\u037A\u0559\u0640\u06E5\u06E6\u07F4\u07F5\u07FA\u081A\u0824\u0828\u0971\u0E46\u0EC6\u10FC\u17D7\u1843\u1AA7\u1C78-\u1C7D\u1D2C-\u1D6A\u1D78\u1D9B-\u1DBF\u2071\u207F\u2090-\u209C\u2C7C\u2C7D\u2D6F\u2E2F\u3005\u3031-\u3035\u303B\u309D\u309E\u30FC-\u30FE\uA015\uA4F8-\uA4FD\uA60C\uA67F\uA69C\uA69D\uA717-\uA71F\uA770\uA788\uA7F8\uA7F9\uA9CF\uA9E6\uAA70\uAADD\uAAF3\uAAF4\uAB5C-\uAB5F\uFF70\uFF9E\uFF9F]|\uD81A[\uDF40-\uDF43]|\uD81B[\uDF93-\uDF9F\uDFE0]/,Lo:/[\xAA\xBA\u01BB\u01C0-\u01C3\u0294\u05D0-\u05EA\u05F0-\u05F2\u0620-\u063F\u0641-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u0800-\u0815\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0972-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E45\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10D0-\u10FA\u10FD-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17DC\u1820-\u1842\u1844-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C77\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u2135-\u2138\u2D30-\u2D67\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3006\u303C\u3041-\u3096\u309F\u30A1-\u30FA\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA014\uA016-\uA48C\uA4D0-\uA4F7\uA500-\uA60B\uA610-\uA61F\uA62A\uA62B\uA66E\uA6A0-\uA6E5\uA78F\uA7F7\uA7FB-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9E0-\uA9E4\uA9E7-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA6F\uAA71-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB\uAADC\uAAE0-\uAAEA\uAAF2\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF66-\uFF6F\uFF71-\uFF9D\uFFA0-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC50-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/,Nl:/[\u16EE-\u16F0\u2160-\u2182\u2185-\u2188\u3007\u3021-\u3029\u3038-\u303A\uA6E6-\uA6EF]|\uD800[\uDD40-\uDD74\uDF41\uDF4A\uDFD1-\uDFD5]|\uD809[\uDC00-\uDC6E]/,Nd:/[0-9\u0660-\u0669\u06F0-\u06F9\u07C0-\u07C9\u0966-\u096F\u09E6-\u09EF\u0A66-\u0A6F\u0AE6-\u0AEF\u0B66-\u0B6F\u0BE6-\u0BEF\u0C66-\u0C6F\u0CE6-\u0CEF\u0D66-\u0D6F\u0DE6-\u0DEF\u0E50-\u0E59\u0ED0-\u0ED9\u0F20-\u0F29\u1040-\u1049\u1090-\u1099\u17E0-\u17E9\u1810-\u1819\u1946-\u194F\u19D0-\u19D9\u1A80-\u1A89\u1A90-\u1A99\u1B50-\u1B59\u1BB0-\u1BB9\u1C40-\u1C49\u1C50-\u1C59\uA620-\uA629\uA8D0-\uA8D9\uA900-\uA909\uA9D0-\uA9D9\uA9F0-\uA9F9\uAA50-\uAA59\uABF0-\uABF9\uFF10-\uFF19]|\uD801[\uDCA0-\uDCA9]|\uD804[\uDC66-\uDC6F\uDCF0-\uDCF9\uDD36-\uDD3F\uDDD0-\uDDD9\uDEF0-\uDEF9]|[\uD805\uD807][\uDC50-\uDC59\uDCD0-\uDCD9\uDE50-\uDE59\uDEC0-\uDEC9\uDF30-\uDF39]|\uD806[\uDCE0-\uDCE9]|\uD81A[\uDE60-\uDE69\uDF50-\uDF59]|\uD835[\uDFCE-\uDFFF]|\uD83A[\uDD50-\uDD59]/,Mn:/[\u0300-\u036F\u0483-\u0487\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08D4-\u08E1\u08E3-\u0902\u093A\u093C\u0941-\u0948\u094D\u0951-\u0957\u0962\u0963\u0981\u09BC\u09C1-\u09C4\u09CD\u09E2\u09E3\u0A01\u0A02\u0A3C\u0A41\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81\u0A82\u0ABC\u0AC1-\u0AC5\u0AC7\u0AC8\u0ACD\u0AE2\u0AE3\u0B01\u0B3C\u0B3F\u0B41-\u0B44\u0B4D\u0B56\u0B62\u0B63\u0B82\u0BC0\u0BCD\u0C00\u0C3E-\u0C40\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81\u0CBC\u0CBF\u0CC6\u0CCC\u0CCD\u0CE2\u0CE3\u0D01\u0D41-\u0D44\u0D4D\u0D62\u0D63\u0DCA\u0DD2-\u0DD4\u0DD6\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F71-\u0F7E\u0F80-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102D-\u1030\u1032-\u1037\u1039\u103A\u103D\u103E\u1058\u1059\u105E-\u1060\u1071-\u1074\u1082\u1085\u1086\u108D\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4\u17B5\u17B7-\u17BD\u17C6\u17C9-\u17D3\u17DD\u180B-\u180D\u1885\u1886\u18A9\u1920-\u1922\u1927\u1928\u1932\u1939-\u193B\u1A17\u1A18\u1A1B\u1A56\u1A58-\u1A5E\u1A60\u1A62\u1A65-\u1A6C\u1A73-\u1A7C\u1A7F\u1AB0-\u1ABD\u1B00-\u1B03\u1B34\u1B36-\u1B3A\u1B3C\u1B42\u1B6B-\u1B73\u1B80\u1B81\u1BA2-\u1BA5\u1BA8\u1BA9\u1BAB-\u1BAD\u1BE6\u1BE8\u1BE9\u1BED\u1BEF-\u1BF1\u1C2C-\u1C33\u1C36\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE0\u1CE2-\u1CE8\u1CED\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFB-\u1DFF\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302D\u3099\u309A\uA66F\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA825\uA826\uA8C4\uA8C5\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA951\uA980-\uA982\uA9B3\uA9B6-\uA9B9\uA9BC\uA9E5\uAA29-\uAA2E\uAA31\uAA32\uAA35\uAA36\uAA43\uAA4C\uAA7C\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEC\uAAED\uAAF6\uABE5\uABE8\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC01\uDC38-\uDC46\uDC7F-\uDC81\uDCB3-\uDCB6\uDCB9\uDCBA\uDD00-\uDD02\uDD27-\uDD2B\uDD2D-\uDD34\uDD73\uDD80\uDD81\uDDB6-\uDDBE\uDDCA-\uDDCC\uDE2F-\uDE31\uDE34\uDE36\uDE37\uDE3E\uDEDF\uDEE3-\uDEEA\uDF00\uDF01\uDF3C\uDF40\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC38-\uDC3F\uDC42-\uDC44\uDC46\uDCB3-\uDCB8\uDCBA\uDCBF\uDCC0\uDCC2\uDCC3\uDDB2-\uDDB5\uDDBC\uDDBD\uDDBF\uDDC0\uDDDC\uDDDD\uDE33-\uDE3A\uDE3D\uDE3F\uDE40\uDEAB\uDEAD\uDEB0-\uDEB5\uDEB7\uDF1D-\uDF1F\uDF22-\uDF25\uDF27-\uDF2B]|\uD807[\uDC30-\uDC36\uDC38-\uDC3D\uDC3F\uDC92-\uDCA7\uDCAA-\uDCB0\uDCB2\uDCB3\uDCB5\uDCB6]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD67-\uDD69\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A]|\uD83A[\uDCD0-\uDCD6\uDD44-\uDD4A]|\uDB40[\uDD00-\uDDEF]/,Mc:/[\u0903-\u0903]|[\u093E-\u0940]|[\u0949-\u094C]|[\u0982-\u0983]|[\u09BE-\u09C0]|[\u09C7-\u09C8]|[\u09CB-\u09CC]|[\u09D7-\u09D7]|[\u0A3E-\u0A40]|[\u0A83-\u0A83]|[\u0ABE-\u0AC0]|[\u0AC9-\u0AC9]|[\u0ACB-\u0ACC]|[\u0B02-\u0B03]|[\u0B3E-\u0B3E]|[\u0B40-\u0B40]|[\u0B47-\u0B48]|[\u0B4B-\u0B4C]|[\u0B57-\u0B57]|[\u0B83-\u0B83]|[\u0BBE-\u0BBF]|[\u0BC1-\u0BC2]|[\u0BC6-\u0BC8]|[\u0BCA-\u0BCC]|[\u0BD7-\u0BD7]|[\u0C01-\u0C03]|[\u0C41-\u0C44]|[\u0C82-\u0C83]|[\u0CBE-\u0CBE]|[\u0CC0-\u0CC4]|[\u0CC7-\u0CC8]|[\u0CCA-\u0CCB]|[\u0CD5-\u0CD6]|[\u0D02-\u0D03]|[\u0D3E-\u0D40]|[\u0D46-\u0D48]|[\u0D4A-\u0D4C]|[\u0D57-\u0D57]|[\u0F3E-\u0F3F]|[\u0F7F-\u0F7F]/,Pc:/[_\u203F\u2040\u2054\uFE33\uFE34\uFE4D-\uFE4F\uFF3F]/,Zs:/[ \xA0\u1680\u2000-\u200A\u202F\u205F\u3000]/,L:/[A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/,Ltmo:/[\u01C5\u01C8\u01CB\u01F2\u1F88-\u1F8F\u1F98-\u1F9F\u1FA8-\u1FAF\u1FBC\u1FCC\u1FFC]|[\u02B0-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0374\u037A\u0559\u0640\u06E5\u06E6\u07F4\u07F5\u07FA\u081A\u0824\u0828\u0971\u0E46\u0EC6\u10FC\u17D7\u1843\u1AA7\u1C78-\u1C7D\u1D2C-\u1D6A\u1D78\u1D9B-\u1DBF\u2071\u207F\u2090-\u209C\u2C7C\u2C7D\u2D6F\u2E2F\u3005\u3031-\u3035\u303B\u309D\u309E\u30FC-\u30FE\uA015\uA4F8-\uA4FD\uA60C\uA67F\uA69C\uA69D\uA717-\uA71F\uA770\uA788\uA7F8\uA7F9\uA9CF\uA9E6\uAA70\uAADD\uAAF3\uAAF4\uAB5C-\uAB5F\uFF70\uFF9E\uFF9F]|\uD81A[\uDF40-\uDF43]|\uD81B[\uDF93-\uDF9F\uDFE0]|[\xAA\xBA\u01BB\u01C0-\u01C3\u0294\u05D0-\u05EA\u05F0-\u05F2\u0620-\u063F\u0641-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u0800-\u0815\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0972-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E45\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10D0-\u10FA\u10FD-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17DC\u1820-\u1842\u1844-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C77\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u2135-\u2138\u2D30-\u2D67\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3006\u303C\u3041-\u3096\u309F\u30A1-\u30FA\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA014\uA016-\uA48C\uA4D0-\uA4F7\uA500-\uA60B\uA610-\uA61F\uA62A\uA62B\uA66E\uA6A0-\uA6E5\uA78F\uA7F7\uA7FB-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9E0-\uA9E4\uA9E7-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA6F\uAA71-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB\uAADC\uAAE0-\uAAEA\uAAF2\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF66-\uFF6F\uFF71-\uFF9D\uFFA0-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC50-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/};const bn=Bn,xn=G;class me{constructor(){if(this.constructor===me)throw new Error("PExpr cannot be instantiated -- it's abstract")}withSource(e){return e&&(this.source=e.trimmed()),this}}const vn=Object.create(me.prototype),Sn=Object.create(me.prototype);class Tn extends me{constructor(e){super(),this.obj=e}}class In extends me{constructor(e,r){super(),this.from=e,this.to=r,this.matchCodePoint=e.length>1||r.length>1}}class wn extends me{constructor(e){super(),this.index=e}}class Mt extends me{constructor(e){super(),this.terms=e}}class Ln extends Mt{constructor(e,r,u){const n=e.rules[r].body;super([u,n]),this.superGrammar=e,this.name=r,this.body=u}}class Pn extends Mt{constructor(e,r,u,n){const i=e.rules[r].body;super([...u,i,...n]),this.superGrammar=e,this.ruleName=r,this.expansionPos=u.length}}class Nn extends me{constructor(e){super(),this.factors=e}}class Dt extends me{constructor(e){super(),this.expr=e}}class Et extends Dt{}class gt extends Dt{}class Ct extends Dt{}Et.prototype.operator="*";gt.prototype.operator="+";Ct.prototype.operator="?";Et.prototype.minNumMatches=0;gt.prototype.minNumMatches=1;Ct.prototype.minNumMatches=0;Et.prototype.maxNumMatches=Number.POSITIVE_INFINITY;gt.prototype.maxNumMatches=Number.POSITIVE_INFINITY;Ct.prototype.maxNumMatches=1;class On extends me{constructor(e){super(),this.expr=e}}class kn extends me{constructor(e){super(),this.expr=e}}class Mn extends me{constructor(e){super(),this.expr=e}}class Rn extends me{constructor(e,r=[]){super(),this.ruleName=e,this.args=r}isSyntactic(){return xn.isSyntactic(this.ruleName)}toMemoKey(){return this._memoKey||Object.defineProperty(this,"_memoKey",{value:this.toString()}),this._memoKey}}class $n extends me{constructor(e){super(),this.category=e,this.pattern=bn[e]}}j.PExpr=me;j.any=vn;j.end=Sn;j.Terminal=Tn;j.Range=In;j.Param=wn;j.Alt=Mt;j.Extend=Ln;j.Splice=Pn;j.Seq=Nn;j.Iter=Dt;j.Star=Et;j.Plus=gt;j.Opt=Ct;j.Not=On;j.Lookahead=kn;j.Lex=Mn;j.Apply=Rn;j.UnicodeChar=$n;const Vn=G,_e=j;_e.PExpr.prototype.allowsSkippingPrecedingSpace=Vn.abstract("allowsSkippingPrecedingSpace");_e.any.allowsSkippingPrecedingSpace=_e.end.allowsSkippingPrecedingSpace=_e.Apply.prototype.allowsSkippingPrecedingSpace=_e.Terminal.prototype.allowsSkippingPrecedingSpace=_e.Range.prototype.allowsSkippingPrecedingSpace=_e.UnicodeChar.prototype.allowsSkippingPrecedingSpace=function(){return!0};_e.Alt.prototype.allowsSkippingPrecedingSpace=_e.Iter.prototype.allowsSkippingPrecedingSpace=_e.Lex.prototype.allowsSkippingPrecedingSpace=_e.Lookahead.prototype.allowsSkippingPrecedingSpace=_e.Not.prototype.allowsSkippingPrecedingSpace=_e.Param.prototype.allowsSkippingPrecedingSpace=_e.Seq.prototype.allowsSkippingPrecedingSpace=function(){return!1};function Be(){}Be.prototype=Object.create(null);Be.asNamespace=function(t){return t instanceof Be?t:Be.createNamespace(t)};Be.createNamespace=function(t){return Be.extend(Be.prototype,t)};Be.extend=function(t,e){if(t!==Be.prototype&&!(t instanceof Be))throw new TypeError("not a Namespace object: "+t);const r=Object.create(t,{constructor:{value:Be,enumerable:!1,writable:!0,configurable:!0}});return Object.assign(r,e)};Be.toString=function(t){return Object.prototype.toString.call(t)};var qr=Be;const{assert:jn}=G,qn=qr,Gn=j;function Y(t,e){let r;return e?(r=new Error(e.getLineAndColumnMessage()+t),r.shortMessage=t,r.interval=e):r=new Error(t),r}function Un(){return Y("Interval sources don't match")}function Hn(t){const e=new Error;return Object.defineProperty(e,"message",{enumerable:!0,get(){return t.message}}),Object.defineProperty(e,"shortMessage",{enumerable:!0,get(){return"Expected "+t.getExpectedText()}}),e.interval=t.getInterval(),e}function zn(t,e,r){const u=e?"Grammar "+t+" is not declared in namespace "+qn.toString(e):"Undeclared grammar "+t;return Y(u,r)}function Xn(t,e){return Y("Grammar "+t.name+" is already declared in this namespace")}function Kn(t,e,r){return Y("Rule "+t+" is not declared in grammar "+e,r)}function Wn(t,e,r){return Y("Cannot override rule "+t+" because it is not declared in "+e,r)}function Yn(t,e,r){return Y("Cannot extend rule "+t+" because it is not declared in "+e,r)}function Zn(t,e,r,u){let n="Duplicate declaration for rule '"+t+"' in grammar '"+e+"'";return e!==r&&(n+=" (originally declared in '"+r+"')"),Y(n,u)}function Jn(t,e,r,u){return Y("Wrong number of parameters for rule "+t+" (expected "+e+", got "+r+")",u)}function Qn(t,e,r,u){return Y("Wrong number of arguments for rule "+t+" (expected "+e+", got "+r+")",u)}function eu(t,e,r){return Y("Duplicate parameter names in rule "+t+": "+e.join(", "),r)}function tu(t,e){return Y("Invalid parameter to rule "+t+": "+e+" has arity "+e.getArity()+", but parameter expressions must have arity 1",e.source)}const ru="NOTE: A _syntactic rule_ is a rule whose name begins with a capital letter. See https://ohmjs.org/d/svl for more details.";function nu(t,e){return Y("Cannot apply syntactic rule "+t+" from here (inside a lexical context)",e.source)}function uu(t){const{ruleName:e}=t;return Y(`applySyntactic is for syntactic rules, but '${e}' is a lexical rule. `+ru,t.source)}function iu(t){return Y("applySyntactic is not required here (in a syntactic context)",t.source)}function au(t,e){return Y("Incorrect argument type: expected "+t,e.source)}function su(t){return Y("'...' can appear at most once in a rule body",t.source)}function ou(t){const e=t._node;jn(e&&e.isNonterminal()&&e.ctorName==="escapeChar_unicodeCodePoint");const r=t.children.slice(1,-1).map(n=>n.source),u=r[0].coverageWith(...r.slice(1));return Y(`U+${u.contents} is not a valid Unicode code point`,u)}function lu(t,e){const r=e.length>0?e[e.length-1].args:[];let n="Nullable expression "+t.expr.substituteParams(r)+" is not allowed inside '"+t.operator+"' (possible infinite loop)";if(e.length>0){const i=e.map(a=>new Gn.Apply(a.ruleName,a.args)).join(`
`);n+=`
Application stack (most recent application last):
`+i}return Y(n,t.expr.source)}function cu(t,e,r,u){return Y("Rule "+t+" involves an alternation which has inconsistent arity (expected "+e+", got "+r+")",u.source)}function pu(t){return Y("Object pattern has duplicate property names: "+t.join(", "))}function du(t,e,r){return Y("Attempt to invoke constructor "+e+" with invalid or unexpected arguments")}function mu(t){const e=t.map(r=>r.message);return Y(["Errors:"].concat(e).join(`
- `),t[0].interval)}function fu(t,e,r,u){let n=u.slice(0,-1).map(s=>{const c="  "+s[0].name+" > "+s[1];return s.length===3?c+" for '"+s[2]+"'":c}).join(`
`);n+=`
  `+e+" > "+t;let i="";t==="_iter"&&(i=[`
NOTE: as of Ohm v16, there is no default action for iteration nodes — see `,"  https://ohmjs.org/d/dsa for details."].join(`
`));const a=[`Missing semantic action for '${t}' in ${r} '${e}'.${i}`,"Action stack (most recent call last):",n].join(`
`),p=Y(a);return p.name="missingSemanticAction",p}var Le={applicationOfSyntacticRuleFromLexicalContext:nu,applySyntacticWithLexicalRuleApplication:uu,cannotExtendUndeclaredRule:Yn,cannotOverrideUndeclaredRule:Wn,duplicateGrammarDeclaration:Xn,duplicateParameterNames:eu,duplicatePropertyNames:pu,duplicateRuleDeclaration:Zn,inconsistentArity:cu,incorrectArgumentType:au,intervalSourcesDontMatch:Un,invalidCodePoint:ou,invalidConstructorCall:du,invalidParameter:tu,grammarSyntaxError:Hn,kleeneExprHasNullableOperand:lu,missingSemanticAction:fu,multipleSuperSplices:su,undeclaredGrammar:zn,undeclaredRule:Kn,unnecessaryExperimentalApplySyntactic:iu,wrongNumberOfArguments:Qn,wrongNumberOfParameters:Jn,throwErrors(t){if(t.length===1)throw t[0];if(t.length>1)throw mu(t)}},ke={};(function(t){const e=G;function r(a){let p=0;return a.map(c=>{const o=c.toString();return p=Math.max(p,o.length),o}).map(c=>e.padLeft(c,p))}function u(a,p,s){const c=a.length,o=a.slice(0,s),l=a.slice(s+p.length);return(o+p+l).substr(0,c)}function n(...a){const p=this,{offset:s}=p,{repeatStr:c}=e,o=new e.StringBuffer;o.append("Line "+p.lineNum+", col "+p.colNum+`:
`);const l=r([p.prevLine==null?0:p.lineNum-1,p.lineNum,p.nextLine==null?0:p.lineNum+1]),f=(y,b,k)=>{o.append(k+l[y]+" | "+b+`
`)};p.prevLine!=null&&f(0,p.prevLine,"  "),f(1,p.line,"> ");const h=p.line.length;let E=c(" ",h+1);for(let y=0;y<a.length;++y){let b=a[y][0],k=a[y][1];e.assert(b>=0&&b<=k,"range start must be >= 0 and <= end");const g=s-p.colNum+1;b=Math.max(0,b-g),k=Math.min(k-g,h),E=u(E,c("~",k-b),b)}const A=2+l[1].length+3;return o.append(c(" ",A)),E=u(E,"^",p.colNum-1),o.append(E.replace(/ +$/,"")+`
`),p.nextLine!=null&&f(2,p.nextLine,"  "),o.contents()}let i=[];t.awaitBuiltInRules=a=>{i.push(a)},t.announceBuiltInRules=a=>{i.forEach(p=>{p(a)}),i=null},t.getLineAndColumn=(a,p)=>{let s=1,c=1,o=0,l=0,f=null,h=null,E=-1;for(;o<p;){const b=a.charAt(o++);b===`
`?(s++,c=1,E=l,l=o):b!=="\r"&&c++}let A=a.indexOf(`
`,l);if(A===-1)A=a.length;else{const b=a.indexOf(`
`,A+1);f=b===-1?a.slice(A):a.slice(A,b),f=f.replace(/^\r?\n/,"").replace(/\r$/,"")}E>=0&&(h=a.slice(E,l).replace(/\r?\n$/,""));const y=a.slice(l,A).replace(/\r$/,"");return{offset:p,lineNum:s,colNum:c,line:y,prevLine:h,nextLine:f,toString:n}},t.getLineAndColumnMessage=function(a,p,...s){return t.getLineAndColumn(a,p).toString(...s)},t.uniqueId=(()=>{let a=0;return p=>""+p+a++})()})(ke);const{abstract:hu,isSyntactic:bt}=G,Pe=Le,oe=j,Du=ke;let et;Du.awaitBuiltInRules(t=>{et=t});let pt;oe.PExpr.prototype.assertAllApplicationsAreValid=function(t,e){pt=0,this._assertAllApplicationsAreValid(t,e)};oe.PExpr.prototype._assertAllApplicationsAreValid=hu("_assertAllApplicationsAreValid");oe.any._assertAllApplicationsAreValid=oe.end._assertAllApplicationsAreValid=oe.Terminal.prototype._assertAllApplicationsAreValid=oe.Range.prototype._assertAllApplicationsAreValid=oe.Param.prototype._assertAllApplicationsAreValid=oe.UnicodeChar.prototype._assertAllApplicationsAreValid=function(t,e){};oe.Lex.prototype._assertAllApplicationsAreValid=function(t,e){pt++,this.expr._assertAllApplicationsAreValid(t,e),pt--};oe.Alt.prototype._assertAllApplicationsAreValid=function(t,e){for(let r=0;r<this.terms.length;r++)this.terms[r]._assertAllApplicationsAreValid(t,e)};oe.Seq.prototype._assertAllApplicationsAreValid=function(t,e){for(let r=0;r<this.factors.length;r++)this.factors[r]._assertAllApplicationsAreValid(t,e)};oe.Iter.prototype._assertAllApplicationsAreValid=oe.Not.prototype._assertAllApplicationsAreValid=oe.Lookahead.prototype._assertAllApplicationsAreValid=function(t,e){this.expr._assertAllApplicationsAreValid(t,e)};oe.Apply.prototype._assertAllApplicationsAreValid=function(t,e,r=!1){const u=e.rules[this.ruleName],n=bt(t)&&pt===0;if(!u)throw Pe.undeclaredRule(this.ruleName,e.name,this.source);if(!r&&bt(this.ruleName)&&!n)throw Pe.applicationOfSyntacticRuleFromLexicalContext(this.ruleName,this);const i=this.args.length,a=u.formals.length;if(i!==a)throw Pe.wrongNumberOfArguments(this.ruleName,a,i,this.source);const p=et&&u===et.rules.applySyntactic;if(et&&u===et.rules.caseInsensitive&&!(this.args[0]instanceof oe.Terminal))throw Pe.incorrectArgumentType('a Terminal (e.g. "abc")',this.args[0]);if(p){const c=this.args[0];if(!(c instanceof oe.Apply))throw Pe.incorrectArgumentType("a syntactic rule application",c);if(!bt(c.ruleName))throw Pe.applySyntacticWithLexicalRuleApplication(c);if(n)throw Pe.unnecessaryExperimentalApplySyntactic(this)}this.args.forEach(c=>{if(c._assertAllApplicationsAreValid(t,e,p),c.getArity()!==1)throw Pe.invalidParameter(this.ruleName,c)})};const Eu=G,Gr=Le,he=j;he.PExpr.prototype.assertChoicesHaveUniformArity=Eu.abstract("assertChoicesHaveUniformArity");he.any.assertChoicesHaveUniformArity=he.end.assertChoicesHaveUniformArity=he.Terminal.prototype.assertChoicesHaveUniformArity=he.Range.prototype.assertChoicesHaveUniformArity=he.Param.prototype.assertChoicesHaveUniformArity=he.Lex.prototype.assertChoicesHaveUniformArity=he.UnicodeChar.prototype.assertChoicesHaveUniformArity=function(t){};he.Alt.prototype.assertChoicesHaveUniformArity=function(t){if(this.terms.length===0)return;const e=this.terms[0].getArity();for(let r=0;r<this.terms.length;r++){const u=this.terms[r];u.assertChoicesHaveUniformArity();const n=u.getArity();if(e!==n)throw Gr.inconsistentArity(t,e,n,u)}};he.Extend.prototype.assertChoicesHaveUniformArity=function(t){const e=this.terms[0].getArity(),r=this.terms[1].getArity();if(e!==r)throw Gr.inconsistentArity(t,r,e,this.terms[0])};he.Seq.prototype.assertChoicesHaveUniformArity=function(t){for(let e=0;e<this.factors.length;e++)this.factors[e].assertChoicesHaveUniformArity(t)};he.Iter.prototype.assertChoicesHaveUniformArity=function(t){this.expr.assertChoicesHaveUniformArity(t)};he.Not.prototype.assertChoicesHaveUniformArity=function(t){};he.Lookahead.prototype.assertChoicesHaveUniformArity=function(t){this.expr.assertChoicesHaveUniformArity(t)};he.Apply.prototype.assertChoicesHaveUniformArity=function(t){};const gu=G,Cu=Le,De=j;De.PExpr.prototype.assertIteratedExprsAreNotNullable=gu.abstract("assertIteratedExprsAreNotNullable");De.any.assertIteratedExprsAreNotNullable=De.end.assertIteratedExprsAreNotNullable=De.Terminal.prototype.assertIteratedExprsAreNotNullable=De.Range.prototype.assertIteratedExprsAreNotNullable=De.Param.prototype.assertIteratedExprsAreNotNullable=De.UnicodeChar.prototype.assertIteratedExprsAreNotNullable=function(t){};De.Alt.prototype.assertIteratedExprsAreNotNullable=function(t){for(let e=0;e<this.terms.length;e++)this.terms[e].assertIteratedExprsAreNotNullable(t)};De.Seq.prototype.assertIteratedExprsAreNotNullable=function(t){for(let e=0;e<this.factors.length;e++)this.factors[e].assertIteratedExprsAreNotNullable(t)};De.Iter.prototype.assertIteratedExprsAreNotNullable=function(t){if(this.expr.assertIteratedExprsAreNotNullable(t),this.expr.isNullable(t))throw Cu.kleeneExprHasNullableOperand(this,[])};De.Opt.prototype.assertIteratedExprsAreNotNullable=De.Not.prototype.assertIteratedExprsAreNotNullable=De.Lookahead.prototype.assertIteratedExprsAreNotNullable=De.Lex.prototype.assertIteratedExprsAreNotNullable=function(t){this.expr.assertIteratedExprsAreNotNullable(t)};De.Apply.prototype.assertIteratedExprsAreNotNullable=function(t){this.args.forEach(e=>{e.assertIteratedExprsAreNotNullable(t)})};const{assert:Au}=G,Tt=Le,rr=ke;function fe(t,e,r){this.sourceString=t,this.startIdx=e,this.endIdx=r}fe.coverage=function(t,...e){let{startIdx:r,endIdx:u}=t;for(const n of e){if(n.sourceString!==t.sourceString)throw Tt.intervalSourcesDontMatch();r=Math.min(r,n.startIdx),u=Math.max(u,n.endIdx)}return new fe(t.sourceString,r,u)};fe.prototype={coverageWith(...t){return fe.coverage(...t,this)},collapsedLeft(){return new fe(this.sourceString,this.startIdx,this.startIdx)},collapsedRight(){return new fe(this.sourceString,this.endIdx,this.endIdx)},getLineAndColumn(){return rr.getLineAndColumn(this.sourceString,this.startIdx)},getLineAndColumnMessage(){const t=[this.startIdx,this.endIdx];return rr.getLineAndColumnMessage(this.sourceString,this.startIdx,t)},minus(t){if(this.sourceString!==t.sourceString)throw Tt.intervalSourcesDontMatch();return this.startIdx===t.startIdx&&this.endIdx===t.endIdx?[]:this.startIdx<t.startIdx&&t.endIdx<this.endIdx?[new fe(this.sourceString,this.startIdx,t.startIdx),new fe(this.sourceString,t.endIdx,this.endIdx)]:this.startIdx<t.endIdx&&t.endIdx<this.endIdx?[new fe(this.sourceString,t.endIdx,this.endIdx)]:this.startIdx<t.startIdx&&t.startIdx<this.endIdx?[new fe(this.sourceString,this.startIdx,t.startIdx)]:[this]},relativeTo(t){if(this.sourceString!==t.sourceString)throw Tt.intervalSourcesDontMatch();return Au(this.startIdx>=t.startIdx&&this.endIdx<=t.endIdx,"other interval does not cover this one"),new fe(this.sourceString,this.startIdx-t.startIdx,this.endIdx-t.startIdx)},trimmed(){const{contents:t}=this,e=this.startIdx+t.match(/^\s*/)[0].length,r=this.endIdx-t.match(/\s*$/)[0].length;return new fe(this.sourceString,e,r)},subInterval(t,e){const r=this.startIdx+t;return new fe(this.sourceString,r,r+e)}};Object.defineProperties(fe.prototype,{contents:{get(){return this._contents===void 0&&(this._contents=this.sourceString.slice(this.startIdx,this.endIdx)),this._contents},enumerable:!0},length:{get(){return this.endIdx-this.startIdx},enumerable:!0}});var Rt=fe;const _u=Rt,$t=G,Fu="✗",yu="✓",Bu="⋅",bu="⇒",xu="␉",vu="␊",Su="␍",It={succeeded:1,isRootNode:2,isImplicitSpaces:4,isMemoized:8,isHeadOfLeftRecursion:16,terminatesLR:32};function Tu(t){return $t.repeat(" ",t).join("")}function Iu(t,e,r){const u=Ur(t.slice(e,e+r));return u.length<r?u+$t.repeat(" ",r-u.length).join(""):u}function Ur(t){return typeof t=="string"?t.replace(/ /g,Bu).replace(/\t/g,xu).replace(/\n/g,vu).replace(/\r/g,Su):String(t)}function ve(t,e,r,u,n,i,a){this.input=t,this.pos=this.pos1=e,this.pos2=r,this.source=new _u(t,e,r),this.expr=u,this.bindings=i,this.children=a||[],this.terminatingLREntry=null,this._flags=n?It.succeeded:0}ve.prototype.SKIP={};Object.defineProperty(ve.prototype,"displayString",{get(){return this.expr.toDisplayString()}});Object.keys(It).forEach(t=>{const e=It[t];Object.defineProperty(ve.prototype,t,{get(){return(this._flags&e)!==0},set(r){r?this._flags|=e:this._flags&=~e}})});ve.prototype.clone=function(){return this.cloneWithExpr(this.expr)};ve.prototype.cloneWithExpr=function(t){const e=new ve(this.input,this.pos,this.pos2,t,this.succeeded,this.bindings,this.children);return e.isHeadOfLeftRecursion=this.isHeadOfLeftRecursion,e.isImplicitSpaces=this.isImplicitSpaces,e.isMemoized=this.isMemoized,e.isRootNode=this.isRootNode,e.terminatesLR=this.terminatesLR,e.terminatingLREntry=this.terminatingLREntry,e};ve.prototype.recordLRTermination=function(t,e){this.terminatingLREntry=new ve(this.input,this.pos,this.pos2,this.expr,!1,[e],[t]),this.terminatingLREntry.terminatesLR=!0};ve.prototype.walk=function(t,e){let r=t;typeof r=="function"&&(r={enter:r});function u(n,i,a){let p=!0;r.enter&&r.enter.call(e,n,i,a)===ve.prototype.SKIP&&(p=!1),p&&(n.children.forEach(s=>{u(s,n,a+1)}),r.exit&&r.exit.call(e,n,i,a))}this.isRootNode?this.children.forEach(n=>{u(n,null,0)}):u(this,null,0)};ve.prototype.toString=function(){const t=new $t.StringBuffer;return this.walk((e,r,u)=>{if(!e)return this.SKIP;if(e.expr.constructor.name!=="Alt"){if(t.append(Iu(e.input,e.pos,10)+Tu(u*2+1)),t.append((e.succeeded?yu:Fu)+" "+e.displayString),e.isHeadOfLeftRecursion&&t.append(" (LR)"),e.succeeded){const i=Ur(e.source.contents);t.append(" "+bu+"  "),t.append(typeof i=="string"?'"'+i+'"':i)}t.append(`
`)}}),t.contents()};var Hr=ve;const wu=Hr,zr=G,Lu=Le,Vt=kt,ie=j,{TerminalNode:ut}=Vt,{NonterminalNode:Pu}=Vt,{IterationNode:Nu}=Vt;ie.PExpr.prototype.eval=zr.abstract("eval");ie.any.eval=function(t){const{inputStream:e}=t,r=e.pos,u=e.next();return u?(t.pushBinding(new ut(u.length),r),!0):(t.processFailure(r,this),!1)};ie.end.eval=function(t){const{inputStream:e}=t,r=e.pos;return e.atEnd()?(t.pushBinding(new ut(0),r),!0):(t.processFailure(r,this),!1)};ie.Terminal.prototype.eval=function(t){const{inputStream:e}=t,r=e.pos;return e.matchString(this.obj)?(t.pushBinding(new ut(this.obj.length),r),!0):(t.processFailure(r,this),!1)};ie.Range.prototype.eval=function(t){const{inputStream:e}=t,r=e.pos,u=this.matchCodePoint?e.nextCodePoint():e.nextCharCode();return u!==void 0&&this.from.codePointAt(0)<=u&&u<=this.to.codePointAt(0)?(t.pushBinding(new ut(String.fromCodePoint(u).length),r),!0):(t.processFailure(r,this),!1)};ie.Param.prototype.eval=function(t){return t.eval(t.currentApplication().args[this.index])};ie.Lex.prototype.eval=function(t){t.enterLexifiedContext();const e=t.eval(this.expr);return t.exitLexifiedContext(),e};ie.Alt.prototype.eval=function(t){for(let e=0;e<this.terms.length;e++)if(t.eval(this.terms[e]))return!0;return!1};ie.Seq.prototype.eval=function(t){for(let e=0;e<this.factors.length;e++){const r=this.factors[e];if(!t.eval(r))return!1}return!0};ie.Iter.prototype.eval=function(t){const{inputStream:e}=t,r=e.pos,u=this.getArity(),n=[],i=[];for(;n.length<u;)n.push([]),i.push([]);let a=0,p=r,s;for(;a<this.maxNumMatches&&t.eval(this.expr);){if(e.pos===p)throw Lu.kleeneExprHasNullableOperand(this,t._applicationStack);p=e.pos,a++;const f=t._bindings.splice(t._bindings.length-u,u),h=t._bindingOffsets.splice(t._bindingOffsets.length-u,u);for(s=0;s<f.length;s++)n[s].push(f[s]),i[s].push(h[s])}if(a<this.minNumMatches)return!1;let c=t.posToOffset(r),o=0;if(a>0){const f=n[u-1],h=i[u-1],E=h[h.length-1]+f[f.length-1].matchLength;c=i[0][0],o=E-c}const l=this instanceof ie.Opt;for(s=0;s<n.length;s++)t._bindings.push(new Nu(n[s],i[s],o,l)),t._bindingOffsets.push(c);return!0};ie.Not.prototype.eval=function(t){const{inputStream:e}=t,r=e.pos;t.pushFailuresInfo();const u=t.eval(this.expr);return t.popFailuresInfo(),u?(t.processFailure(r,this),!1):(e.pos=r,!0)};ie.Lookahead.prototype.eval=function(t){const{inputStream:e}=t,r=e.pos;return t.eval(this.expr)?(e.pos=r,!0):!1};ie.Apply.prototype.eval=function(t){const e=t.currentApplication(),r=e?e.args:[],u=this.substituteParams(r),n=t.getCurrentPosInfo();if(n.isActive(u))return u.handleCycle(t);const i=u.toMemoKey(),a=n.memo[i];if(a&&n.shouldUseMemoizedResult(a)){if(t.hasNecessaryInfo(a))return t.useMemoizedResult(t.inputStream.pos,a);delete n.memo[i]}return u.reallyEval(t)};ie.Apply.prototype.handleCycle=function(t){const e=t.getCurrentPosInfo(),{currentLeftRecursion:r}=e,u=this.toMemoKey();let n=e.memo[u];return r&&r.headApplication.toMemoKey()===u?n.updateInvolvedApplicationMemoKeys():n||(n=e.memoize(u,{matchLength:0,examinedLength:0,value:!1,rightmostFailureOffset:-1}),e.startLeftRecursion(this,n)),t.useMemoizedResult(t.inputStream.pos,n)};ie.Apply.prototype.reallyEval=function(t){const{inputStream:e}=t,r=e.pos,u=t.getCurrentPosInfo(),n=t.grammar.rules[this.ruleName],{body:i}=n,{description:a}=n;t.enterApplication(u,this),a&&t.pushFailuresInfo();const p=e.examinedLength;e.examinedLength=0;let s=this.evalOnce(i,t);const c=u.currentLeftRecursion,o=this.toMemoKey(),l=c&&c.headApplication.toMemoKey()===o;let f;l?(s=this.growSeedResult(i,t,r,c,s),u.endLeftRecursion(),f=c,f.examinedLength=e.examinedLength-r,f.rightmostFailureOffset=t._getRightmostFailureOffset(),u.memoize(o,f)):(!c||!c.isInvolved(o))&&(f=u.memoize(o,{matchLength:e.pos-r,examinedLength:e.examinedLength-r,value:s,failuresAtRightmostPosition:t.cloneRecordedFailures(),rightmostFailureOffset:t._getRightmostFailureOffset()}));const h=!!s;if(a&&(t.popFailuresInfo(),h||t.processFailure(r,this),f&&(f.failuresAtRightmostPosition=t.cloneRecordedFailures())),t.isTracing()&&f){const E=t.getTraceEntry(r,this,h,h?[s]:[]);l&&(zr.assert(E.terminatingLREntry!=null||!h),E.isHeadOfLeftRecursion=!0),f.traceEntry=E}return e.examinedLength=Math.max(e.examinedLength,p),t.exitApplication(u,s),h};ie.Apply.prototype.evalOnce=function(t,e){const{inputStream:r}=e,u=r.pos;if(e.eval(t)){const n=t.getArity(),i=e._bindings.splice(e._bindings.length-n,n),a=e._bindingOffsets.splice(e._bindingOffsets.length-n,n),p=r.pos-u;return new Pu(this.ruleName,i,a,p)}else return!1};ie.Apply.prototype.growSeedResult=function(t,e,r,u,n){if(!n)return!1;const{inputStream:i}=e;for(;;){if(u.matchLength=i.pos-r,u.value=n,u.failuresAtRightmostPosition=e.cloneRecordedFailures(),e.isTracing()){const a=e.trace[e.trace.length-1];u.traceEntry=new wu(e.input,r,i.pos,this,!0,[n],[a.clone()])}if(i.pos=r,n=this.evalOnce(t,e),i.pos-r<=u.matchLength)break;e.isTracing()&&e.trace.splice(-2,1)}return e.isTracing()&&u.traceEntry.recordLRTermination(e.trace.pop(),n),i.pos=r+u.matchLength,u.value};ie.UnicodeChar.prototype.eval=function(t){const{inputStream:e}=t,r=e.pos,u=e.next();return u&&this.pattern.test(u)?(t.pushBinding(new ut(u.length),r),!0):(t.processFailure(r,this),!1)};const Ou=G,Fe=j;Fe.PExpr.prototype.getArity=Ou.abstract("getArity");Fe.any.getArity=Fe.end.getArity=Fe.Terminal.prototype.getArity=Fe.Range.prototype.getArity=Fe.Param.prototype.getArity=Fe.Apply.prototype.getArity=Fe.UnicodeChar.prototype.getArity=function(){return 1};Fe.Alt.prototype.getArity=function(){return this.terms.length===0?0:this.terms[0].getArity()};Fe.Seq.prototype.getArity=function(){let t=0;for(let e=0;e<this.factors.length;e++)t+=this.factors[e].getArity();return t};Fe.Iter.prototype.getArity=function(){return this.expr.getArity()};Fe.Not.prototype.getArity=function(){return 0};Fe.Lookahead.prototype.getArity=Fe.Lex.prototype.getArity=function(){return this.expr.getArity()};const ku=G,ae=j;function Te(t,e){const r={};if(t.source&&e){const u=t.source.relativeTo(e);r.sourceInterval=[u.startIdx,u.endIdx]}return r}ae.PExpr.prototype.outputRecipe=ku.abstract("outputRecipe");ae.any.outputRecipe=function(t,e){return["any",Te(this,e)]};ae.end.outputRecipe=function(t,e){return["end",Te(this,e)]};ae.Terminal.prototype.outputRecipe=function(t,e){return["terminal",Te(this,e),this.obj]};ae.Range.prototype.outputRecipe=function(t,e){return["range",Te(this,e),this.from,this.to]};ae.Param.prototype.outputRecipe=function(t,e){return["param",Te(this,e),this.index]};ae.Alt.prototype.outputRecipe=function(t,e){return["alt",Te(this,e)].concat(this.terms.map(r=>r.outputRecipe(t,e)))};ae.Extend.prototype.outputRecipe=function(t,e){return this.terms[0].outputRecipe(t,e)};ae.Splice.prototype.outputRecipe=function(t,e){const r=this.terms.slice(0,this.expansionPos),u=this.terms.slice(this.expansionPos+1);return["splice",Te(this,e),r.map(n=>n.outputRecipe(t,e)),u.map(n=>n.outputRecipe(t,e))]};ae.Seq.prototype.outputRecipe=function(t,e){return["seq",Te(this,e)].concat(this.factors.map(r=>r.outputRecipe(t,e)))};ae.Star.prototype.outputRecipe=ae.Plus.prototype.outputRecipe=ae.Opt.prototype.outputRecipe=ae.Not.prototype.outputRecipe=ae.Lookahead.prototype.outputRecipe=ae.Lex.prototype.outputRecipe=function(t,e){return[this.constructor.name.toLowerCase(),Te(this,e),this.expr.outputRecipe(t,e)]};ae.Apply.prototype.outputRecipe=function(t,e){return["app",Te(this,e),this.ruleName,this.args.map(r=>r.outputRecipe(t,e))]};ae.UnicodeChar.prototype.outputRecipe=function(t,e){return["unicodeChar",Te(this,e),this.category]};const Mu=G,Ee=j;Ee.PExpr.prototype.introduceParams=Mu.abstract("introduceParams");Ee.any.introduceParams=Ee.end.introduceParams=Ee.Terminal.prototype.introduceParams=Ee.Range.prototype.introduceParams=Ee.Param.prototype.introduceParams=Ee.UnicodeChar.prototype.introduceParams=function(t){return this};Ee.Alt.prototype.introduceParams=function(t){return this.terms.forEach((e,r,u)=>{u[r]=e.introduceParams(t)}),this};Ee.Seq.prototype.introduceParams=function(t){return this.factors.forEach((e,r,u)=>{u[r]=e.introduceParams(t)}),this};Ee.Iter.prototype.introduceParams=Ee.Not.prototype.introduceParams=Ee.Lookahead.prototype.introduceParams=Ee.Lex.prototype.introduceParams=function(t){return this.expr=this.expr.introduceParams(t),this};Ee.Apply.prototype.introduceParams=function(t){const e=t.indexOf(this.ruleName);if(e>=0){if(this.args.length>0)throw new Error("Parameterized rules cannot be passed as arguments to another rule.");return new Ee.Param(e).withSource(this.source)}else return this.args.forEach((r,u,n)=>{n[u]=r.introduceParams(t)}),this};const Ru=G,le=j;le.PExpr.prototype.isNullable=function(t){return this._isNullable(t,Object.create(null))};le.PExpr.prototype._isNullable=Ru.abstract("_isNullable");le.any._isNullable=le.Range.prototype._isNullable=le.Param.prototype._isNullable=le.Plus.prototype._isNullable=le.UnicodeChar.prototype._isNullable=function(t,e){return!1};le.end._isNullable=function(t,e){return!0};le.Terminal.prototype._isNullable=function(t,e){return typeof this.obj=="string"?this.obj==="":!1};le.Alt.prototype._isNullable=function(t,e){return this.terms.length===0||this.terms.some(r=>r._isNullable(t,e))};le.Seq.prototype._isNullable=function(t,e){return this.factors.every(r=>r._isNullable(t,e))};le.Star.prototype._isNullable=le.Opt.prototype._isNullable=le.Not.prototype._isNullable=le.Lookahead.prototype._isNullable=function(t,e){return!0};le.Lex.prototype._isNullable=function(t,e){return this.expr._isNullable(t,e)};le.Apply.prototype._isNullable=function(t,e){const r=this.toMemoKey();if(!Object.prototype.hasOwnProperty.call(e,r)){const{body:u}=t.rules[this.ruleName],n=u.substituteParams(this.args);e[r]=!1,e[r]=n._isNullable(t,e)}return e[r]};const $u=G,ce=j;ce.PExpr.prototype.substituteParams=$u.abstract("substituteParams");ce.any.substituteParams=ce.end.substituteParams=ce.Terminal.prototype.substituteParams=ce.Range.prototype.substituteParams=ce.UnicodeChar.prototype.substituteParams=function(t){return this};ce.Param.prototype.substituteParams=function(t){return t[this.index]};ce.Alt.prototype.substituteParams=function(t){return new ce.Alt(this.terms.map(e=>e.substituteParams(t)))};ce.Seq.prototype.substituteParams=function(t){return new ce.Seq(this.factors.map(e=>e.substituteParams(t)))};ce.Iter.prototype.substituteParams=ce.Not.prototype.substituteParams=ce.Lookahead.prototype.substituteParams=ce.Lex.prototype.substituteParams=function(t){return new this.constructor(this.expr.substituteParams(t))};ce.Apply.prototype.substituteParams=function(t){if(this.args.length===0)return this;{const e=this.args.map(r=>r.substituteParams(t));return new ce.Apply(this.ruleName,e)}};const Xr=G,Ce=j,{copyWithoutDuplicates:Vu}=Xr;function nr(t){return/^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(t)}function jt(t){const e=Object.create(null);t.forEach(r=>{e[r]=(e[r]||0)+1}),Object.keys(e).forEach(r=>{if(e[r]<=1)return;let u=1;t.forEach((n,i)=>{n===r&&(t[i]=n+"_"+u++)})})}Ce.PExpr.prototype.toArgumentNameList=Xr.abstract("toArgumentNameList");Ce.any.toArgumentNameList=function(t,e){return["any"]};Ce.end.toArgumentNameList=function(t,e){return["end"]};Ce.Terminal.prototype.toArgumentNameList=function(t,e){return typeof this.obj=="string"&&/^[_a-zA-Z0-9]+$/.test(this.obj)?["_"+this.obj]:["$"+t]};Ce.Range.prototype.toArgumentNameList=function(t,e){let r=this.from+"_to_"+this.to;return nr(r)||(r="_"+r),nr(r)||(r="$"+t),[r]};Ce.Alt.prototype.toArgumentNameList=function(t,e){const r=this.terms.map(i=>i.toArgumentNameList(t,!0)),u=[],n=r[0].length;for(let i=0;i<n;i++){const a=[];for(let s=0;s<this.terms.length;s++)a.push(r[s][i]);const p=Vu(a);u.push(p.join("_or_"))}return e||jt(u),u};Ce.Seq.prototype.toArgumentNameList=function(t,e){let r=[];return this.factors.forEach(u=>{const n=u.toArgumentNameList(t,!0);r=r.concat(n),t+=n.length}),e||jt(r),r};Ce.Iter.prototype.toArgumentNameList=function(t,e){const r=this.expr.toArgumentNameList(t,e).map(u=>u[u.length-1]==="s"?u+"es":u+"s");return e||jt(r),r};Ce.Opt.prototype.toArgumentNameList=function(t,e){return this.expr.toArgumentNameList(t,e).map(r=>"opt"+r[0].toUpperCase()+r.slice(1))};Ce.Not.prototype.toArgumentNameList=function(t,e){return[]};Ce.Lookahead.prototype.toArgumentNameList=Ce.Lex.prototype.toArgumentNameList=function(t,e){return this.expr.toArgumentNameList(t,e)};Ce.Apply.prototype.toArgumentNameList=function(t,e){return[this.ruleName]};Ce.UnicodeChar.prototype.toArgumentNameList=function(t,e){return["$"+t]};Ce.Param.prototype.toArgumentNameList=function(t,e){return["param"+this.index]};const ju=G,Ae=j;Ae.PExpr.prototype.toDisplayString=ju.abstract("toDisplayString");Ae.Alt.prototype.toDisplayString=Ae.Seq.prototype.toDisplayString=function(){return this.source?this.source.trimmed().contents:"["+this.constructor.name+"]"};Ae.any.toDisplayString=Ae.end.toDisplayString=Ae.Iter.prototype.toDisplayString=Ae.Not.prototype.toDisplayString=Ae.Lookahead.prototype.toDisplayString=Ae.Lex.prototype.toDisplayString=Ae.Terminal.prototype.toDisplayString=Ae.Range.prototype.toDisplayString=Ae.Param.prototype.toDisplayString=function(){return this.toString()};Ae.Apply.prototype.toDisplayString=function(){if(this.args.length>0){const t=this.args.map(e=>e.toDisplayString());return this.ruleName+"<"+t.join(",")+">"}else return this.ruleName};Ae.UnicodeChar.prototype.toDisplayString=function(){return"Unicode ["+this.category+"] character"};const we=jr,qu=G,be=j;be.PExpr.prototype.toFailure=qu.abstract("toFailure");be.any.toFailure=function(t){return new we(this,"any object","description")};be.end.toFailure=function(t){return new we(this,"end of input","description")};be.Terminal.prototype.toFailure=function(t){return new we(this,this.obj,"string")};be.Range.prototype.toFailure=function(t){return new we(this,JSON.stringify(this.from)+".."+JSON.stringify(this.to),"code")};be.Not.prototype.toFailure=function(t){const e=this.expr===be.any?"nothing":"not "+this.expr.toFailure(t);return new we(this,e,"description")};be.Lookahead.prototype.toFailure=function(t){return this.expr.toFailure(t)};be.Apply.prototype.toFailure=function(t){let{description:e}=t.rules[this.ruleName];return e||(e=(/^[aeiouAEIOU]/.test(this.ruleName)?"an":"a")+" "+this.ruleName),new we(this,e,"description")};be.UnicodeChar.prototype.toFailure=function(t){return new we(this,"a Unicode ["+this.category+"] character","description")};be.Alt.prototype.toFailure=function(t){const r="("+this.terms.map(u=>u.toFailure(t)).join(" or ")+")";return new we(this,r,"description")};be.Seq.prototype.toFailure=function(t){const r="("+this.factors.map(u=>u.toFailure(t)).join(" ")+")";return new we(this,r,"description")};be.Iter.prototype.toFailure=function(t){const e="("+this.expr.toFailure(t)+this.operator+")";return new we(this,e,"description")};const Gu=G,ye=j;ye.PExpr.prototype.toString=Gu.abstract("toString");ye.any.toString=function(){return"any"};ye.end.toString=function(){return"end"};ye.Terminal.prototype.toString=function(){return JSON.stringify(this.obj)};ye.Range.prototype.toString=function(){return JSON.stringify(this.from)+".."+JSON.stringify(this.to)};ye.Param.prototype.toString=function(){return"$"+this.index};ye.Lex.prototype.toString=function(){return"#("+this.expr.toString()+")"};ye.Alt.prototype.toString=function(){return this.terms.length===1?this.terms[0].toString():"("+this.terms.map(t=>t.toString()).join(" | ")+")"};ye.Seq.prototype.toString=function(){return this.factors.length===1?this.factors[0].toString():"("+this.factors.map(t=>t.toString()).join(" ")+")"};ye.Iter.prototype.toString=function(){return this.expr+this.operator};ye.Not.prototype.toString=function(){return"~"+this.expr};ye.Lookahead.prototype.toString=function(){return"&"+this.expr};ye.Apply.prototype.toString=function(){if(this.args.length>0){const t=this.args.map(e=>e.toString());return this.ruleName+"<"+t.join(",")+">"}else return this.ruleName};ye.UnicodeChar.prototype.toString=function(){return"\\p{"+this.category+"}"};var ze=j;const Uu=jr,{TerminalNode:Hu}=kt,{assert:zu}=G,{PExpr:Xu,Terminal:Ku}=ze;class qt extends Xu{constructor(e){super(),this.obj=e}_getString(e){const r=e.currentApplication().args[this.obj.index];return zu(r instanceof Ku,"expected a Terminal expression"),r.obj}allowsSkippingPrecedingSpace(){return!0}eval(e){const{inputStream:r}=e,u=r.pos,n=this._getString(e);return r.matchString(n,!0)?(e.pushBinding(new Hu(n.length),u),!0):(e.processFailure(u,this),!1)}getArity(){return 1}substituteParams(e){return new qt(this.obj.substituteParams(e))}toDisplayString(){return this.obj.toDisplayString()+" (case-insensitive)"}toFailure(e){return new Uu(this,this.obj.toFailure(e)+" (case-insensitive)","description")}_isNullable(e,r){return this.obj._isNullable(e,r)}}var Wu=qt;const Yu=Rt;function Kr(t){this.source=t,this.pos=0,this.examinedLength=0}Kr.prototype={atEnd(){const t=this.pos===this.source.length;return this.examinedLength=Math.max(this.examinedLength,this.pos+1),t},next(){const t=this.source[this.pos++];return this.examinedLength=Math.max(this.examinedLength,this.pos),t},nextCharCode(){const t=this.next();return t&&t.charCodeAt(0)},nextCodePoint(){const t=this.source.slice(this.pos++).codePointAt(0);return t>65535&&(this.pos+=1),this.examinedLength=Math.max(this.examinedLength,this.pos),t},matchString(t,e){let r;if(e){for(r=0;r<t.length;r++){const u=this.next(),n=t[r];if(u==null||u.toUpperCase()!==n.toUpperCase())return!1}return!0}for(r=0;r<t.length;r++)if(this.next()!==t[r])return!1;return!0},sourceSlice(t,e){return this.source.slice(t,e)},interval(t,e){return new Yu(this.source,t,e||this.pos)}};var Gt=Kr;const wt=G,ur=ke,Zu=Rt;function Me(t,e,r,u,n,i,a){this.matcher=t,this.input=e,this.startExpr=r,this._cst=u,this._cstOffset=n,this._rightmostFailurePosition=i,this._rightmostFailures=a,this.failed()&&(wt.defineLazyProperty(this,"message",function(){const p="Expected "+this.getExpectedText();return ur.getLineAndColumnMessage(this.input,this.getRightmostFailurePosition())+p}),wt.defineLazyProperty(this,"shortMessage",function(){const p="expected "+this.getExpectedText(),s=ur.getLineAndColumn(this.input,this.getRightmostFailurePosition());return"Line "+s.lineNum+", col "+s.colNum+": "+p}))}Me.prototype.succeeded=function(){return!!this._cst};Me.prototype.failed=function(){return!this.succeeded()};Me.prototype.getRightmostFailurePosition=function(){return this._rightmostFailurePosition};Me.prototype.getRightmostFailures=function(){if(!this._rightmostFailures){this.matcher.setInput(this.input);const t=this.matcher._match(this.startExpr,!1,this.getRightmostFailurePosition());this._rightmostFailures=t.getRightmostFailures()}return this._rightmostFailures};Me.prototype.toString=function(){return this.succeeded()?"[match succeeded]":"[match failed at position "+this.getRightmostFailurePosition()+"]"};Me.prototype.getExpectedText=function(){if(this.succeeded())throw new Error("cannot get expected text of a successful MatchResult");const t=new wt.StringBuffer;let e=this.getRightmostFailures();e=e.filter(r=>!r.isFluffy());for(let r=0;r<e.length;r++)r>0&&(r===e.length-1?t.append(e.length>2?", or ":" or "):t.append(", ")),t.append(e[r].toString());return t.contents()};Me.prototype.getInterval=function(){const t=this.getRightmostFailurePosition();return new Zu(this.input,t,t)};var Wr=Me;function Yr(){this.applicationMemoKeyStack=[],this.memo={},this.maxExaminedLength=0,this.maxRightmostFailureOffset=-1,this.currentLeftRecursion=void 0}Yr.prototype={isActive(t){return this.applicationMemoKeyStack.indexOf(t.toMemoKey())>=0},enter(t){this.applicationMemoKeyStack.push(t.toMemoKey())},exit(){this.applicationMemoKeyStack.pop()},startLeftRecursion(t,e){e.isLeftRecursion=!0,e.headApplication=t,e.nextLeftRecursion=this.currentLeftRecursion,this.currentLeftRecursion=e;const{applicationMemoKeyStack:r}=this,u=r.indexOf(t.toMemoKey())+1,n=r.slice(u);e.isInvolved=function(i){return n.indexOf(i)>=0},e.updateInvolvedApplicationMemoKeys=function(){for(let i=u;i<r.length;i++){const a=r[i];this.isInvolved(a)||n.push(a)}}},endLeftRecursion(){this.currentLeftRecursion=this.currentLeftRecursion.nextLeftRecursion},shouldUseMemoizedResult(t){if(!t.isLeftRecursion)return!0;const{applicationMemoKeyStack:e}=this;for(let r=0;r<e.length;r++){const u=e[r];if(t.isInvolved(u))return!1}return!0},memoize(t,e){return this.memo[t]=e,this.maxExaminedLength=Math.max(this.maxExaminedLength,e.examinedLength),this.maxRightmostFailureOffset=Math.max(this.maxRightmostFailureOffset,e.rightmostFailureOffset),e},clearObsoleteEntries(t,e){if(t+this.maxExaminedLength<=e)return;const{memo:r}=this;this.maxExaminedLength=0,this.maxRightmostFailureOffset=-1,Object.keys(r).forEach(u=>{const n=r[u];t+n.examinedLength>e?delete r[u]:(this.maxExaminedLength=Math.max(this.maxExaminedLength,n.examinedLength),this.maxRightmostFailureOffset=Math.max(this.maxRightmostFailureOffset,n.rightmostFailureOffset))})}};var Ju=Yr;const Qu=Gt,ei=Wr,ti=Ju,ri=Hr,Lt=ze,ni=ke;let Zr;ni.awaitBuiltInRules(t=>{Zr=t.rules.applySyntactic.body});const xt=new Lt.Apply("spaces");function Jr(t,e,r){this.matcher=t,this.startExpr=e,this.grammar=t.grammar,this.input=t.input,this.inputStream=new Qu(t.input),this.memoTable=t.memoTable,this._bindings=[],this._bindingOffsets=[],this._applicationStack=[],this._posStack=[0],this.inLexifiedContextStack=[!1],this.rightmostFailurePosition=-1,this._rightmostFailurePositionStack=[],this._recordedFailuresStack=[],r!==void 0&&(this.positionToRecordFailures=r,this.recordedFailures=Object.create(null))}Jr.prototype={posToOffset(t){return t-this._posStack[this._posStack.length-1]},enterApplication(t,e){this._posStack.push(this.inputStream.pos),this._applicationStack.push(e),this.inLexifiedContextStack.push(!1),t.enter(e),this._rightmostFailurePositionStack.push(this.rightmostFailurePosition),this.rightmostFailurePosition=-1},exitApplication(t,e){const r=this._posStack.pop();this._applicationStack.pop(),this.inLexifiedContextStack.pop(),t.exit(),this.rightmostFailurePosition=Math.max(this.rightmostFailurePosition,this._rightmostFailurePositionStack.pop()),e&&this.pushBinding(e,r)},enterLexifiedContext(){this.inLexifiedContextStack.push(!0)},exitLexifiedContext(){this.inLexifiedContextStack.pop()},currentApplication(){return this._applicationStack[this._applicationStack.length-1]},inSyntacticContext(){const t=this.currentApplication();return t?t.isSyntactic()&&!this.inLexifiedContext():this.startExpr.factors[0].isSyntactic()},inLexifiedContext(){return this.inLexifiedContextStack[this.inLexifiedContextStack.length-1]},skipSpaces(){return this.pushFailuresInfo(),this.eval(xt),this.popBinding(),this.popFailuresInfo(),this.inputStream.pos},skipSpacesIfInSyntacticContext(){return this.inSyntacticContext()?this.skipSpaces():this.inputStream.pos},maybeSkipSpacesBefore(t){return t.allowsSkippingPrecedingSpace()&&t!==xt?this.skipSpacesIfInSyntacticContext():this.inputStream.pos},pushBinding(t,e){this._bindings.push(t),this._bindingOffsets.push(this.posToOffset(e))},popBinding(){this._bindings.pop(),this._bindingOffsets.pop()},numBindings(){return this._bindings.length},truncateBindings(t){for(;this._bindings.length>t;)this.popBinding()},getCurrentPosInfo(){return this.getPosInfo(this.inputStream.pos)},getPosInfo(t){let e=this.memoTable[t];return e||(e=this.memoTable[t]=new ti),e},processFailure(t,e){if(this.rightmostFailurePosition=Math.max(this.rightmostFailurePosition,t),this.recordedFailures&&t===this.positionToRecordFailures){const r=this.currentApplication();r&&(e=e.substituteParams(r.args)),this.recordFailure(e.toFailure(this.grammar),!1)}},recordFailure(t,e){const r=t.toKey();this.recordedFailures[r]?this.recordedFailures[r].isFluffy()&&!t.isFluffy()&&this.recordedFailures[r].clearFluffy():this.recordedFailures[r]=e?t.clone():t},recordFailures(t,e){Object.keys(t).forEach(r=>{this.recordFailure(t[r],e)})},cloneRecordedFailures(){if(!this.recordedFailures)return;const t=Object.create(null);return Object.keys(this.recordedFailures).forEach(e=>{t[e]=this.recordedFailures[e].clone()}),t},getRightmostFailurePosition(){return this.rightmostFailurePosition},_getRightmostFailureOffset(){return this.rightmostFailurePosition>=0?this.posToOffset(this.rightmostFailurePosition):-1},getMemoizedTraceEntry(t,e){const r=this.memoTable[t];if(r&&e instanceof Lt.Apply){const u=r.memo[e.toMemoKey()];if(u&&u.traceEntry){const n=u.traceEntry.cloneWithExpr(e);return n.isMemoized=!0,n}}return null},getTraceEntry(t,e,r,u){if(e instanceof Lt.Apply){const n=this.currentApplication(),i=n?n.args:[];e=e.substituteParams(i)}return this.getMemoizedTraceEntry(t,e)||new ri(this.input,t,this.inputStream.pos,e,r,u,this.trace)},isTracing(){return!!this.trace},hasNecessaryInfo(t){return this.trace&&!t.traceEntry?!1:this.recordedFailures&&this.inputStream.pos+t.rightmostFailureOffset===this.positionToRecordFailures?!!t.failuresAtRightmostPosition:!0},useMemoizedResult(t,e){this.trace&&this.trace.push(e.traceEntry);const r=this.inputStream.pos+e.rightmostFailureOffset;return this.rightmostFailurePosition=Math.max(this.rightmostFailurePosition,r),this.recordedFailures&&this.positionToRecordFailures===r&&e.failuresAtRightmostPosition&&this.recordFailures(e.failuresAtRightmostPosition,!0),this.inputStream.examinedLength=Math.max(this.inputStream.examinedLength,e.examinedLength+t),e.value?(this.inputStream.pos+=e.matchLength,this.pushBinding(e.value,t),!0):!1},eval(t){const{inputStream:e}=this,r=this._bindings.length;let u;this.recordedFailures&&(u=this.recordedFailures,this.recordedFailures=Object.create(null));const n=e.pos,i=this.maybeSkipSpacesBefore(t);let a;this.trace&&(a=this.trace,this.trace=[]);const p=t.eval(this);if(this.trace){const s=this._bindings.slice(r),c=this.getTraceEntry(i,t,p,s);c.isImplicitSpaces=t===xt,c.isRootNode=t===this.startExpr,a.push(c),this.trace=a}return p?this.recordedFailures&&e.pos===this.positionToRecordFailures&&Object.keys(this.recordedFailures).forEach(s=>{this.recordedFailures[s].makeFluffy()}):(e.pos=n,this.truncateBindings(r)),this.recordedFailures&&this.recordFailures(u,!1),t===Zr&&this.skipSpaces(),p},getMatchResult(){this.eval(this.startExpr);let t;this.recordedFailures&&(t=Object.keys(this.recordedFailures).map(r=>this.recordedFailures[r]));const e=this._bindings[0];return e&&(e.grammar=this.grammar),new ei(this.matcher,this.input,this.startExpr,e,this._bindingOffsets[0],this.rightmostFailurePosition,t)},getTrace(){this.trace=[];const t=this.getMatchResult(),e=this.trace[this.trace.length-1];return e.result=t,e},pushFailuresInfo(){this._rightmostFailurePositionStack.push(this.rightmostFailurePosition),this._recordedFailuresStack.push(this.recordedFailures)},popFailuresInfo(){this.rightmostFailurePosition=this._rightmostFailurePositionStack.pop(),this.recordedFailures=this._recordedFailuresStack.pop()}};var ui=Jr;const ii=ui,ir=ze;function Re(t){this.grammar=t,this.memoTable=[],this.input=""}Re.prototype.getInput=function(){return this.input};Re.prototype.setInput=function(t){return this.input!==t&&this.replaceInputRange(0,this.input.length,t),this};Re.prototype.replaceInputRange=function(t,e,r){const u=this.input;if(t<0||t>u.length||e<0||e>u.length||t>e)throw new Error("Invalid indices: "+t+" and "+e);this.input=u.slice(0,t)+r+u.slice(e);const n=this.memoTable.slice(e);this.memoTable.length=t;for(let i=0;i<r.length;i++)this.memoTable.push(void 0);n.forEach(function(i){this.memoTable.push(i)},this);for(let i=0;i<t;i++){const a=this.memoTable[i];a&&a.clearObsoleteEntries(i,t)}return this};Re.prototype.match=function(t){return this._match(this._getStartExpr(t),!1)};Re.prototype.trace=function(t){return this._match(this._getStartExpr(t),!0)};Re.prototype._match=function(t,e,r){const u=new ii(this,t,r);return e?u.getTrace():u.getMatchResult()};Re.prototype._getStartExpr=function(t){const e=t||this.grammar.defaultStartRule;if(!e)throw new Error("Missing start rule argument -- the grammar has no default start rule.");const r=this.grammar.parseApplication(e);return new ir.Seq([r,ir.end])};var ai=Re;const si=Gt,{IterationNode:oi}=kt,li=Wr,Ut=G,ci=Le,Qr=ke,tt=[],Ht=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);class en{constructor(e,r,u){this._node=e,this.source=r,this._baseInterval=u,e.isNonterminal()&&Ut.assert(r===u),this._childWrappers=[]}toString(){return"[semantics wrapper for "+this._node.grammar.name+"]"}_forgetMemoizedResultFor(e){delete this._node[this._semantics.attributeKeys[e]],this.children.forEach(r=>{r._forgetMemoizedResultFor(e)})}child(e){if(!(0<=e&&e<this._node.numChildren()))return;let r=this._childWrappers[e];if(!r){const u=this._node.childAt(e),n=this._node.childOffsets[e],i=this._baseInterval.subInterval(n,u.matchLength),a=u.isNonterminal()?i:this._baseInterval;r=this._childWrappers[e]=this._semantics.wrap(u,i,a)}return r}_children(){for(let e=0;e<this._node.numChildren();e++)this.child(e);return this._childWrappers}isIteration(){return this._node.isIteration()}isTerminal(){return this._node.isTerminal()}isNonterminal(){return this._node.isNonterminal()}isSyntactic(){return this.isNonterminal()&&this._node.isSyntactic()}isLexical(){return this.isNonterminal()&&this._node.isLexical()}isOptional(){return this._node.isOptional()}iteration(e){const r=e||[],u=r.map(a=>a._node),n=new oi(u,[],-1,!1),i=this._semantics.wrap(n,null,null);return i._childWrappers=r,i}get children(){return this._children()}get ctorName(){return this._node.ctorName}get interval(){throw new Error("The `interval` property is deprecated -- use `source` instead")}get numChildren(){return this._node.numChildren()}get sourceString(){return this.source.contents}}function de(t,e){const r=this;if(this.grammar=t,this.checkedActionDicts=!1,this.Wrapper=class extends(e?e.Wrapper:en){constructor(u,n,i){super(u,n,i),r.checkActionDictsIfHaventAlready(),this._semantics=r}},this.super=e,e){if(!(t.equals(this.super.grammar)||t._inheritsFrom(this.super.grammar)))throw new Error("Cannot extend a semantics for grammar '"+this.super.grammar.name+"' for use with grammar '"+t.name+"' (not a sub-grammar)");this.operations=Object.create(this.super.operations),this.attributes=Object.create(this.super.attributes),this.attributeKeys=Object.create(null);for(const u in this.attributes)Object.defineProperty(this.attributeKeys,u,{value:Qr.uniqueId(u)})}else this.operations=Object.create(null),this.attributes=Object.create(null),this.attributeKeys=Object.create(null)}de.prototype.toString=function(){return"[semantics for "+this.grammar.name+"]"};de.prototype.checkActionDictsIfHaventAlready=function(){this.checkedActionDicts||(this.checkActionDicts(),this.checkedActionDicts=!0)};de.prototype.checkActionDicts=function(){let t;for(t in this.operations)this.operations[t].checkActionDict(this.grammar);for(t in this.attributes)this.attributes[t].checkActionDict(this.grammar)};de.prototype.toRecipe=function(t){function e(u){return u.super!==de.BuiltInSemantics._getSemantics()}let r=`(function(g) {
`;if(e(this)){r+="  var semantics = "+this.super.toRecipe(!0)+"(g";const u=this.super.grammar;let n=this.grammar;for(;n!==u;)r+=".superGrammar",n=n.superGrammar;r+=`);
`,r+="  return g.extendSemantics(semantics)"}else r+="  return g.createSemantics()";return["Operation","Attribute"].forEach(u=>{const n=this[u.toLowerCase()+"s"];Object.keys(n).forEach(i=>{const{actionDict:a,formals:p,builtInDefault:s}=n[i];let c=i;p.length>0&&(c+="("+p.join(", ")+")");let o;e(this)&&this.super[u.toLowerCase()+"s"][i]?o="extend"+u:o="add"+u,r+=`
    .`+o+"("+JSON.stringify(c)+", {";const l=[];Object.keys(a).forEach(f=>{if(a[f]!==s){let h=a[f].toString().trim();h=h.replace(/^.*\(/,"function("),l.push(`
      `+JSON.stringify(f)+": "+h)}}),r+=l.join(",")+`
    })`})}),r+=`;
  })`,t||(r=`(function() {
  var grammar = this.fromRecipe(`+this.grammar.toRecipe()+`);
  var semantics = `+r+`(grammar);
  return semantics;
});
`),r};function tn(t,e){if(!de.prototypeGrammar)return Ut.assert(t.indexOf("(")===-1),{name:t,formals:[]};const r=de.prototypeGrammar.match(t,e==="operation"?"OperationSignature":"AttributeSignature");if(r.failed())throw new Error(r.message);return de.prototypeGrammarSemantics(r).parse()}function pi(t,e,r){return function(...u){const i=(this._semantics.operations[e]||this._semantics.attributes[e]).formals.map(a=>this.args[a]);if(!this.isIteration()&&u.length===1)return r.apply(u[0],i);throw ci.missingSemanticAction(this.ctorName,e,t,tt)}}de.prototype.addOperationOrAttribute=function(t,e,r){const u=t+"s",n=tn(e,t),{name:i}=n,{formals:a}=n;this.assertNewName(i,t);const p=pi(t,i,o),s={_default:p};Object.keys(r).forEach(l=>{s[l]=r[l]});const c=t==="operation"?new nt(i,a,s,p):new zt(i,s,p);c.checkActionDict(this.grammar),this[u][i]=c;function o(...l){const f=this._semantics[u][i];if(arguments.length!==f.formals.length)throw new Error("Invalid number of arguments passed to "+i+" "+t+" (expected "+f.formals.length+", got "+arguments.length+")");const h=Object.create(null);for(const[y,b]of Object.entries(l)){const k=f.formals[y];h[k]=b}const E=this.args;this.args=h;const A=f.execute(this._semantics,this);return this.args=E,A}t==="operation"?(this.Wrapper.prototype[i]=o,this.Wrapper.prototype[i].toString=function(){return"["+i+" operation]"}):(Object.defineProperty(this.Wrapper.prototype,i,{get:o,configurable:!0}),Object.defineProperty(this.attributeKeys,i,{value:Qr.uniqueId(i)}))};de.prototype.extendOperationOrAttribute=function(t,e,r){const u=t+"s";if(tn(e,"attribute"),!(this.super&&e in this.super[u]))throw new Error("Cannot extend "+t+" '"+e+"': did not inherit an "+t+" with that name");if(Ht(this[u],e))throw new Error("Cannot extend "+t+" '"+e+"' again");const n=this[u][e].formals,i=this[u][e].actionDict,a=Object.create(i);Object.keys(r).forEach(p=>{a[p]=r[p]}),this[u][e]=t==="operation"?new nt(e,n,a):new zt(e,a),this[u][e].checkActionDict(this.grammar)};de.prototype.assertNewName=function(t,e){if(Ht(en.prototype,t))throw new Error("Cannot add "+e+" '"+t+"': that's a reserved name");if(t in this.operations)throw new Error("Cannot add "+e+" '"+t+"': an operation with that name already exists");if(t in this.attributes)throw new Error("Cannot add "+e+" '"+t+"': an attribute with that name already exists")};de.prototype.wrap=function(t,e,r){const u=r||e;return t instanceof this.Wrapper?t:new this.Wrapper(t,e,u)};de.createSemantics=function(t,e){const r=new de(t,e!==void 0?e:de.BuiltInSemantics._getSemantics()),u=function(i){if(!(i instanceof li))throw new TypeError("Semantics expected a MatchResult, but got "+Ut.unexpectedObjToString(i));if(i.failed())throw new TypeError("cannot apply Semantics to "+i.toString());const a=i._cst;if(a.grammar!==t)throw new Error("Cannot use a MatchResult from grammar '"+a.grammar.name+"' with a semantics for '"+t.name+"'");const p=new si(i.input);return r.wrap(a,p.interval(i._cstOffset,i.input.length))};return u.addOperation=function(n,i){return r.addOperationOrAttribute("operation",n,i),u},u.extendOperation=function(n,i){return r.extendOperationOrAttribute("operation",n,i),u},u.addAttribute=function(n,i){return r.addOperationOrAttribute("attribute",n,i),u},u.extendAttribute=function(n,i){return r.extendOperationOrAttribute("attribute",n,i),u},u._getActionDict=function(n){const i=r.operations[n]||r.attributes[n];if(!i)throw new Error('"'+n+'" is not a valid operation or attribute name in this semantics for "'+t.name+'"');return i.actionDict},u._remove=function(n){let i;return n in r.operations?(i=r.operations[n],delete r.operations[n]):n in r.attributes&&(i=r.attributes[n],delete r.attributes[n]),delete r.Wrapper.prototype[n],i},u.getOperationNames=function(){return Object.keys(r.operations)},u.getAttributeNames=function(){return Object.keys(r.attributes)},u.getGrammar=function(){return r.grammar},u.toRecipe=function(n){return r.toRecipe(n)},u.toString=r.toString.bind(r),u._getSemantics=function(){return r},u};class nt{constructor(e,r,u,n){this.name=e,this.formals=r,this.actionDict=u,this.builtInDefault=n}checkActionDict(e){e._checkTopDownActionDict(this.typeName,this.name,this.actionDict)}execute(e,r){try{const{ctorName:u}=r._node;let n=this.actionDict[u];return n?(tt.push([this,u]),n.apply(r,r._children())):r.isNonterminal()&&(n=this.actionDict._nonterminal,n)?(tt.push([this,"_nonterminal",u]),n.apply(r,r._children())):(tt.push([this,"default action",u]),this.actionDict._default.apply(r,r._children()))}finally{tt.pop()}}}nt.prototype.typeName="operation";class zt extends nt{constructor(e,r,u){super(e,[],r,u)}execute(e,r){const u=r._node,n=e.attributeKeys[this.name];return Ht(u,n)||(u[n]=nt.prototype.execute.call(this,e,r)),u[n]}}zt.prototype.typeName="attribute";var rn=de;const di=Wu,mi=ai,ar=rn,sr=G,or=Le,Se=ze,lr=["_iter","_terminal","_nonterminal","_default"];function cr(t){return Object.keys(t.rules).sort().map(e=>t.rules[e])}const fi=t=>t.replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029");function Ue(t,e,r,u){if(this.name=t,this.superGrammar=e,this.rules=r,u){if(!(u in r))throw new Error("Invalid start rule: '"+u+"' is not a rule in grammar '"+t+"'");this.defaultStartRule=u}}let nn,un;Ue.initApplicationParser=function(t,e){nn=t,un=e};Ue.prototype={matcher(){return new mi(this)},isBuiltIn(){return this===Ue.ProtoBuiltInRules||this===Ue.BuiltInRules},equals(t){if(this===t)return!0;if(t==null||this.name!==t.name||this.defaultStartRule!==t.defaultStartRule||!(this.superGrammar===t.superGrammar||this.superGrammar.equals(t.superGrammar)))return!1;const e=cr(this),r=cr(t);return e.length===r.length&&e.every((u,n)=>u.description===r[n].description&&u.formals.join(",")===r[n].formals.join(",")&&u.body.toString()===r[n].body.toString())},match(t,e){const r=this.matcher();return r.replaceInputRange(0,0,t),r.match(e)},trace(t,e){const r=this.matcher();return r.replaceInputRange(0,0,t),r.trace(e)},createSemantics(){return ar.createSemantics(this)},extendSemantics(t){return ar.createSemantics(this,t._getSemantics())},_checkTopDownActionDict(t,e,r){const u=[];for(const n in r){const i=r[n];if(!lr.includes(n)&&!(n in this.rules)){u.push(`'${n}' is not a valid semantic action for '${this.name}'`);continue}if(typeof i!="function"){u.push(`'${n}' must be a function in an action dictionary for '${this.name}'`);continue}const p=i.length,s=this._topDownActionArity(n);if(p!==s){let c;n==="_iter"||n==="_nonterminal"?c=`it should use a rest parameter, e.g. \`${n}(...children) {}\`. NOTE: this is new in Ohm v16 — see https://ohmjs.org/d/ati for details.`:c=`expected ${s}, got ${p}`,u.push(`Semantic action '${n}' has the wrong arity: ${c}`)}}if(u.length>0){const n=u.map(a=>"- "+a),i=new Error([`Found errors in the action dictionary of the '${e}' ${t}:`,...n].join(`
`));throw i.problems=u,i}},_topDownActionArity(t){return lr.includes(t)?0:this.rules[t].body.getArity()},_inheritsFrom(t){let e=this.superGrammar;for(;e;){if(e.equals(t,!0))return!0;e=e.superGrammar}return!1},toRecipe(t=void 0){const e={};this.source&&(e.source=this.source.contents);let r=null;this.defaultStartRule&&(r=this.defaultStartRule);const u={};Object.keys(this.rules).forEach(a=>{const p=this.rules[a],{body:s}=p,c=!this.superGrammar||!this.superGrammar.rules[a];let o;c?o="define":o=s instanceof Se.Extend?"extend":"override";const l={};if(p.source&&this.source){const E=p.source.relativeTo(this.source);l.sourceInterval=[E.startIdx,E.endIdx]}const f=c?p.description:null,h=s.outputRecipe(p.formals,this.source);u[a]=[o,l,f,p.formals,h]});let n="null";t?n=t:this.superGrammar&&!this.superGrammar.isBuiltIn()&&(n=this.superGrammar.toRecipe());const i=[...["grammar",e,this.name].map(JSON.stringify),n,...[r,u].map(JSON.stringify)];return fi(`[${i.join(",")}]`)},toOperationActionDictionaryTemplate(){return this._toOperationOrAttributeActionDictionaryTemplate()},toAttributeActionDictionaryTemplate(){return this._toOperationOrAttributeActionDictionaryTemplate()},_toOperationOrAttributeActionDictionaryTemplate(){const t=new sr.StringBuffer;t.append("{");let e=!0;for(const r in this.rules){const{body:u}=this.rules[r];e?e=!1:t.append(","),t.append(`
`),t.append("  "),this.addSemanticActionTemplate(r,u,t)}return t.append(`
}`),t.contents()},addSemanticActionTemplate(t,e,r){r.append(t),r.append(": function(");const u=this._topDownActionArity(t);r.append(sr.repeat("_",u).join(", ")),r.append(`) {
`),r.append("  }")},parseApplication(t){let e;if(t.indexOf("<")===-1)e=new Se.Apply(t);else{const u=nn.match(t,"Base_application");e=un(u,{})}if(!(e.ruleName in this.rules))throw or.undeclaredRule(e.ruleName,this.name);const{formals:r}=this.rules[e.ruleName];if(r.length!==e.args.length){const{source:u}=this.rules[e.ruleName];throw or.wrongNumberOfParameters(e.ruleName,r.length,e.args.length,u)}return e}};Ue.ProtoBuiltInRules=new Ue("ProtoBuiltInRules",void 0,{any:{body:Se.any,formals:[],description:"any character",primitive:!0},end:{body:Se.end,formals:[],description:"end of input",primitive:!0},caseInsensitive:{body:new di(new Se.Param(0)),formals:["str"],primitive:!0},lower:{body:new Se.UnicodeChar("Ll"),formals:[],description:"a lowercase letter",primitive:!0},upper:{body:new Se.UnicodeChar("Lu"),formals:[],description:"an uppercase letter",primitive:!0},unicodeLtmo:{body:new Se.UnicodeChar("Ltmo"),formals:[],description:"a Unicode character in Lt, Lm, or Lo",primitive:!0},spaces:{body:new Se.Star(new Se.Apply("space")),formals:[]},space:{body:new Se.Range("\0"," "),formals:[],description:"a space"}});var At=Ue;const Pt=At,hi=Gt,an=G,Oe=Le,Di=ze;function xe(t){this.name=t}xe.prototype.sourceInterval=function(t,e){return this.source.subInterval(t,e-t)};xe.prototype.ensureSuperGrammar=function(){return this.superGrammar||this.withSuperGrammar(this.name==="BuiltInRules"?Pt.ProtoBuiltInRules:Pt.BuiltInRules),this.superGrammar};xe.prototype.ensureSuperGrammarRuleForOverriding=function(t,e){const r=this.ensureSuperGrammar().rules[t];if(!r)throw Oe.cannotOverrideUndeclaredRule(t,this.superGrammar.name,e);return r};xe.prototype.installOverriddenOrExtendedRule=function(t,e,r,u){const n=an.getDuplicates(e);if(n.length>0)throw Oe.duplicateParameterNames(t,n,u);const i=this.ensureSuperGrammar().rules[t],a=i.formals,p=a?a.length:0;if(e.length!==p)throw Oe.wrongNumberOfParameters(t,p,e.length,u);return this.install(t,e,r,i.description,u)};xe.prototype.install=function(t,e,r,u,n){return this.rules[t]={body:r.introduceParams(e),formals:e,description:u,source:n},this};xe.prototype.withSuperGrammar=function(t){if(this.superGrammar)throw new Error("the super grammar of a GrammarDecl cannot be set more than once");return this.superGrammar=t,this.rules=Object.create(t.rules),t.isBuiltIn()||(this.defaultStartRule=t.defaultStartRule),this};xe.prototype.withDefaultStartRule=function(t){return this.defaultStartRule=t,this};xe.prototype.withSource=function(t){return this.source=new hi(t).interval(0,t.length),this};xe.prototype.build=function(){const t=new Pt(this.name,this.ensureSuperGrammar(),this.rules,this.defaultStartRule),e=[];let r=!1;return Object.keys(t.rules).forEach(u=>{const{body:n}=t.rules[u];try{n.assertChoicesHaveUniformArity(u)}catch(i){e.push(i)}try{n.assertAllApplicationsAreValid(u,t)}catch(i){e.push(i),r=!0}}),r||Object.keys(t.rules).forEach(u=>{const{body:n}=t.rules[u];try{n.assertIteratedExprsAreNotNullable(t,[])}catch(i){e.push(i)}}),e.length>0&&Oe.throwErrors(e),this.source&&(t.source=this.source),t};xe.prototype.define=function(t,e,r,u,n){if(this.ensureSuperGrammar(),this.superGrammar.rules[t])throw Oe.duplicateRuleDeclaration(t,this.name,this.superGrammar.name,n);if(this.rules[t])throw Oe.duplicateRuleDeclaration(t,this.name,this.name,n);const i=an.getDuplicates(e);if(i.length>0)throw Oe.duplicateParameterNames(t,i,n);return this.install(t,e,r,u,n)};xe.prototype.override=function(t,e,r,u,n){return this.ensureSuperGrammarRuleForOverriding(t,n),this.installOverriddenOrExtendedRule(t,e,r,n),this};xe.prototype.extend=function(t,e,r,u,n){if(!this.ensureSuperGrammar().rules[t])throw Oe.cannotExtendUndeclaredRule(t,this.superGrammar.name,n);const a=new Di.Extend(this.superGrammar,t,r);return a.source=r.source,this.installOverriddenOrExtendedRule(t,e,a,n),this};var Ei=xe;const gi=At,pr=Ei,K=ze;function sn(){}sn.prototype={currentDecl:null,currentRuleName:null,newGrammar(t){return new pr(t)},grammar(t,e,r,u,n){const i=new pr(e);return r&&i.withSuperGrammar(r instanceof gi?r:this.fromRecipe(r)),u&&i.withDefaultStartRule(u),t&&t.source&&i.withSource(t.source),this.currentDecl=i,Object.keys(n).forEach(a=>{this.currentRuleName=a;const p=n[a],s=p[0],c=p[1],o=p[2],l=p[3],f=this.fromRecipe(p[4]);let h;i.source&&c&&c.sourceInterval&&(h=i.source.subInterval(c.sourceInterval[0],c.sourceInterval[1]-c.sourceInterval[0])),i[s](a,l,f,o,h)}),this.currentRuleName=this.currentDecl=null,i.build()},terminal(t){return new K.Terminal(t)},range(t,e){return new K.Range(t,e)},param(t){return new K.Param(t)},alt(...t){let e=[];for(let r of t)r instanceof K.PExpr||(r=this.fromRecipe(r)),r instanceof K.Alt?e=e.concat(r.terms):e.push(r);return e.length===1?e[0]:new K.Alt(e)},seq(...t){let e=[];for(let r of t)r instanceof K.PExpr||(r=this.fromRecipe(r)),r instanceof K.Seq?e=e.concat(r.factors):e.push(r);return e.length===1?e[0]:new K.Seq(e)},star(t){return t instanceof K.PExpr||(t=this.fromRecipe(t)),new K.Star(t)},plus(t){return t instanceof K.PExpr||(t=this.fromRecipe(t)),new K.Plus(t)},opt(t){return t instanceof K.PExpr||(t=this.fromRecipe(t)),new K.Opt(t)},not(t){return t instanceof K.PExpr||(t=this.fromRecipe(t)),new K.Not(t)},la(t){return this.lookahead(t)},lookahead(t){return t instanceof K.PExpr||(t=this.fromRecipe(t)),new K.Lookahead(t)},lex(t){return t instanceof K.PExpr||(t=this.fromRecipe(t)),new K.Lex(t)},app(t,e){return e&&e.length>0&&(e=e.map(function(r){return r instanceof K.PExpr?r:this.fromRecipe(r)},this)),new K.Apply(t,e)},splice(t,e){return new K.Splice(this.currentDecl.superGrammar,this.currentRuleName,t.map(r=>this.fromRecipe(r)),e.map(r=>this.fromRecipe(r)))},fromRecipe(t){const e=t[0]==="grammar"?t.slice(1):t.slice(2),r=this[t[0]](...e),u=t[1];return u&&u.sourceInterval&&this.currentDecl&&r.withSource(this.currentDecl.sourceInterval(...u.sourceInterval)),r}};var on=sn,Ci="16.6.0",Ai={version:Ci},_i=typeof __GLOBAL_OHM_VERSION__=="string"?__GLOBAL_OHM_VERSION__:Ai.version,it={};const dr=on;function Fi(t){return typeof t=="function"?t.call(new dr):(typeof t=="string"&&(t=JSON.parse(t)),new dr().fromRecipe(t))}it.makeRecipe=Fi;var{makeRecipe:yi}=it,Bi=yi(["grammar",{source:`BuiltInRules {

  alnum  (an alpha-numeric character)
    = letter
    | digit

  letter  (a letter)
    = lower
    | upper
    | unicodeLtmo

  digit  (a digit)
    = "0".."9"

  hexDigit  (a hexadecimal digit)
    = digit
    | "a".."f"
    | "A".."F"

  ListOf<elem, sep>
    = NonemptyListOf<elem, sep>
    | EmptyListOf<elem, sep>

  NonemptyListOf<elem, sep>
    = elem (sep elem)*

  EmptyListOf<elem, sep>
    = /* nothing */

  listOf<elem, sep>
    = nonemptyListOf<elem, sep>
    | emptyListOf<elem, sep>

  nonemptyListOf<elem, sep>
    = elem (sep elem)*

  emptyListOf<elem, sep>
    = /* nothing */

  // Allows a syntactic rule application within a lexical context.
  applySyntactic<app> = app
}`},"BuiltInRules",null,null,{alnum:["define",{sourceInterval:[18,78]},"an alpha-numeric character",[],["alt",{sourceInterval:[60,78]},["app",{sourceInterval:[60,66]},"letter",[]],["app",{sourceInterval:[73,78]},"digit",[]]]],letter:["define",{sourceInterval:[82,142]},"a letter",[],["alt",{sourceInterval:[107,142]},["app",{sourceInterval:[107,112]},"lower",[]],["app",{sourceInterval:[119,124]},"upper",[]],["app",{sourceInterval:[131,142]},"unicodeLtmo",[]]]],digit:["define",{sourceInterval:[146,177]},"a digit",[],["range",{sourceInterval:[169,177]},"0","9"]],hexDigit:["define",{sourceInterval:[181,254]},"a hexadecimal digit",[],["alt",{sourceInterval:[219,254]},["app",{sourceInterval:[219,224]},"digit",[]],["range",{sourceInterval:[231,239]},"a","f"],["range",{sourceInterval:[246,254]},"A","F"]]],ListOf:["define",{sourceInterval:[258,336]},null,["elem","sep"],["alt",{sourceInterval:[282,336]},["app",{sourceInterval:[282,307]},"NonemptyListOf",[["param",{sourceInterval:[297,301]},0],["param",{sourceInterval:[303,306]},1]]],["app",{sourceInterval:[314,336]},"EmptyListOf",[["param",{sourceInterval:[326,330]},0],["param",{sourceInterval:[332,335]},1]]]]],NonemptyListOf:["define",{sourceInterval:[340,388]},null,["elem","sep"],["seq",{sourceInterval:[372,388]},["param",{sourceInterval:[372,376]},0],["star",{sourceInterval:[377,388]},["seq",{sourceInterval:[378,386]},["param",{sourceInterval:[378,381]},1],["param",{sourceInterval:[382,386]},0]]]]],EmptyListOf:["define",{sourceInterval:[392,434]},null,["elem","sep"],["seq",{sourceInterval:[438,438]}]],listOf:["define",{sourceInterval:[438,516]},null,["elem","sep"],["alt",{sourceInterval:[462,516]},["app",{sourceInterval:[462,487]},"nonemptyListOf",[["param",{sourceInterval:[477,481]},0],["param",{sourceInterval:[483,486]},1]]],["app",{sourceInterval:[494,516]},"emptyListOf",[["param",{sourceInterval:[506,510]},0],["param",{sourceInterval:[512,515]},1]]]]],nonemptyListOf:["define",{sourceInterval:[520,568]},null,["elem","sep"],["seq",{sourceInterval:[552,568]},["param",{sourceInterval:[552,556]},0],["star",{sourceInterval:[557,568]},["seq",{sourceInterval:[558,566]},["param",{sourceInterval:[558,561]},1],["param",{sourceInterval:[562,566]},0]]]]],emptyListOf:["define",{sourceInterval:[572,682]},null,["elem","sep"],["seq",{sourceInterval:[685,685]}]],applySyntactic:["define",{sourceInterval:[685,710]},null,["app"],["param",{sourceInterval:[707,710]},0]]}]);const bi=At;bi.BuiltInRules=Bi;var{makeRecipe:xi}=it,vi=xi(["grammar",{source:`OperationsAndAttributes {

  AttributeSignature =
    name

  OperationSignature =
    name Formals?

  Formals
    = "(" ListOf<name, ","> ")"

  name  (a name)
    = nameFirst nameRest*

  nameFirst
    = "_"
    | letter

  nameRest
    = "_"
    | alnum

}`},"OperationsAndAttributes",null,"AttributeSignature",{AttributeSignature:["define",{sourceInterval:[29,58]},null,[],["app",{sourceInterval:[54,58]},"name",[]]],OperationSignature:["define",{sourceInterval:[62,100]},null,[],["seq",{sourceInterval:[87,100]},["app",{sourceInterval:[87,91]},"name",[]],["opt",{sourceInterval:[92,100]},["app",{sourceInterval:[92,99]},"Formals",[]]]]],Formals:["define",{sourceInterval:[104,143]},null,[],["seq",{sourceInterval:[118,143]},["terminal",{sourceInterval:[118,121]},"("],["app",{sourceInterval:[122,139]},"ListOf",[["app",{sourceInterval:[129,133]},"name",[]],["terminal",{sourceInterval:[135,138]},","]]],["terminal",{sourceInterval:[140,143]},")"]]],name:["define",{sourceInterval:[147,187]},"a name",[],["seq",{sourceInterval:[168,187]},["app",{sourceInterval:[168,177]},"nameFirst",[]],["star",{sourceInterval:[178,187]},["app",{sourceInterval:[178,186]},"nameRest",[]]]]],nameFirst:["define",{sourceInterval:[191,223]},null,[],["alt",{sourceInterval:[207,223]},["terminal",{sourceInterval:[207,210]},"_"],["app",{sourceInterval:[217,223]},"letter",[]]]],nameRest:["define",{sourceInterval:[227,257]},null,[],["alt",{sourceInterval:[242,257]},["terminal",{sourceInterval:[242,245]},"_"],["app",{sourceInterval:[252,257]},"alnum",[]]]]}]);const dt=rn,Si=ke;Si.awaitBuiltInRules(t=>{const e=vi;Ti(t),Ii(e)});function Ti(t){const e={empty(){return this.iteration()},nonEmpty(r,u,n){return this.iteration([r].concat(n.children))}};dt.BuiltInSemantics=dt.createSemantics(t,null).addOperation("asIteration",{emptyListOf:e.empty,nonemptyListOf:e.nonEmpty,EmptyListOf:e.empty,NonemptyListOf:e.nonEmpty})}function Ii(t){dt.prototypeGrammarSemantics=t.createSemantics().addOperation("parse",{AttributeSignature(e){return{name:e.parse(),formals:[]}},OperationSignature(e,r){return{name:e.parse(),formals:r.children.map(u=>u.parse())[0]||[]}},Formals(e,r,u){return r.asIteration().children.map(n=>n.parse())},name(e,r){return this.sourceString}}),dt.prototypeGrammar=t}var{makeRecipe:wi}=it,Li=wi(["grammar",{source:`Ohm {

  Grammars
    = Grammar*

  Grammar
    = ident SuperGrammar? "{" Rule* "}"

  SuperGrammar
    = "<:" ident

  Rule
    = ident Formals? ruleDescr? "="  RuleBody  -- define
    | ident Formals?            ":=" OverrideRuleBody  -- override
    | ident Formals?            "+=" RuleBody  -- extend

  RuleBody
    = "|"? NonemptyListOf<TopLevelTerm, "|">

  TopLevelTerm
    = Seq caseName  -- inline
    | Seq

  OverrideRuleBody
    = "|"? NonemptyListOf<OverrideTopLevelTerm, "|">

  OverrideTopLevelTerm
    = "..."  -- superSplice
    | TopLevelTerm

  Formals
    = "<" ListOf<ident, ","> ">"

  Params
    = "<" ListOf<Seq, ","> ">"

  Alt
    = NonemptyListOf<Seq, "|">

  Seq
    = Iter*

  Iter
    = Pred "*"  -- star
    | Pred "+"  -- plus
    | Pred "?"  -- opt
    | Pred

  Pred
    = "~" Lex  -- not
    | "&" Lex  -- lookahead
    | Lex

  Lex
    = "#" Base  -- lex
    | Base

  Base
    = ident Params? ~(ruleDescr? "=" | ":=" | "+=")  -- application
    | oneCharTerminal ".." oneCharTerminal           -- range
    | terminal                                       -- terminal
    | "(" Alt ")"                                    -- paren

  ruleDescr  (a rule description)
    = "(" ruleDescrText ")"

  ruleDescrText
    = (~")" any)*

  caseName
    = "--" (~"\\n" space)* name (~"\\n" space)* ("\\n" | &"}")

  name  (a name)
    = nameFirst nameRest*

  nameFirst
    = "_"
    | letter

  nameRest
    = "_"
    | alnum

  ident  (an identifier)
    = name

  terminal
    = "\\"" terminalChar* "\\""

  oneCharTerminal
    = "\\"" terminalChar "\\""

  terminalChar
    = escapeChar
      | ~"\\\\" ~"\\"" ~"\\n" "\\u{0}".."\\u{10FFFF}"

  escapeChar  (an escape sequence)
    = "\\\\\\\\"                                     -- backslash
    | "\\\\\\""                                     -- doubleQuote
    | "\\\\\\'"                                     -- singleQuote
    | "\\\\b"                                      -- backspace
    | "\\\\n"                                      -- lineFeed
    | "\\\\r"                                      -- carriageReturn
    | "\\\\t"                                      -- tab
    | "\\\\u{" hexDigit hexDigit? hexDigit?
             hexDigit? hexDigit? hexDigit? "}"   -- unicodeCodePoint
    | "\\\\u" hexDigit hexDigit hexDigit hexDigit  -- unicodeEscape
    | "\\\\x" hexDigit hexDigit                    -- hexEscape

  space
   += comment

  comment
    = "//" (~"\\n" any)* &("\\n" | end)  -- singleLine
    | "/*" (~"*/" any)* "*/"  -- multiLine

  tokens = token*

  token = caseName | comment | ident | operator | punctuation | terminal | any

  operator = "<:" | "=" | ":=" | "+=" | "*" | "+" | "?" | "~" | "&"

  punctuation = "<" | ">" | "," | "--"
}`},"Ohm",null,"Grammars",{Grammars:["define",{sourceInterval:[9,32]},null,[],["star",{sourceInterval:[24,32]},["app",{sourceInterval:[24,31]},"Grammar",[]]]],Grammar:["define",{sourceInterval:[36,83]},null,[],["seq",{sourceInterval:[50,83]},["app",{sourceInterval:[50,55]},"ident",[]],["opt",{sourceInterval:[56,69]},["app",{sourceInterval:[56,68]},"SuperGrammar",[]]],["terminal",{sourceInterval:[70,73]},"{"],["star",{sourceInterval:[74,79]},["app",{sourceInterval:[74,78]},"Rule",[]]],["terminal",{sourceInterval:[80,83]},"}"]]],SuperGrammar:["define",{sourceInterval:[87,116]},null,[],["seq",{sourceInterval:[106,116]},["terminal",{sourceInterval:[106,110]},"<:"],["app",{sourceInterval:[111,116]},"ident",[]]]],Rule_define:["define",{sourceInterval:[131,181]},null,[],["seq",{sourceInterval:[131,170]},["app",{sourceInterval:[131,136]},"ident",[]],["opt",{sourceInterval:[137,145]},["app",{sourceInterval:[137,144]},"Formals",[]]],["opt",{sourceInterval:[146,156]},["app",{sourceInterval:[146,155]},"ruleDescr",[]]],["terminal",{sourceInterval:[157,160]},"="],["app",{sourceInterval:[162,170]},"RuleBody",[]]]],Rule_override:["define",{sourceInterval:[188,248]},null,[],["seq",{sourceInterval:[188,235]},["app",{sourceInterval:[188,193]},"ident",[]],["opt",{sourceInterval:[194,202]},["app",{sourceInterval:[194,201]},"Formals",[]]],["terminal",{sourceInterval:[214,218]},":="],["app",{sourceInterval:[219,235]},"OverrideRuleBody",[]]]],Rule_extend:["define",{sourceInterval:[255,305]},null,[],["seq",{sourceInterval:[255,294]},["app",{sourceInterval:[255,260]},"ident",[]],["opt",{sourceInterval:[261,269]},["app",{sourceInterval:[261,268]},"Formals",[]]],["terminal",{sourceInterval:[281,285]},"+="],["app",{sourceInterval:[286,294]},"RuleBody",[]]]],Rule:["define",{sourceInterval:[120,305]},null,[],["alt",{sourceInterval:[131,305]},["app",{sourceInterval:[131,170]},"Rule_define",[]],["app",{sourceInterval:[188,235]},"Rule_override",[]],["app",{sourceInterval:[255,294]},"Rule_extend",[]]]],RuleBody:["define",{sourceInterval:[309,362]},null,[],["seq",{sourceInterval:[324,362]},["opt",{sourceInterval:[324,328]},["terminal",{sourceInterval:[324,327]},"|"]],["app",{sourceInterval:[329,362]},"NonemptyListOf",[["app",{sourceInterval:[344,356]},"TopLevelTerm",[]],["terminal",{sourceInterval:[358,361]},"|"]]]]],TopLevelTerm_inline:["define",{sourceInterval:[385,408]},null,[],["seq",{sourceInterval:[385,397]},["app",{sourceInterval:[385,388]},"Seq",[]],["app",{sourceInterval:[389,397]},"caseName",[]]]],TopLevelTerm:["define",{sourceInterval:[366,418]},null,[],["alt",{sourceInterval:[385,418]},["app",{sourceInterval:[385,397]},"TopLevelTerm_inline",[]],["app",{sourceInterval:[415,418]},"Seq",[]]]],OverrideRuleBody:["define",{sourceInterval:[422,491]},null,[],["seq",{sourceInterval:[445,491]},["opt",{sourceInterval:[445,449]},["terminal",{sourceInterval:[445,448]},"|"]],["app",{sourceInterval:[450,491]},"NonemptyListOf",[["app",{sourceInterval:[465,485]},"OverrideTopLevelTerm",[]],["terminal",{sourceInterval:[487,490]},"|"]]]]],OverrideTopLevelTerm_superSplice:["define",{sourceInterval:[522,543]},null,[],["terminal",{sourceInterval:[522,527]},"..."]],OverrideTopLevelTerm:["define",{sourceInterval:[495,562]},null,[],["alt",{sourceInterval:[522,562]},["app",{sourceInterval:[522,527]},"OverrideTopLevelTerm_superSplice",[]],["app",{sourceInterval:[550,562]},"TopLevelTerm",[]]]],Formals:["define",{sourceInterval:[566,606]},null,[],["seq",{sourceInterval:[580,606]},["terminal",{sourceInterval:[580,583]},"<"],["app",{sourceInterval:[584,602]},"ListOf",[["app",{sourceInterval:[591,596]},"ident",[]],["terminal",{sourceInterval:[598,601]},","]]],["terminal",{sourceInterval:[603,606]},">"]]],Params:["define",{sourceInterval:[610,647]},null,[],["seq",{sourceInterval:[623,647]},["terminal",{sourceInterval:[623,626]},"<"],["app",{sourceInterval:[627,643]},"ListOf",[["app",{sourceInterval:[634,637]},"Seq",[]],["terminal",{sourceInterval:[639,642]},","]]],["terminal",{sourceInterval:[644,647]},">"]]],Alt:["define",{sourceInterval:[651,685]},null,[],["app",{sourceInterval:[661,685]},"NonemptyListOf",[["app",{sourceInterval:[676,679]},"Seq",[]],["terminal",{sourceInterval:[681,684]},"|"]]]],Seq:["define",{sourceInterval:[689,704]},null,[],["star",{sourceInterval:[699,704]},["app",{sourceInterval:[699,703]},"Iter",[]]]],Iter_star:["define",{sourceInterval:[719,736]},null,[],["seq",{sourceInterval:[719,727]},["app",{sourceInterval:[719,723]},"Pred",[]],["terminal",{sourceInterval:[724,727]},"*"]]],Iter_plus:["define",{sourceInterval:[743,760]},null,[],["seq",{sourceInterval:[743,751]},["app",{sourceInterval:[743,747]},"Pred",[]],["terminal",{sourceInterval:[748,751]},"+"]]],Iter_opt:["define",{sourceInterval:[767,783]},null,[],["seq",{sourceInterval:[767,775]},["app",{sourceInterval:[767,771]},"Pred",[]],["terminal",{sourceInterval:[772,775]},"?"]]],Iter:["define",{sourceInterval:[708,794]},null,[],["alt",{sourceInterval:[719,794]},["app",{sourceInterval:[719,727]},"Iter_star",[]],["app",{sourceInterval:[743,751]},"Iter_plus",[]],["app",{sourceInterval:[767,775]},"Iter_opt",[]],["app",{sourceInterval:[790,794]},"Pred",[]]]],Pred_not:["define",{sourceInterval:[809,824]},null,[],["seq",{sourceInterval:[809,816]},["terminal",{sourceInterval:[809,812]},"~"],["app",{sourceInterval:[813,816]},"Lex",[]]]],Pred_lookahead:["define",{sourceInterval:[831,852]},null,[],["seq",{sourceInterval:[831,838]},["terminal",{sourceInterval:[831,834]},"&"],["app",{sourceInterval:[835,838]},"Lex",[]]]],Pred:["define",{sourceInterval:[798,862]},null,[],["alt",{sourceInterval:[809,862]},["app",{sourceInterval:[809,816]},"Pred_not",[]],["app",{sourceInterval:[831,838]},"Pred_lookahead",[]],["app",{sourceInterval:[859,862]},"Lex",[]]]],Lex_lex:["define",{sourceInterval:[876,892]},null,[],["seq",{sourceInterval:[876,884]},["terminal",{sourceInterval:[876,879]},"#"],["app",{sourceInterval:[880,884]},"Base",[]]]],Lex:["define",{sourceInterval:[866,903]},null,[],["alt",{sourceInterval:[876,903]},["app",{sourceInterval:[876,884]},"Lex_lex",[]],["app",{sourceInterval:[899,903]},"Base",[]]]],Base_application:["define",{sourceInterval:[918,979]},null,[],["seq",{sourceInterval:[918,963]},["app",{sourceInterval:[918,923]},"ident",[]],["opt",{sourceInterval:[924,931]},["app",{sourceInterval:[924,930]},"Params",[]]],["not",{sourceInterval:[932,963]},["alt",{sourceInterval:[934,962]},["seq",{sourceInterval:[934,948]},["opt",{sourceInterval:[934,944]},["app",{sourceInterval:[934,943]},"ruleDescr",[]]],["terminal",{sourceInterval:[945,948]},"="]],["terminal",{sourceInterval:[951,955]},":="],["terminal",{sourceInterval:[958,962]},"+="]]]]],Base_range:["define",{sourceInterval:[986,1041]},null,[],["seq",{sourceInterval:[986,1022]},["app",{sourceInterval:[986,1001]},"oneCharTerminal",[]],["terminal",{sourceInterval:[1002,1006]},".."],["app",{sourceInterval:[1007,1022]},"oneCharTerminal",[]]]],Base_terminal:["define",{sourceInterval:[1048,1106]},null,[],["app",{sourceInterval:[1048,1056]},"terminal",[]]],Base_paren:["define",{sourceInterval:[1113,1168]},null,[],["seq",{sourceInterval:[1113,1124]},["terminal",{sourceInterval:[1113,1116]},"("],["app",{sourceInterval:[1117,1120]},"Alt",[]],["terminal",{sourceInterval:[1121,1124]},")"]]],Base:["define",{sourceInterval:[907,1168]},null,[],["alt",{sourceInterval:[918,1168]},["app",{sourceInterval:[918,963]},"Base_application",[]],["app",{sourceInterval:[986,1022]},"Base_range",[]],["app",{sourceInterval:[1048,1056]},"Base_terminal",[]],["app",{sourceInterval:[1113,1124]},"Base_paren",[]]]],ruleDescr:["define",{sourceInterval:[1172,1231]},"a rule description",[],["seq",{sourceInterval:[1210,1231]},["terminal",{sourceInterval:[1210,1213]},"("],["app",{sourceInterval:[1214,1227]},"ruleDescrText",[]],["terminal",{sourceInterval:[1228,1231]},")"]]],ruleDescrText:["define",{sourceInterval:[1235,1266]},null,[],["star",{sourceInterval:[1255,1266]},["seq",{sourceInterval:[1256,1264]},["not",{sourceInterval:[1256,1260]},["terminal",{sourceInterval:[1257,1260]},")"]],["app",{sourceInterval:[1261,1264]},"any",[]]]]],caseName:["define",{sourceInterval:[1270,1338]},null,[],["seq",{sourceInterval:[1285,1338]},["terminal",{sourceInterval:[1285,1289]},"--"],["star",{sourceInterval:[1290,1304]},["seq",{sourceInterval:[1291,1302]},["not",{sourceInterval:[1291,1296]},["terminal",{sourceInterval:[1292,1296]},`
`]],["app",{sourceInterval:[1297,1302]},"space",[]]]],["app",{sourceInterval:[1305,1309]},"name",[]],["star",{sourceInterval:[1310,1324]},["seq",{sourceInterval:[1311,1322]},["not",{sourceInterval:[1311,1316]},["terminal",{sourceInterval:[1312,1316]},`
`]],["app",{sourceInterval:[1317,1322]},"space",[]]]],["alt",{sourceInterval:[1326,1337]},["terminal",{sourceInterval:[1326,1330]},`
`],["lookahead",{sourceInterval:[1333,1337]},["terminal",{sourceInterval:[1334,1337]},"}"]]]]],name:["define",{sourceInterval:[1342,1382]},"a name",[],["seq",{sourceInterval:[1363,1382]},["app",{sourceInterval:[1363,1372]},"nameFirst",[]],["star",{sourceInterval:[1373,1382]},["app",{sourceInterval:[1373,1381]},"nameRest",[]]]]],nameFirst:["define",{sourceInterval:[1386,1418]},null,[],["alt",{sourceInterval:[1402,1418]},["terminal",{sourceInterval:[1402,1405]},"_"],["app",{sourceInterval:[1412,1418]},"letter",[]]]],nameRest:["define",{sourceInterval:[1422,1452]},null,[],["alt",{sourceInterval:[1437,1452]},["terminal",{sourceInterval:[1437,1440]},"_"],["app",{sourceInterval:[1447,1452]},"alnum",[]]]],ident:["define",{sourceInterval:[1456,1489]},"an identifier",[],["app",{sourceInterval:[1485,1489]},"name",[]]],terminal:["define",{sourceInterval:[1493,1531]},null,[],["seq",{sourceInterval:[1508,1531]},["terminal",{sourceInterval:[1508,1512]},'"'],["star",{sourceInterval:[1513,1526]},["app",{sourceInterval:[1513,1525]},"terminalChar",[]]],["terminal",{sourceInterval:[1527,1531]},'"']]],oneCharTerminal:["define",{sourceInterval:[1535,1579]},null,[],["seq",{sourceInterval:[1557,1579]},["terminal",{sourceInterval:[1557,1561]},'"'],["app",{sourceInterval:[1562,1574]},"terminalChar",[]],["terminal",{sourceInterval:[1575,1579]},'"']]],terminalChar:["define",{sourceInterval:[1583,1660]},null,[],["alt",{sourceInterval:[1602,1660]},["app",{sourceInterval:[1602,1612]},"escapeChar",[]],["seq",{sourceInterval:[1621,1660]},["not",{sourceInterval:[1621,1626]},["terminal",{sourceInterval:[1622,1626]},"\\"]],["not",{sourceInterval:[1627,1632]},["terminal",{sourceInterval:[1628,1632]},'"']],["not",{sourceInterval:[1633,1638]},["terminal",{sourceInterval:[1634,1638]},`
`]],["range",{sourceInterval:[1639,1660]},"\0","􏿿"]]]],escapeChar_backslash:["define",{sourceInterval:[1703,1758]},null,[],["terminal",{sourceInterval:[1703,1709]},"\\\\"]],escapeChar_doubleQuote:["define",{sourceInterval:[1765,1822]},null,[],["terminal",{sourceInterval:[1765,1771]},'\\"']],escapeChar_singleQuote:["define",{sourceInterval:[1829,1886]},null,[],["terminal",{sourceInterval:[1829,1835]},"\\'"]],escapeChar_backspace:["define",{sourceInterval:[1893,1948]},null,[],["terminal",{sourceInterval:[1893,1898]},"\\b"]],escapeChar_lineFeed:["define",{sourceInterval:[1955,2009]},null,[],["terminal",{sourceInterval:[1955,1960]},"\\n"]],escapeChar_carriageReturn:["define",{sourceInterval:[2016,2076]},null,[],["terminal",{sourceInterval:[2016,2021]},"\\r"]],escapeChar_tab:["define",{sourceInterval:[2083,2132]},null,[],["terminal",{sourceInterval:[2083,2088]},"\\t"]],escapeChar_unicodeCodePoint:["define",{sourceInterval:[2139,2243]},null,[],["seq",{sourceInterval:[2139,2221]},["terminal",{sourceInterval:[2139,2145]},"\\u{"],["app",{sourceInterval:[2146,2154]},"hexDigit",[]],["opt",{sourceInterval:[2155,2164]},["app",{sourceInterval:[2155,2163]},"hexDigit",[]]],["opt",{sourceInterval:[2165,2174]},["app",{sourceInterval:[2165,2173]},"hexDigit",[]]],["opt",{sourceInterval:[2188,2197]},["app",{sourceInterval:[2188,2196]},"hexDigit",[]]],["opt",{sourceInterval:[2198,2207]},["app",{sourceInterval:[2198,2206]},"hexDigit",[]]],["opt",{sourceInterval:[2208,2217]},["app",{sourceInterval:[2208,2216]},"hexDigit",[]]],["terminal",{sourceInterval:[2218,2221]},"}"]]],escapeChar_unicodeEscape:["define",{sourceInterval:[2250,2309]},null,[],["seq",{sourceInterval:[2250,2291]},["terminal",{sourceInterval:[2250,2255]},"\\u"],["app",{sourceInterval:[2256,2264]},"hexDigit",[]],["app",{sourceInterval:[2265,2273]},"hexDigit",[]],["app",{sourceInterval:[2274,2282]},"hexDigit",[]],["app",{sourceInterval:[2283,2291]},"hexDigit",[]]]],escapeChar_hexEscape:["define",{sourceInterval:[2316,2371]},null,[],["seq",{sourceInterval:[2316,2339]},["terminal",{sourceInterval:[2316,2321]},"\\x"],["app",{sourceInterval:[2322,2330]},"hexDigit",[]],["app",{sourceInterval:[2331,2339]},"hexDigit",[]]]],escapeChar:["define",{sourceInterval:[1664,2371]},"an escape sequence",[],["alt",{sourceInterval:[1703,2371]},["app",{sourceInterval:[1703,1709]},"escapeChar_backslash",[]],["app",{sourceInterval:[1765,1771]},"escapeChar_doubleQuote",[]],["app",{sourceInterval:[1829,1835]},"escapeChar_singleQuote",[]],["app",{sourceInterval:[1893,1898]},"escapeChar_backspace",[]],["app",{sourceInterval:[1955,1960]},"escapeChar_lineFeed",[]],["app",{sourceInterval:[2016,2021]},"escapeChar_carriageReturn",[]],["app",{sourceInterval:[2083,2088]},"escapeChar_tab",[]],["app",{sourceInterval:[2139,2221]},"escapeChar_unicodeCodePoint",[]],["app",{sourceInterval:[2250,2291]},"escapeChar_unicodeEscape",[]],["app",{sourceInterval:[2316,2339]},"escapeChar_hexEscape",[]]]],space:["extend",{sourceInterval:[2375,2394]},null,[],["app",{sourceInterval:[2387,2394]},"comment",[]]],comment_singleLine:["define",{sourceInterval:[2412,2458]},null,[],["seq",{sourceInterval:[2412,2443]},["terminal",{sourceInterval:[2412,2416]},"//"],["star",{sourceInterval:[2417,2429]},["seq",{sourceInterval:[2418,2427]},["not",{sourceInterval:[2418,2423]},["terminal",{sourceInterval:[2419,2423]},`
`]],["app",{sourceInterval:[2424,2427]},"any",[]]]],["lookahead",{sourceInterval:[2430,2443]},["alt",{sourceInterval:[2432,2442]},["terminal",{sourceInterval:[2432,2436]},`
`],["app",{sourceInterval:[2439,2442]},"end",[]]]]]],comment_multiLine:["define",{sourceInterval:[2465,2501]},null,[],["seq",{sourceInterval:[2465,2487]},["terminal",{sourceInterval:[2465,2469]},"/*"],["star",{sourceInterval:[2470,2482]},["seq",{sourceInterval:[2471,2480]},["not",{sourceInterval:[2471,2476]},["terminal",{sourceInterval:[2472,2476]},"*/"]],["app",{sourceInterval:[2477,2480]},"any",[]]]],["terminal",{sourceInterval:[2483,2487]},"*/"]]],comment:["define",{sourceInterval:[2398,2501]},null,[],["alt",{sourceInterval:[2412,2501]},["app",{sourceInterval:[2412,2443]},"comment_singleLine",[]],["app",{sourceInterval:[2465,2487]},"comment_multiLine",[]]]],tokens:["define",{sourceInterval:[2505,2520]},null,[],["star",{sourceInterval:[2514,2520]},["app",{sourceInterval:[2514,2519]},"token",[]]]],token:["define",{sourceInterval:[2524,2600]},null,[],["alt",{sourceInterval:[2532,2600]},["app",{sourceInterval:[2532,2540]},"caseName",[]],["app",{sourceInterval:[2543,2550]},"comment",[]],["app",{sourceInterval:[2553,2558]},"ident",[]],["app",{sourceInterval:[2561,2569]},"operator",[]],["app",{sourceInterval:[2572,2583]},"punctuation",[]],["app",{sourceInterval:[2586,2594]},"terminal",[]],["app",{sourceInterval:[2597,2600]},"any",[]]]],operator:["define",{sourceInterval:[2604,2669]},null,[],["alt",{sourceInterval:[2615,2669]},["terminal",{sourceInterval:[2615,2619]},"<:"],["terminal",{sourceInterval:[2622,2625]},"="],["terminal",{sourceInterval:[2628,2632]},":="],["terminal",{sourceInterval:[2635,2639]},"+="],["terminal",{sourceInterval:[2642,2645]},"*"],["terminal",{sourceInterval:[2648,2651]},"+"],["terminal",{sourceInterval:[2654,2657]},"?"],["terminal",{sourceInterval:[2660,2663]},"~"],["terminal",{sourceInterval:[2666,2669]},"&"]]],punctuation:["define",{sourceInterval:[2673,2709]},null,[],["alt",{sourceInterval:[2687,2709]},["terminal",{sourceInterval:[2687,2690]},"<"],["terminal",{sourceInterval:[2693,2696]},">"],["terminal",{sourceInterval:[2699,2702]},","],["terminal",{sourceInterval:[2705,2709]},"--"]]]}]);const Pi=on,Xt=At,Nt=qr,ln=G,rt=Le,Kt=ze,Wt=ke,Ni=_i,{makeRecipe:Oi}=it;let _t;const vt=Object.create(Kt.PExpr.prototype),ki=t=>!!t.constructor&&typeof t.constructor.isBuffer=="function"&&t.constructor.isBuffer(t);function Yt(t,e,r){const u=new Pi;let n,i,a,p=!1;return(r||_t).createSemantics().addOperation("visit",{Grammars(o){return o.children.map(l=>l.visit())},Grammar(o,l,f,h,E){const A=o.visit();n=u.newGrammar(A,e),l.child(0)&&l.child(0).visit(),h.children.map(b=>b.visit());const y=n.build();if(y.source=this.source.trimmed(),A in e)throw rt.duplicateGrammarDeclaration(y,e);return e[A]=y,y},SuperGrammar(o,l){const f=l.visit();if(f==="null")n.withSuperGrammar(null);else{if(!e||!(f in e))throw rt.undeclaredGrammar(f,e,l.source);n.withSuperGrammar(e[f])}},Rule_define(o,l,f,h,E){i=o.visit(),a=l.children.map(k=>k.visit())[0]||[],!n.defaultStartRule&&n.ensureSuperGrammar()!==Xt.ProtoBuiltInRules&&n.withDefaultStartRule(i);const A=E.visit(),y=f.children.map(k=>k.visit())[0],b=this.source.trimmed();return n.define(i,a,A,y,b)},Rule_override(o,l,f,h){i=o.visit(),a=l.children.map(y=>y.visit())[0]||[];const E=this.source.trimmed();n.ensureSuperGrammarRuleForOverriding(i,E),p=!0;const A=h.visit();return p=!1,n.override(i,a,A,null,E)},Rule_extend(o,l,f,h){i=o.visit(),a=l.children.map(y=>y.visit())[0]||[];const E=h.visit(),A=this.source.trimmed();return n.extend(i,a,E,null,A)},RuleBody(o,l){return u.alt(...l.visit()).withSource(this.source)},OverrideRuleBody(o,l){const f=l.visit(),h=f.indexOf(vt);if(h>=0){const E=f.slice(0,h),A=f.slice(h+1);return A.forEach(y=>{if(y===vt)throw rt.multipleSuperSplices(y)}),new Kt.Splice(n.superGrammar,i,E,A).withSource(this.source)}else return u.alt(...f).withSource(this.source)},Formals(o,l,f){return l.visit()},Params(o,l,f){return l.visit()},Alt(o){return u.alt(...o.visit()).withSource(this.source)},TopLevelTerm_inline(o,l){const f=i+"_"+l.visit(),h=o.visit(),E=this.source.trimmed(),A=!(n.superGrammar&&n.superGrammar.rules[f]);p&&!A?n.override(f,a,h,null,E):n.define(f,a,h,null,E);const y=a.map(b=>u.app(b));return u.app(f,y).withSource(h.source)},OverrideTopLevelTerm_superSplice(o){return vt},Seq(o){return u.seq(...o.children.map(l=>l.visit())).withSource(this.source)},Iter_star(o,l){return u.star(o.visit()).withSource(this.source)},Iter_plus(o,l){return u.plus(o.visit()).withSource(this.source)},Iter_opt(o,l){return u.opt(o.visit()).withSource(this.source)},Pred_not(o,l){return u.not(l.visit()).withSource(this.source)},Pred_lookahead(o,l){return u.lookahead(l.visit()).withSource(this.source)},Lex_lex(o,l){return u.lex(l.visit()).withSource(this.source)},Base_application(o,l){const f=l.children.map(h=>h.visit())[0]||[];return u.app(o.visit(),f).withSource(this.source)},Base_range(o,l,f){return u.range(o.visit(),f.visit()).withSource(this.source)},Base_terminal(o){return u.terminal(o.visit()).withSource(this.source)},Base_paren(o,l,f){return l.visit()},ruleDescr(o,l,f){return l.visit()},ruleDescrText(o){return this.sourceString.trim()},caseName(o,l,f,h,E){return f.visit()},name(o,l){return this.sourceString},nameFirst(o){},nameRest(o){},terminal(o,l,f){return l.children.map(h=>h.visit()).join("")},oneCharTerminal(o,l,f){return l.visit()},escapeChar(o){try{return ln.unescapeCodePoint(this.sourceString)}catch(l){throw l instanceof RangeError&&l.message.startsWith("Invalid code point ")?rt.invalidCodePoint(o):l}},NonemptyListOf(o,l,f){return[o.visit()].concat(f.children.map(h=>h.visit()))},EmptyListOf(){return[]},_terminal(){return this.sourceString}})(t).visit()}function Mi(t,e){const r=_t.match(t,"Grammars");if(r.failed())throw rt.grammarSyntaxError(r);return Yt(r,e)}function Ri(t,e){const r=cn(t,e),u=Object.keys(r);if(u.length===0)throw new Error("Missing grammar definition");if(u.length>1){const i=r[u[1]].source;throw new Error(Wt.getLineAndColumnMessage(i.sourceString,i.startIdx)+"Found more than one grammar definition -- use ohm.grammars() instead.")}return r[u[0]]}function cn(t,e){const r=Nt.extend(Nt.asNamespace(e));if(typeof t!="string")if(ki(t))t=t.toString();else throw new TypeError("Expected string as first argument, got "+ln.unexpectedObjToString(t));return Mi(t,r),r}function $i(t){throw new Error("grammarFromScriptElement was removed in Ohm v16.0. See https://ohmjs.org/d/gfs for more info.")}function Vi(t){throw new Error("grammarsFromScriptElements was removed in Ohm v16.0. See https://ohmjs.org/d/gfs for more info.")}ht.exports={createNamespace:Nt.createNamespace,grammar:Ri,grammars:cn,grammarFromScriptElement:$i,grammarsFromScriptElements:Vi,makeRecipe:Oi,ohmGrammar:null,pexprs:Kt,util:Wt,version:Ni};ht.exports._buildGrammar=Yt;Wt.announceBuiltInRules(Xt.BuiltInRules);ht.exports.ohmGrammar=_t=Li;Xt.initApplicationParser(_t,Yt);var ji=ht.exports;const{assert:He}=G;function qi(t,e,r){return r(e[t])}function Gi(t,e,r){return e[t].map(r)}function mr(t){const e=t.split(/ ?\[\]/);return e.length===2?Gi.bind(null,e[0]):qi.bind(null,t)}function fr(t,e,r){return t.map(u=>u(e,r))}function Ui(t){return typeof t=="string"?fr.bind(null,[mr(t)]):Array.isArray(t)?fr.bind(null,t.map(mr)):(He(typeof t=="function","Expected a string, Array, or function"),He(t.length===2,"Expected a function of arity 2, got "+t.length),t)}function hr(t){return/^[a-zA-Z_][0-9a-zA-Z_]*$/.test(t)}function Dr(t){return t.trim()}function Hi(t){const e=t.split(/[()]/).map(Dr);if(e.length===3&&e[2]===""){const r=e[0];let u=[];if(e[1].length>0&&(u=e[1].split(",").map(Dr)),hr(r)&&u.every(hr))return{name:r,formals:u}}throw new Error("Invalid operation signature: "+t)}function Ft(t){this._shapes=t.shapes,this._getTag=t.getTag,this.Adapter=function(e,r){this._adaptee=e,this._family=r},this.Adapter.prototype.valueOf=function(){throw new Error("heeey!")},this.operations={},this._arities=Object.create(null),this._getChildren=Object.create(null),Object.keys(this._shapes).forEach(e=>{const r=this._shapes[e];this._getChildren[e]=Ui(r),typeof r!="function"&&(this._arities[e]=Array.isArray(r)?r.length:1)}),this._wrap=e=>new this.Adapter(e,this)}Ft.prototype.wrap=function(t){return this._wrap(t)};Ft.prototype._checkActionDict=function(t){Object.keys(t).forEach(e=>{He(e in this._getChildren,"Unrecognized action name '"+e+"'");const r=t[e];if(He(typeof r=="function","Key '"+e+"': expected function, got "+r),e in this._arities){const u=this._arities[e],n=t[e].length;He(n===u,"Action '"+e+"' has the wrong arity: expected "+u+", got "+n)}})};Ft.prototype.addOperation=function(t,e){const r=Hi(t),{name:u}=r;this._checkActionDict(e),this.operations[u]={name:u,formals:r.formals,actions:e};const n=this;return this.Adapter.prototype[u]=function(...i){const a=n._getTag(this._adaptee);He(a in n._getChildren,"getTag returned unrecognized tag '"+a+"'"),He(a in e,"No action for '"+a+"' in operation '"+u+"'");const p=Object.create(null);for(const[o,l]of Object.entries(i))p[r.formals[o]]=l;const s=this.args;this.args=p;const c=e[a].apply(this,n._getChildren[a](this._adaptee,n._wrap));return this.args=s,c},this};var zi=Ft;const pn={_terminal(){return this.sourceString},_nonterminal(...t){const{ctorName:e}=this._node,{mapping:r}=this.args;if(!Object.prototype.hasOwnProperty.call(r,e)){if(this.isLexical())return this.sourceString;const i=t.filter(a=>!a.isTerminal());if(i.length===1)return i[0].toAST(r)}if(typeof r[e]=="number")return t[r[e]].toAST(r);const u=r[e]||t,n={type:e};for(const i in u){const a=r[e]&&r[e][i];typeof a=="number"?n[i]=t[a].toAST(r):typeof a=="string"||typeof a=="boolean"||a===null?n[i]=a:typeof a=="object"&&a instanceof Number?n[i]=Number(a):typeof a=="function"?n[i]=a.call(this,t):a===void 0&&(t[i]&&!t[i].isTerminal()?n[i]=t[i].toAST(r):delete n[i])}return n},_iter(...t){return this._node.isOptional()?this.numChildren===0?null:t[0].toAST(this.args.mapping):t.map(function(e){return e.toAST(this.args.mapping)},this)},NonemptyListOf(t,e,r){return[t.toAST(this.args.mapping)].concat(r.toAST(this.args.mapping))},EmptyListOf(){return[]}};function Xi(t,e){if(typeof t.failed!="function"||t.failed())throw new Error("toAST() expects a succesful MatchResult as first parameter");e=Object.assign({},e);const r=Object.assign({},pn);for(const i in e)typeof e[i]=="function"&&(r[i]=e[i],delete e[i]);return t._cst.grammar.createSemantics().addOperation("toAST(mapping)",r)(t).toAST(e)}function Ki(t){if(typeof t.createSemantics!="function")throw new Error("semanticsToAST() expects a Grammar as parameter");return t.createSemantics().addOperation("toAST(mapping)",pn)}var Er={helper:Xi,semantics:Ki},Wi={VisitorFamily:zi,semanticsForToAST:Er.semantics,toAST:Er.helper};const Yi=Object.freeze(Object.defineProperty({__proto__:null,default:ji,extras:Wi},Symbol.toStringTag,{value:"Module"})),Zi=gn(Yi);var at={},qe={},L={},gr;function Zt(){if(gr)return L;gr=1,Object.defineProperty(L,"__esModule",{value:!0}),L.NumberExpr=L.NameExpr=L.RefExpr=L.NegateExpr=L.MathExpr=L.MathOperator=L.CombinatorExpr=L.BuiltinZeroArgs=L.BuiltinZeroArgsOperators=L.BuiltinOneArgExpr=L.BuiltinOneArgOperators=L.BuiltinExpr=L.CellRefExpr=L.CompareExpr=L.CompareOperator=L.CondExpr=L.Expression=L.Combinator=L.FieldExprDef=L.FieldNamedDef=L.FieldAnonymousDef=L.FieldCurlyExprDef=L.FieldBuiltinDef=L.FieldBuiltinType=L.Field=L.Constructor=L.Declaration=L.Program=L.ASTBase=L.ASTRootBase=void 0;class t{}L.ASTRootBase=t,t._attributes=[];class e extends t{}L.ASTBase=e;class r extends t{constructor(v){super(),this.declarations=v,this.parent=null}}L.Program=r,r._attributes=["declarations"];class u extends e{constructor(v,V,ee){super(),this.constructorDef=v,this.fields=V,this.combinator=ee}}L.Declaration=u,u._attributes=["constructorDef","fields","combinator"];class n extends e{constructor(v,V){super(),this.name=v,this.tag=V}getTagType(){return this.tag===null?null:this.tag.startsWith("$")?"binary":"hex"}}L.Constructor=n;class i extends e{}L.Field=i,L.FieldBuiltinType=["#","Type"];class a extends i{constructor(v,V){super(),this.name=v,this.type=V}}L.FieldBuiltinDef=a;class p extends i{constructor(v){super(),this.expr=v}}L.FieldCurlyExprDef=p,p._attributes=["expr"];class s extends i{constructor(v,V,ee){super(),this.name=v,this.isRef=V,this.fields=ee}}L.FieldAnonymousDef=s,s._attributes=["fields"];class c extends i{constructor(v,V){super(),this.name=v,this.expr=V}}L.FieldNamedDef=c,c._attributes=["expr"];class o extends i{constructor(v){super(),this.expr=v}}L.FieldExprDef=o,o._attributes=["expr"];class l extends e{constructor(v,V){super(),this.name=v,this.args=V}}L.Combinator=l,l._attributes=["args"];class f extends e{}L.Expression=f;class h extends f{constructor(v,V,ee){super(),this.left=v,this.dotExpr=V,this.condExpr=ee}}L.CondExpr=h,h._attributes=["left","condExpr"],L.CompareOperator=["<=",">=","!=","=","<",">"];class E extends f{constructor(v,V,ee){super(),this.left=v,this.op=V,this.right=ee}}L.CompareExpr=E,E._attributes=["left","right"];class A extends f{constructor(v){super(),this.expr=v}}L.CellRefExpr=A,A._attributes=["expr"];class y extends f{}L.BuiltinExpr=y,L.BuiltinOneArgOperators=["#<=","#<","##"];class b extends y{constructor(v,V){super(),this.name=v,this.arg=V}}L.BuiltinOneArgExpr=b,b._attributes=["arg"],L.BuiltinZeroArgsOperators=["#"];class k extends y{constructor(v){super(),this.name=v}}L.BuiltinZeroArgs=k;class g extends f{constructor(v,V){super(),this.name=v,this.args=V}}L.CombinatorExpr=g,g._attributes=["args"],L.MathOperator=["*","+"];class w extends f{constructor(v,V,ee){super(),this.left=v,this.op=V,this.right=ee}}L.MathExpr=w,w._attributes=["left","right"];class $ extends f{constructor(v){super(),this.expr=v}}L.NegateExpr=$,$._attributes=["expr"];class M extends f{}L.RefExpr=M;class N extends M{constructor(v){super(),this.name=v}}L.NameExpr=N;class O extends M{constructor(v){super(),this.num=v}}return L.NumberExpr=O,L}var Cr;function dn(){if(Cr)return qe;Cr=1,Object.defineProperty(qe,"__esModule",{value:!0}),qe.NodeVisitor=void 0,qe.iterChildNodes=e,qe.walk=r;const t=Zt();function*e(n){const i=Object.getPrototypeOf(n).constructor;for(let a of i._attributes){const p=n[a];if(p instanceof Array)for(let s of p)s instanceof t.ASTRootBase&&(yield s);else p instanceof t.ASTRootBase&&(yield p)}}function*r(n){const i=[n];for(;i.length>0;){const a=i.shift();i.push(...e(a)),yield a}}class u{visit(i){const a=i.constructor.name,p=this[`visit${a}`];return p===void 0?this.genericVisit(i):p(i)}genericVisit(i){for(let a of e(i))this.visit(a)}}return qe.NodeVisitor=u,qe}var Ar;function Ji(){if(Ar)return at;Ar=1,Object.defineProperty(at,"__esModule",{value:!0}),at.withParents=e;const t=dn();function e(r){for(let u of(0,t.walk)(r))for(let n of(0,t.iterChildNodes)(u))n.parent=u;return r}return at}var st={},_r;function Qi(){if(_r)return st;_r=1,Object.defineProperty(st,"__esModule",{value:!0});const t=String.raw`
TLB {
  // See:
  // https://github.com/andreypfau/TL-B-docs

  // Root definition
  Program = SourceElement*

  // Utilities
  // Override Ohm's built-in definition of space.
  space := whitespace | lineTerminator | comment

  whitespace =
    | "\t"
    | "\x0B"    -- verticalTab
    | "\x0C"    -- formFeed
    | " "
    | "\u00A0"  -- noBreakSpace
    | "\uFEFF"  -- byteOrderMark
    | "\u2000".."\u200B"
    | "\u3000"

  sourceCharacter = any
  lineTerminator = "\n" | "\r" | "\u2028" | "\u2029"

  // Comments
  comment = multiLineComment | singleLineComment
  multiLineComment = "/*" (~"*/" sourceCharacter)* "*/"
  singleLineComment = "//" (~lineTerminator sourceCharacter)*

  // Data types
  binaryDigit = "0" | "1"
  decimalDigit = "0".."9"
  hex = hexChar* "_"?
  hexChar = decimalDigit | letter

  // Identifiers
  identifier = identifierStart identifierPart*
  identifierStart = "_" | letter
  identifierPart = identifierStart | digit

  // Primitives
  number = digit+

  // Builtins
  builtins_one_arg = "#<=" | "#<" | "##"
  builtins_zero_args = "#"
  builtins_field = "#" | "Type"


  // ----------
  // Base rules
  // ----------
  SourceElement = Declaration | comment
  Declaration = Constructor Fields "=" Combinator ";"


  // Constructors
  // ~~~~~~~~~~~~
  Constructor = ConstructorStart ConstructorTag?
  ConstructorStart = "!"? ("_" | identifier)
  ConstructorTag =
  	| "$" ("_" | binaryDigit+)  -- binary
    | "#" ("_" | hex)           -- hex


  // Fields
  // ~~~~~~
  Fields = FieldDefinition*
  FieldDefinition =
    | FieldBuiltinDef
    | FieldCurlyExprDef
    | FieldAnonymousDef
    | FieldNamedDef
    | FieldExprDef

  FieldBuiltinDef = "{" identifier ":" builtins_field "}"
  FieldCurlyExprDef = "{" CurlyExpression "}"
  FieldAnonymousDef = FieldAnonRef | FieldNamedAnonRef
  FieldNamedDef = identifier ":" CondExpr
  FieldExprDef = CondExpr

  FieldAnonRef = "^"? "[" FieldDefinition* "]"
  FieldNamedAnonRef = identifier ":" FieldAnonRef


  // Combinators
  // ~~~~~~~~~~~

  Combinator = identifier SimpleExpr*


  // Expressions
  // ~~~~~~~~~~~

  // First come the complex rules we only use to define fields.
  // The line between fields definition and expressions is blury at this point.
  CurlyExpression = CompareExpr
  CondExpr =
    | CondDotAndQuestionExpr
    | CondQuestionExpr
    | CondTypeExpr

  CondDotted = TypeExpr "." number
  CondDotAndQuestionExpr = ( CondDotted | Parens<CondDotted> ) "?" TypeExpr
  CondQuestionExpr = TypeExpr "?" TypeExpr
  CondTypeExpr = TypeExpr

  // Compares:
  CompareExpr =
    | CompareOperatorExpr
    | Parens<CompareExpr>
    | MathExpr

  CompareOperatorExpr =
    | MathExpr "<=" MathExpr
    | MathExpr ">=" MathExpr
    | MathExpr "!=" MathExpr
    | MathExpr "=" MathExpr
    | MathExpr "<" MathExpr
    | MathExpr ">" MathExpr

  // Base rule for field defining expressions:
  TypeExpr =
    | CellRefExpr
    | BuiltinExpr
    | CombinatorExpr
    | SimpleExpr
    | Parens<TypeExpr>

  // Math:
  MathExpr = MulExpr ("+" MulExpr)*
  // You can multiply by constant values only: 'Bit' and numbers, basically
  MulExpr = SimpleExpr ("*" RefExpr)*

  // TypeExpr's items:
  CellRefExpr = "^" ( CellRefInner | Parens<CellRefInner> )
  CellRefInner = CombinatorExpr | identifier

  BuiltinExpr = BuiltinOneArg | BuiltinZeroArgs
  // This needs extra 'Parens' because of '(##)' expr:
  BuiltinOneArg = "(" ( builtins_one_arg | Parens<builtins_one_arg> ) RefExpr ")"
  BuiltinZeroArgs = builtins_zero_args

  // It is different from 'Combinator' only in the quantity part:
  // we always need at least one argument here and it can be complex.
  CombinatorExpr = "(" identifier TypeExpr+ ")"

  SimpleExpr =
    | NegateExpr
    | MathExpr
    | RefExpr
    | Parens<SimpleExpr>

  NegateExpr = "~" SimpleExpr
  RefExpr = RefInner | Parens<RefInner>
  RefInner = identifier | number


  // Helpers
  // ~~~~~~~

  // Generic rule to allow parens around some expressions:
  Parens<expr> = "(" expr ")"
}
`;return st.default=t,st}var ne={},ot={},Fr;function ea(){if(Fr)return ot;Fr=1,Object.defineProperty(ot,"__esModule",{value:!0}),ot.withLocations=t;function t(e,r){const u=r.source.getLineAndColumn();return e.locations={line:u.lineNum,column:u.colNum},e}return ot}var yr;function ta(){if(yr)return ne;yr=1;var t=ne&&ne.__createBinding||(Object.create?(function(a,p,s,c){c===void 0&&(c=s);var o=Object.getOwnPropertyDescriptor(p,s);(!o||("get"in o?!p.__esModule:o.writable||o.configurable))&&(o={enumerable:!0,get:function(){return p[s]}}),Object.defineProperty(a,c,o)}):(function(a,p,s,c){c===void 0&&(c=s),a[c]=p[s]})),e=ne&&ne.__setModuleDefault||(Object.create?(function(a,p){Object.defineProperty(a,"default",{enumerable:!0,value:p})}):function(a,p){a.default=p}),r=ne&&ne.__importStar||(function(){var a=function(p){return a=Object.getOwnPropertyNames||function(s){var c=[];for(var o in s)Object.prototype.hasOwnProperty.call(s,o)&&(c[c.length]=o);return c},a(p)};return function(p){if(p&&p.__esModule)return p;var s={};if(p!=null)for(var c=a(p),o=0;o<c.length;o++)c[o]!=="default"&&t(s,p,c[o]);return e(s,p),s}})();Object.defineProperty(ne,"__esModule",{value:!0}),ne.exprNodes=ne.combinatorNodes=ne.fieldNodes=ne.constructorNodes=ne.rootNodes=void 0;const u=r(Zt()),n=ea();ne.rootNodes={Program(a){return(0,n.withLocations)(new u.Program(a.children.map(p=>p.root())),a)},SourceElement(a){return(0,n.withLocations)(new u.Declaration(a.child(0).Constructor(),a.child(1).Field(),a.child(3).Combinator()),a)}},ne.constructorNodes={Constructor(a,p){const s=a.sourceString;let c=null;return p.numChildren!==0&&(c=p.child(0).Constructor()),(0,n.withLocations)(new u.Constructor(s,c),a)},ConstructorTag(a){return a.sourceString}},ne.fieldNodes={Fields(a){return a.children.map(p=>p.Field())},FieldDefinition(a){return a.Field()},FieldBuiltinDef(a,p,s,c,o){return(0,n.withLocations)(new u.FieldBuiltinDef(p.sourceString,c.sourceString),a)},FieldCurlyExprDef(a,p,s){return(0,n.withLocations)(new u.FieldCurlyExprDef(p.expr()),a)},FieldAnonymousDef(a){const{name:p,isRef:s,fields:c}=a.Field();return(0,n.withLocations)(new u.FieldAnonymousDef(p,s,c),a)},FieldNamedDef(a,p,s){return(0,n.withLocations)(new u.FieldNamedDef(a.sourceString,s.expr()),a)},FieldExprDef(a){return(0,n.withLocations)(new u.FieldExprDef(a.expr()),a)},FieldAnonRef(a,p,s,c){return{name:null,isRef:a.numChildren!==0,fields:s.children.map(o=>o.Field())}},FieldNamedAnonRef(a,p,s){return Object.assign(Object.assign({},s.Field()),{name:a.sourceString})}},ne.combinatorNodes={Combinator(a,p){return(0,n.withLocations)(new u.Combinator(a.sourceString,p.children.map(s=>s.expr())),a)}},ne.exprNodes={MathExpr(a,p,s){return i(a,p,s)},MulExpr(a,p,s){return i(a,p,s)},CompareExpr(a){return a.expr()},CompareOperatorExpr(a,p,s){return(0,n.withLocations)(new u.CompareExpr(a.expr(),p.sourceString,s.expr()),p)},CondExpr(a){const{leftExpr:p,dotExpr:s,condExpr:c}=a.expr();return s===void 0&&c===void 0?p:(0,n.withLocations)(new u.CondExpr(p,s,c),a)},CondDotAndQuestionExpr(a,p,s){return Object.assign(Object.assign({},a.expr()),{condExpr:s.expr()})},CondQuestionExpr(a,p,s){return{leftExpr:a.expr(),dotExpr:null,condExpr:s.expr()}},CondTypeExpr(a){return{leftExpr:a.expr()}},CondDotted(a,p,s){return{leftExpr:a.expr(),dotExpr:new Number(s.sourceString)}},CombinatorExpr(a,p,s,c){return(0,n.withLocations)(new u.CombinatorExpr(p.sourceString,s.children.map(o=>o.expr())),a)},CellRefExpr(a,p){return(0,n.withLocations)(new u.CellRefExpr(p.expr()),a)},BuiltinExpr(a){return(0,n.withLocations)(a.expr(),a)},NegateExpr(a,p){return(0,n.withLocations)(new u.NegateExpr(p.expr()),a)},BuiltinOneArg(a,p,s,c){return(0,n.withLocations)(new u.BuiltinOneArgExpr(p.sourceString,s.expr()),a)},BuiltinZeroArgs(a){return(0,n.withLocations)(new u.BuiltinZeroArgs(a.sourceString),a)},identifier(a,p){return(0,n.withLocations)(new u.NameExpr(a.sourceString+p.sourceString),a)},number(a){return(0,n.withLocations)(new u.NumberExpr(parseInt(a.sourceString)),a)},Parens(a,p,s){return(0,n.withLocations)(p.expr(),a)}};function i(a,p,s){const c=a.expr(),o=[];for(let h of p.children)o.push(h.sourceString);const l=[];for(let h of s.children){const E=h.expr();E!==void 0&&l.push(E)}if(o.length!==l.length)throw new Error("Invalid math operation");if(o.length===0)return(0,n.withLocations)(c,a);let f=(0,n.withLocations)(new u.MathExpr(c,o[0],l[0]),a);for(let h=1;h<o.length;h++)f=(0,n.withLocations)(new u.MathExpr(f,o[h],l[h]),a);return f}return ne}var Br;function ra(){if(Br)return je;Br=1;var t=je&&je.__importDefault||function(p){return p&&p.__esModule?p:{default:p}};Object.defineProperty(je,"__esModule",{value:!0}),je.buildGrammar=i,je.buildAST=a;const e=t(Zi),r=Ji(),u=t(Qi()),n=ta();function i(){return e.default.grammar(u.default)}function a(p,s){const c=s.createSemantics();c.addOperation("root",n.rootNodes),c.addOperation("Constructor",n.constructorNodes),c.addOperation("Field",n.fieldNodes),c.addOperation("Combinator",n.combinatorNodes),c.addOperation("expr",n.exprNodes);const o=s.match(p),l=c(o).root();return(0,r.withParents)(l)}return je}var br;function Xe(){return br||(br=1,(function(t){Object.defineProperty(t,"__esModule",{value:!0}),t.MathOperator=t.BuiltinZeroArgsOperators=t.BuiltinOneArgOperators=t.CompareOperator=t.FieldBuiltinType=t.NumberExpr=t.NameExpr=t.RefExpr=t.NegateExpr=t.MathExpr=t.CombinatorExpr=t.BuiltinZeroArgs=t.BuiltinOneArgExpr=t.BuiltinExpr=t.CellRefExpr=t.CompareExpr=t.CondExpr=t.Expression=t.Combinator=t.FieldExprDef=t.FieldNamedDef=t.FieldAnonymousDef=t.FieldCurlyExprDef=t.FieldBuiltinDef=t.Field=t.Constructor=t.Declaration=t.Program=t.ASTBase=t.ASTRootBase=t.NodeVisitor=void 0,t.parse=r,t.ast=u;const e=ra();function r(a,p=void 0){return p===void 0&&(p=(0,e.buildGrammar)()),p.match(a)}function u(a){return(0,e.buildAST)(a,(0,e.buildGrammar)())}var n=dn();Object.defineProperty(t,"NodeVisitor",{enumerable:!0,get:function(){return n.NodeVisitor}});var i=Zt();Object.defineProperty(t,"ASTRootBase",{enumerable:!0,get:function(){return i.ASTRootBase}}),Object.defineProperty(t,"ASTBase",{enumerable:!0,get:function(){return i.ASTBase}}),Object.defineProperty(t,"Program",{enumerable:!0,get:function(){return i.Program}}),Object.defineProperty(t,"Declaration",{enumerable:!0,get:function(){return i.Declaration}}),Object.defineProperty(t,"Constructor",{enumerable:!0,get:function(){return i.Constructor}}),Object.defineProperty(t,"Field",{enumerable:!0,get:function(){return i.Field}}),Object.defineProperty(t,"FieldBuiltinDef",{enumerable:!0,get:function(){return i.FieldBuiltinDef}}),Object.defineProperty(t,"FieldCurlyExprDef",{enumerable:!0,get:function(){return i.FieldCurlyExprDef}}),Object.defineProperty(t,"FieldAnonymousDef",{enumerable:!0,get:function(){return i.FieldAnonymousDef}}),Object.defineProperty(t,"FieldNamedDef",{enumerable:!0,get:function(){return i.FieldNamedDef}}),Object.defineProperty(t,"FieldExprDef",{enumerable:!0,get:function(){return i.FieldExprDef}}),Object.defineProperty(t,"Combinator",{enumerable:!0,get:function(){return i.Combinator}}),Object.defineProperty(t,"Expression",{enumerable:!0,get:function(){return i.Expression}}),Object.defineProperty(t,"CondExpr",{enumerable:!0,get:function(){return i.CondExpr}}),Object.defineProperty(t,"CompareExpr",{enumerable:!0,get:function(){return i.CompareExpr}}),Object.defineProperty(t,"CellRefExpr",{enumerable:!0,get:function(){return i.CellRefExpr}}),Object.defineProperty(t,"BuiltinExpr",{enumerable:!0,get:function(){return i.BuiltinExpr}}),Object.defineProperty(t,"BuiltinOneArgExpr",{enumerable:!0,get:function(){return i.BuiltinOneArgExpr}}),Object.defineProperty(t,"BuiltinZeroArgs",{enumerable:!0,get:function(){return i.BuiltinZeroArgs}}),Object.defineProperty(t,"CombinatorExpr",{enumerable:!0,get:function(){return i.CombinatorExpr}}),Object.defineProperty(t,"MathExpr",{enumerable:!0,get:function(){return i.MathExpr}}),Object.defineProperty(t,"NegateExpr",{enumerable:!0,get:function(){return i.NegateExpr}}),Object.defineProperty(t,"RefExpr",{enumerable:!0,get:function(){return i.RefExpr}}),Object.defineProperty(t,"NameExpr",{enumerable:!0,get:function(){return i.NameExpr}}),Object.defineProperty(t,"NumberExpr",{enumerable:!0,get:function(){return i.NumberExpr}}),Object.defineProperty(t,"FieldBuiltinType",{enumerable:!0,get:function(){return i.FieldBuiltinType}}),Object.defineProperty(t,"CompareOperator",{enumerable:!0,get:function(){return i.CompareOperator}}),Object.defineProperty(t,"BuiltinOneArgOperators",{enumerable:!0,get:function(){return i.BuiltinOneArgOperators}}),Object.defineProperty(t,"BuiltinZeroArgsOperators",{enumerable:!0,get:function(){return i.BuiltinZeroArgsOperators}}),Object.defineProperty(t,"MathOperator",{enumerable:!0,get:function(){return i.MathOperator}})})(Bt)),Bt}var Ge={},J={},xr;function Ke(){if(xr)return J;xr=1,Object.defineProperty(J,"__esModule",{value:!0}),J.TLBCode=J.TLBType=J.TLBConstructor=J.TLBParameter=J.TLBVariable=J.TLBVarExpr=J.TLBUnaryOp=J.TLBNumberExpr=J.TLBBinaryOp=void 0;class t{constructor(o,l,f,h=new Set([...o.variables,...l.variables]),E=o.hasNeg||l.hasNeg){this.left=o,this.right=l,this.operation=f,this.variables=h,this.hasNeg=E}}J.TLBBinaryOp=t;class e{constructor(o,l=new Set,f=!1){this.n=o,this.variables=l,this.hasNeg=f}}J.TLBNumberExpr=e;class r{constructor(o,l,f=o.variables,h=o.hasNeg){this.value=o,this.operation=l,this.variables=f,this.hasNeg=h}}J.TLBUnaryOp=r;class u{constructor(o,l=new Set,f=!1){this.x=o,this.variables=l,this.hasNeg=f,l.size==0&&l.add(o)}}J.TLBVarExpr=u;class n{constructor(o,l,f,h,E,A,y){this.isConst=o,this.negated=l,this.type=f,this.name=h,this.isField=E,this.deriveExpr=A,this.initialExpr=y}}J.TLBVariable=n;class i{constructor(o,l,f){this.variable=o,this.paramExpr=l,this.argName=f}}J.TLBParameter=i;class a{constructor(o,l,f,h,E,A,y,b,k,g){this.parameters=o,this.variables=l,this.variablesMap=f,this.parametersMap=h,this.name=E,this.fields=A,this.tag=y,this.constraints=b,this.declaration=k,this.tlbType=g}}J.TLBConstructor=a;class p{constructor(o,l){this.name=o,this.constructors=l}}J.TLBType=p;class s{constructor(o){this.types=o}}return J.TLBCode=s,J}var se={},vr;function yt(){if(vr)return se;vr=1,Object.defineProperty(se,"__esModule",{value:!0}),se.crc32=se.getSubStructName=se.findNotReservedName=se.isNameReserved=se.bitLen=se.getCurrentSlice=se.firstLower=void 0;function t(s){return s.charAt(0).toLowerCase()+s.slice(1)}se.firstLower=t;function e(s,c){let o=c;return s=s.slice(0,s.length-1),s.forEach(l=>{o+=l.toString()}),o=="cell"?"builder":o}se.getCurrentSlice=e;function r(s){return s.toString(2).length}se.bitLen=r;function u(s){return!!(["abstract","arguments","await","boolean","break","byte","case","catch","char","class","const","continue","debugger","default","delete","do","double","else","enum","eval","export","extends","false","final","finally","float","for","function","goto","if","implements","import","in","instanceof","int","interface","let","long","native","new","null","package","private","protected","public","return","short","static","super","switch","synchronized","this","throw","throws","transient","true","try","typeof","var","void","volatile","while","with","yield"].includes(s)||s.startsWith("slice")||s.startsWith("cell")||s=="builder")}se.isNameReserved=u;function n(s,c="0"){for((s.startsWith("slice")||s.startsWith("cell"))&&(s="_"+s);u(s);)s+=c;return s}se.findNotReservedName=n;function i(s,c){return s.constructors.length>1?s.name+"_"+c.name:s.name}se.getSubStructName=i;const a=-306674912;function p(s,c=4294967295){let o=c;for(let l=0;l<s.length;l++)o^=s[l],o=o&1?o>>>1^a:o>>>1,o=o&1?o>>>1^a:o>>>1,o=o&1?o>>>1^a:o>>>1,o=o&1?o>>>1^a:o>>>1,o=o&1?o>>>1^a:o>>>1,o=o&1?o>>>1^a:o>>>1,o=o&1?o>>>1^a:o>>>1,o=o&1?o>>>1^a:o>>>1;return(o^-1)>>>0}return se.crc32=p,se}var Ye={},Ze={},Q={},Sr;function mn(){if(Sr)return Q;Sr=1,Object.defineProperty(Q,"__esModule",{value:!0}),Q.convertToMathExpr=Q.getNegatedVariable=Q.reorganizeExpression=Q.getVariableName=Q.deriveMathExpression=Q.splitForTypeValue=Q.getCalculatedExpression=Q.calculateVariable=Q.opCodeSetsEqual=void 0;const t=Xe(),e=Ke();function r(l,f){if(l===f)return!0;if(l==null||f==null||l.length!==f.length)return!1;l=l.sort(),f=f.sort();for(var h=0;h<l.length;++h)if(l[h]!==f[h])return!1;return!0}Q.opCodeSetsEqual=r;function u(l,f){l.calculated||l.deriveExpr&&(l.calculated=!0,l.deriveExpr=n(l.deriveExpr,f))}Q.calculateVariable=u;function n(l,f){if(l instanceof e.TLBVarExpr){let h=f.variablesMap.get(l.x);if(h&&(u(h,f),h.deriveExpr))return h.deriveExpr}if(l instanceof e.TLBBinaryOp){let h=n(l.left,f),E=n(l.right,f);return new e.TLBBinaryOp(h,E,l.operation,l.variables,l.hasNeg)}return l}Q.getCalculatedExpression=n;function i(l,f){if(!l.startsWith(f))return;let h=parseInt(l.slice(f.length));if(h!=null&&l==f+h.toString())return h}Q.splitForTypeValue=i;function a(l){let f=o(l);return{name:p(f),derived:f}}Q.deriveMathExpression=a;function p(l){if(l instanceof e.TLBVarExpr)return l.x;if(l instanceof e.TLBBinaryOp)return l.left.variables.size?p(l.left):p(l.right)}Q.getVariableName=p;function s(l,f){if(l instanceof e.TLBBinaryOp&&l.operation=="="){if(l.left.variables.has(f)&&(l=new e.TLBBinaryOp(l.right,l.left,"=",l.variables,l.hasNeg)),l.right instanceof e.TLBVarExpr)return new e.TLBBinaryOp(l.right,l.left,"=",l.variables,l.hasNeg);let h=l.right;if(h instanceof e.TLBBinaryOp){let E="";if(h.operation=="*")E="/";else if(h.operation=="+")E="-";else throw new Error("invalid operation");let A,y;h.left.variables.has(f)?(A=h.left,y=h.right):(y=h.left,A=h.right);let b=new e.TLBBinaryOp(l.left,y,E);return l=new e.TLBBinaryOp(b,A,"=",new Set([...b.variables,...A.variables]),b.hasNeg||h.hasNeg),s(l,f)}}throw new Error(`Couldn't reogranize expression: ${l}`)}Q.reorganizeExpression=s;function c(l){if(l.hasNeg){if(l instanceof e.TLBBinaryOp){if(l.left.hasNeg)return c(l.left);if(l.right.hasNeg)return c(l.right)}if(l instanceof e.TLBVarExpr)return l.x}}Q.getNegatedVariable=c;function o(l,f=!1){if(l instanceof t.NameExpr){let h=new Set;return h.add(l.name),new e.TLBVarExpr(l.name,h,f)}if(l instanceof t.NumberExpr)return new e.TLBNumberExpr(l.num,new Set,!1);if(l instanceof t.MathExpr){let h=o(l.left,f),E=o(l.right,f);return new e.TLBBinaryOp(h,E,l.op)}if(l instanceof t.CompareExpr){let h=o(l.left,f),E=o(l.right,f),A=l.op;return new e.TLBBinaryOp(h,E,A)}if(l instanceof t.NegateExpr&&(l.expr instanceof t.MathExpr||l.expr instanceof t.NameExpr||l.expr instanceof t.NumberExpr)){let h=o(l.expr,!0);if(h instanceof e.TLBBinaryOp)return new e.TLBBinaryOp(h.left,h.right,h.operation,h.variables,!0);if(h instanceof e.TLBVarExpr)return new e.TLBVarExpr(h.x,h.variables,!0);if(h instanceof e.TLBNumberExpr)return new e.TLBNumberExpr(h.n,h.variables,!0)}throw new Error(`Could not convert expression: ${l}`)}return Q.convertToMathExpr=o,Q}var Tr;function na(){if(Tr)return Ze;Tr=1,Object.defineProperty(Ze,"__esModule",{value:!0}),Ze.getType=void 0;const t=Xe(),e=Ke(),r=mn();function u(n,i,a){var p;if(n instanceof t.BuiltinZeroArgs){if(n.name=="#")return{kind:"TLBNumberType",bits:new e.TLBNumberExpr(32),storeBits:new e.TLBNumberExpr(32),signed:!1,maxBits:32};throw new Error("Expression not supported"+n)}else if(n instanceof t.BuiltinOneArgExpr){if(n.name.toString()=="##"||n.name.toString()=="(##)"){if(n.arg instanceof t.NumberExpr)return{kind:"TLBNumberType",bits:new e.TLBNumberExpr(n.arg.num),storeBits:new e.TLBNumberExpr(n.arg.num),signed:!1,maxBits:n.arg.num};if(n.arg instanceof t.NameExpr){let s=i.parametersMap.get(n.arg.name);if(!s||!s.variable.deriveExpr||!s.variable.initialExpr)throw new Error(`Couldn't handle expression ${n}`);return{kind:"TLBNumberType",bits:(0,r.getCalculatedExpression)(s.variable.deriveExpr,i),storeBits:s.variable.initialExpr,signed:!1,maxBits:void 0}}else throw new Error(`Couldn't handle expression ${n}`)}else if(n.name=="#<")if(n.arg instanceof t.NumberExpr||n.arg instanceof t.NameExpr){let s=new e.TLBUnaryOp(new e.TLBBinaryOp((0,r.getCalculatedExpression)((0,r.convertToMathExpr)(n.arg),i),new e.TLBNumberExpr(1),"-"),".");return{kind:"TLBNumberType",bits:s,storeBits:s,signed:!1,maxBits:32}}else throw new Error(`Couldn't handle expression ${n}`);else if(n.name=="#<=")if(n.arg instanceof t.NumberExpr||n.arg instanceof t.NameExpr){let s=new e.TLBUnaryOp((0,r.getCalculatedExpression)((0,r.convertToMathExpr)(n.arg),i),".");return{kind:"TLBNumberType",bits:s,storeBits:s,signed:!1,maxBits:32}}else throw new Error(`Couldn't handle expression ${n}`)}else if(n instanceof t.CombinatorExpr){if(n.name=="int"&&n.args.length==1&&(n.args[0]instanceof t.MathExpr||n.args[0]instanceof t.NumberExpr||n.args[0]instanceof t.NameExpr))return{kind:"TLBNumberType",bits:(0,r.getCalculatedExpression)((0,r.convertToMathExpr)(n.args[0]),i),storeBits:(0,r.convertToMathExpr)(n.args[0]),signed:!0,maxBits:void 0};if(n.name=="uint"&&n.args.length==1&&(n.args[0]instanceof t.MathExpr||n.args[0]instanceof t.NumberExpr||n.args[0]instanceof t.NameExpr))return{kind:"TLBNumberType",bits:(0,r.getCalculatedExpression)((0,r.convertToMathExpr)(n.args[0]),i),storeBits:(0,r.convertToMathExpr)(n.args[0]),signed:!1,maxBits:void 0};if(n.name=="bits"&&n.args.length==1&&(n.args[0]instanceof t.MathExpr||n.args[0]instanceof t.NumberExpr||n.args[0]instanceof t.NameExpr))return{kind:"TLBBitsType",bits:(0,r.getCalculatedExpression)((0,r.convertToMathExpr)(n.args[0]),i)};if(n.name=="HashmapE"){if(n.args.length!=2)throw new Error("");let s=u(n.args[0],i,a),c=u(n.args[1],i,a);if(s.kind!="TLBExprMathType")throw new Error("Hashmap key should be number");return{kind:"TLBHashmapType",key:s,value:c,directStore:!1}}else if(n.name=="HashmapAugE"){if(n.args.length!=3)throw new Error("Not enough arguments for HashmapAugE");let s=u(n.args[0],i,a),c=u(n.args[1],i,a),o=u(n.args[2],i,a);if(s.kind!="TLBExprMathType")throw new Error("Hashmap key should be number");return{kind:"TLBHashmapType",key:s,value:c,extra:o,directStore:!1}}else if(n.name=="Hashmap"&&i.tlbType!="HashmapNode"){let s=u(n.args[0],i,a),c=u(n.args[1],i,a);if(s.kind!="TLBExprMathType")throw new Error("Hashmap key should be number");return{kind:"TLBHashmapType",key:s,value:c,directStore:!0}}else{if(n.name=="VarUInteger"&&(n.args[0]instanceof t.MathExpr||n.args[0]instanceof t.NumberExpr||n.args[0]instanceof t.NameExpr))return{kind:"TLBVarIntegerType",n:new e.TLBUnaryOp(new e.TLBBinaryOp((0,r.convertToMathExpr)(n.args[0]),new e.TLBNumberExpr(1),"-"),"."),signed:!1};if(n.name=="VarInteger"&&(n.args[0]instanceof t.MathExpr||n.args[0]instanceof t.NumberExpr||n.args[0]instanceof t.NameExpr))return{kind:"TLBVarIntegerType",n:(0,r.convertToMathExpr)(n.args[0]),signed:!0};{let s=[];return n.args.forEach(c=>{let o=u(c,i,a);s.push(o)}),{kind:"TLBNamedType",name:n.name,arguments:s}}}}else if(n instanceof t.NameExpr){let s;return n.name=="Int"?{kind:"TLBNumberType",bits:new e.TLBNumberExpr(257),storeBits:new e.TLBNumberExpr(257),signed:!0,maxBits:257}:n.name=="VmStack"?{kind:"TLBTupleType"}:n.name=="Bits"?{kind:"TLBBitsType",bits:new e.TLBNumberExpr(1023)}:n.name=="Bit"?{kind:"TLBBitsType",bits:new e.TLBNumberExpr(1)}:n.name=="Uint"?{kind:"TLBNumberType",bits:new e.TLBNumberExpr(257),storeBits:new e.TLBNumberExpr(257),signed:!1,maxBits:257}:n.name=="Any"||n.name=="Cell"?{kind:"TLBCellType"}:(s=(0,r.splitForTypeValue)(n.name,"int"))!=null?{kind:"TLBNumberType",bits:new e.TLBNumberExpr(s),storeBits:new e.TLBNumberExpr(s),signed:!0,maxBits:s}:(s=(0,r.splitForTypeValue)(n.name,"uint"))!=null?{kind:"TLBNumberType",bits:new e.TLBNumberExpr(s),storeBits:new e.TLBNumberExpr(s),signed:!1,maxBits:s}:(s=(0,r.splitForTypeValue)(n.name,"bits"))!=null?{kind:"TLBBitsType",bits:new e.TLBNumberExpr(s)}:n.name=="MsgAddressInt"?{kind:"TLBAddressType",addrType:"Internal"}:n.name=="MsgAddressExt"?{kind:"TLBAddressType",addrType:"External"}:n.name=="MsgAddress"?{kind:"TLBAddressType",addrType:"Any"}:n.name=="Bit"?{kind:"TLBBitsType",bits:new e.TLBNumberExpr(1)}:n.name=="Grams"||n.name=="Coins"?{kind:"TLBCoinsType"}:n.name=="Bool"?{kind:"TLBBoolType",value:void 0}:n.name=="BoolFalse"?{kind:"TLBBoolType",value:!1}:n.name=="BoolTrue"?{kind:"TLBBoolType",value:!0}:((p=i.variablesMap.get(n.name))===null||p===void 0?void 0:p.type)=="#"?{kind:"TLBExprMathType",expr:(0,r.getCalculatedExpression)(new e.TLBVarExpr(n.name),i),initialExpr:new e.TLBVarExpr(n.name)}:{kind:"TLBNamedType",name:n.name,arguments:[]}}else{if(n instanceof t.NumberExpr)return{kind:"TLBExprMathType",expr:new e.TLBNumberExpr(n.num),initialExpr:new e.TLBNumberExpr(n.num)};if(n instanceof t.NegateExpr&&n.expr instanceof t.NameExpr)return{kind:"TLBNegatedType",variableName:n.expr.name};if(n instanceof t.CellRefExpr)return{kind:"TLBCellInsideType",value:u(n.expr,i,a)};if(n instanceof t.MathExpr)if(a=="")if(n.op=="*"){let s=u(n.right,i,a);return{kind:"TLBMultipleType",times:(0,r.getCalculatedExpression)((0,r.convertToMathExpr)(n.left),i),value:s}}else throw new Error(`Couldn't handle expression ${n}`);else return{kind:"TLBExprMathType",expr:(0,r.getCalculatedExpression)((0,r.convertToMathExpr)(n),i),initialExpr:(0,r.convertToMathExpr)(n)};else if(n instanceof t.CondExpr){let s=u(n.condExpr,i,a);if(n.left instanceof t.NameExpr){let c=(0,r.getCalculatedExpression)((0,r.convertToMathExpr)(n.left),i);return n.dotExpr!=null&&(c=new e.TLBBinaryOp(c,new e.TLBBinaryOp(new e.TLBNumberExpr(1),new e.TLBNumberExpr(n.dotExpr),"<<"),"&")),{kind:"TLBCondType",value:s,condition:c}}}else throw new Error(`Couldn't handle expression ${n}`)}throw new Error(`Couldn't handle expression ${n}`)}return Ze.getType=u,Ze}var Ir;function ua(){if(Ir)return Ye;Ir=1,Object.defineProperty(Ye,"__esModule",{value:!0}),Ye.fillFields=void 0;const t=Xe(),e=na();function r(n,i,a){if(n instanceof t.FieldAnonymousDef){let p={name:"",anonymous:!0,fieldType:{kind:"TLBNamedType",name:"Bool",arguments:[]},subFields:[]},s=0;return n.fields.forEach(c=>{let o=r(c,i,a+"_"+s.toString());o&&p.subFields.push(o),s++}),p}if(n instanceof t.FieldNamedDef||n instanceof t.FieldExprDef){let p;if(n instanceof t.FieldNamedDef?p=n.name:p="anon"+a,n instanceof t.FieldExprDef&&n.expr instanceof t.NameExpr&&n.expr.name=="_")return;if(n.expr instanceof t.CellRefExpr){if(n.expr.expr instanceof t.CombinatorExpr&&(n.expr.expr.name=="MERKLE_UPDATE"||n.expr.expr.name=="MERKLE_ROOT"))return{name:p,anonymous:!0,fieldType:{kind:"TLBExoticType"},subFields:[]};{let s=r(new t.FieldNamedDef(p,n.expr.expr),i,a+"_0");return s&&{name:p,anonymous:!0,fieldType:{kind:"TLBNamedType",name:"Bool",arguments:[]},subFields:[s]}}}if(n.expr instanceof t.CombinatorExpr||n.expr instanceof t.NameExpr||n.expr instanceof t.BuiltinZeroArgs||n.expr instanceof t.BuiltinOneArgExpr||n.expr instanceof t.MathExpr||n.expr instanceof t.CondExpr){let s;n.expr instanceof t.MathExpr||n.expr instanceof t.CondExpr?s="":s=n.expr.name;let c=(0,e.getType)(n.expr,i,s);return{name:p,anonymous:!(n instanceof t.FieldNamedDef),fieldType:c,subFields:[]}}}}function u(n,i){let a=n.constructor,p=n.declaration,s=-1;p.fields.forEach(c=>{s++;let o=r(c,a,s.toString());o!=null&&a.fields.push(o)})}return Ye.fillFields=u,Ye}var wr;function Lr(){if(wr)return Ge;wr=1,Object.defineProperty(Ge,"__esModule",{value:!0}),Ge.convertCodeToReadonly=Ge.fillConstructors=void 0;const t=Xe(),e=Ke(),r=yt(),u=ua(),n=mn();function i(m,C,d){let D=new Map;m.forEach(_=>{let S=C.types.get(_.combinator.name);S==null&&(S={name:_.combinator.name,constructors:[]});let T={parameters:[],parametersMap:new Map,name:_.constructorDef.name,variables:new Array,variablesMap:new Map,tag:f(_),constraints:[],fields:[],declaration:"",tlbType:S.name};S.constructors.push(T),C.types.set(S.name,S);let H=D.get(S.name);H||(H=[]),H.push({declaration:_,constructor:T}),D.set(S.name,H)}),C.types.forEach(_=>{var S;(S=D.get(_.name))===null||S===void 0||S.forEach(T=>{let H=T.declaration,U=T.constructor;H.fields.forEach(R=>{R instanceof t.FieldBuiltinDef&&U.variables.push({name:R.name,isConst:!1,negated:!1,type:R.type,calculated:!1,isField:!1}),R instanceof t.FieldNamedDef&&U.variables.push({name:R.name,isConst:!1,negated:!1,type:"#",calculated:!1,isField:!0})}),U.variables.forEach(R=>{R.name&&U.variablesMap.set(R.name,R)});let Ie=-1;H.combinator.args.forEach(R=>{Ie++;let z;if(R instanceof t.NameExpr){let Z=U.variablesMap.get(R.name);if(Z)Z.type=="#"&&(Z.deriveExpr=new e.TLBVarExpr(R.name),Z.initialExpr=Z.deriveExpr),z={variable:Z,paramExpr:new e.TLBVarExpr(R.name)};else throw new Error("Field not known before using (should be tagged as implicit): "+R)}else if(R instanceof t.MathExpr){let Z=(0,n.deriveMathExpression)(R);if(!Z.name)throw new Error(`Expression should contain variable ${R}`);let F=U.variablesMap.get(Z.name);if(F&&F.name)z={variable:F,paramExpr:Z.derived},z.argName="arg"+Ie,z.variable.deriveExpr=l((0,n.convertToMathExpr)(R),z.argName,F.name),z.variable.initialExpr=new e.TLBVarExpr(F.name);else throw new Error(`Variable should have name ${F}`)}else if(R instanceof t.NegateExpr&&(R.expr instanceof t.MathExpr||R.expr instanceof t.NumberExpr||R.expr instanceof t.NameExpr)){let Z=(0,n.deriveMathExpression)(R.expr),F=!1;if(R.expr instanceof t.NumberExpr&&(F=!0),Z.name==null)if(F)z={variable:{negated:!0,isConst:F,type:"#",name:void 0,deriveExpr:Z.derived,initialExpr:Z.derived,calculated:!1,isField:!1},paramExpr:Z.derived};else throw new Error("Cannot identify combinator arg "+R);else{let P=U.variablesMap.get(Z.name);if(P)P.negated=!0,P.isConst=F,P.initialExpr=Z.derived,z={variable:P,paramExpr:Z.derived};else throw new Error("Cannot identify combinator arg "+R)}}else if(R instanceof t.NumberExpr)z={variable:{negated:!1,isConst:!0,type:"#",name:void 0,deriveExpr:new e.TLBNumberExpr(R.num),initialExpr:new e.TLBNumberExpr(R.num),calculated:!1,isField:!1},paramExpr:new e.TLBNumberExpr(R.num)};else throw new Error("Cannot identify combinator arg: "+R);U.parameters.push(z),z.variable.name!=null&&U.parametersMap.set(z.variable.name,z)}),U.declaration=$(H,d),a(U,H),(0,u.fillFields)(T,_),M(U)}),p(_),s(_),h(_),_.constructors.sort(c)}),E(C,d,D),A(C)}Ge.fillConstructors=i;function a(m,C){C.fields.forEach(d=>{if(d instanceof t.FieldCurlyExprDef&&d.expr instanceof t.CompareExpr)if(d.expr.op=="="){let D=(0,n.convertToMathExpr)(d.expr),_=(0,n.getNegatedVariable)(D);if(_){D=(0,n.reorganizeExpression)(D,_),D instanceof e.TLBBinaryOp&&(D=D.right);let S=m.variablesMap.get(_);if(S)S.negated=!0,S.deriveExpr=D;else throw new Error(`Variable ${_} not defined`)}else m.constraints.push(D)}else m.constraints.push((0,n.convertToMathExpr)(d.expr))})}function p(m){var C;let d=[];(C=m.constructors[0])===null||C===void 0||C.parameters.forEach(D=>{d.push(D.variable.name)}),m.constructors.forEach(D=>{var _;for(let S=0;S<D.parameters.length;S++)if(d[S]==null){let T=(_=D.parameters[S])===null||_===void 0?void 0:_.variable.name;T!=null&&(d[S]=T)}});for(let D=0;D<d.length;D++)d[D]==null&&(d[D]="arg"+D);m.constructors.forEach(D=>{var _;for(let S=0;S<D.parameters.length;S++){let T=d[S];T!=null&&((_=D.parameters[S])===null||_===void 0?void 0:_.variable.name)==null&&(D.parameters[S].variable.name=T)}})}function s(m){var C;let d=[];(C=m.constructors[0])===null||C===void 0||C.parameters.forEach(D=>{d.push(void 0)}),m.constructors.forEach(D=>{var _;for(let S=0;S<D.parameters.length;S++){let T=(_=D.parameters[S])===null||_===void 0?void 0:_.argName;T&&(d[S]=T)}}),m.constructors.forEach(D=>{for(let _=0;_<D.parameters.length;_++){let S=d[_],T=D.parameters[_];S!=null&&T!=null&&(T.argName=S,T.paramExpr instanceof e.TLBVarExpr&&(T.variable.deriveExpr=new e.TLBVarExpr(T.argName),T.paramExpr=T.variable.deriveExpr))}})}function c(m,C){let d=o(m),D=o(C);return d<D?1:d>D?-1:0}function o(m){let C=0;return m.tag.bitLen>0&&C++,m.parameters.forEach(d=>{d.variable.isConst&&C++}),C}function l(m,C,d){let D=(0,n.reorganizeExpression)(new e.TLBBinaryOp(new e.TLBVarExpr(C),m,"=",new Set,!1),d);if(D instanceof e.TLBBinaryOp)return D.right;throw new Error(`Couldn't reorganize expression ${m}`)}function f(m,C){let d=m.constructorDef.tag;if(d==null&&m.constructorDef.name=="_"||d&&d.length>1&&d[1]=="_")return{bitLen:0,binary:""};if(d==null)return{bitLen:32,binary:"0x"+O(m)};if(d[0]=="$")return{bitLen:d?.length-1,binary:"0b"+d.slice(1)};if(d[0]=="#"){const D=d.endsWith("_"),_=d.slice(1,D?-1:void 0);if(D){const T=parseInt(_,16).toString(2).padStart(_.length*4,"0").slice(0,-1),H=parseInt(T,2).toString(16).padStart(Math.ceil(T.length/4),"0");return{bitLen:T.length,binary:"0x"+H}}return{bitLen:_.length*4,binary:"0x"+_}}throw new Error("Unknown tag "+d)}function h(m){let C=new Set,d=0;m.constructors.forEach(D=>{for(;C.has(D.name);)D.name+=d.toString();C.add(D.name),d++})}function E(m,C,d){let D=[],_=new Map;_.set("Bool",["b814e002","e95dd78d"]),_.set("MsgAddressInt",["9bb90082","ca70d9f6"]),_.set("Bit",["12acf7f6"]),_.set("Grams",["31468450"]),_.set("MsgAddressExt",["9ccb7139","ee7b72a3"]),_.set("MsgAddress",["21d0382b","e06aa05e"]),_.set("VarUInteger",["988e36b3"]),_.set("VarInteger",["225aaee0"]),_.set("HashmapE",["1cc05be9","40b92161"]),_.set("HashmapAugE",["af55dae6","e135d248"]),_.set("BoolTrue",["b5311773"]),_.set("BoolFalse",["f3214771"]),_.forEach((S,T)=>{let H=d.get(T);if(H){let U=[];if(H.forEach(Ie=>{U.push(O(Ie.declaration))}),!(0,n.opCodeSetsEqual)(S,U))throw new Error("Bool primitive type is not correct in scheme");D.push(T)}}),D.forEach(S=>{m.types.delete(S)})}function A(m){m.types.forEach(C=>{C.constructors.forEach(d=>{let D=new Set;y(d.fields,D)})})}function y(m,C){m.forEach(d=>{d.subFields.length==0&&b(d,C),y(d.subFields,C)})}function b(m,C){let d=0;for(m.name=(0,r.findNotReservedName)(m.name);C.has(m.name);)m.name=(0,r.findNotReservedName)(m.name+"_"+d),d++;C.add(m.name)}function k(m){let C=new Map;return m.types.forEach((d,D)=>{let _=new Array;d.constructors.forEach(T=>{let H=new Map;T.variablesMap.forEach((R,z)=>{H.set(z,w(R))});let U=new Map;T.parametersMap.forEach((R,z)=>{U.set(z,g(R))});let Ie=new e.TLBConstructor(T.parameters.map(g),T.variables.map(w),H,U,T.name,T.fields,T.tag,T.constraints,T.declaration,T.tlbType);_.push(Ie)});let S=new e.TLBType(d.name,_);C.set(D,S)}),new e.TLBCode(C)}Ge.convertCodeToReadonly=k;function g(m){return new e.TLBParameter(w(m.variable),m.paramExpr,m.argName)}function w(m){if(m.name==null)throw new Error("Variable is undefined");return new e.TLBVariable(m.isConst,m.negated,m.type,m.name,m.isField,m.deriveExpr,m.initialExpr)}function $(m,C){var d,D;let _="",S=C,T=m.locations.line-1,H=0;for(;!(!((d=S[T])===null||d===void 0)&&d.includes(";"));)_+=((D=S[T])===null||D===void 0?void 0:D.substring(H))+`
`,T++,H=0;let U=S[T];return U&&(_+=U.substring(H,U.indexOf(";")+1)),_}function M(m){m.variables.forEach(C=>{(0,n.calculateVariable)(C,m)}),m.parameters.forEach(C=>{(0,n.calculateVariable)(C.variable,m)})}const N={isFieldBuiltinDef:m=>m instanceof t.FieldBuiltinDef,isFieldCurlyExprDef:m=>m instanceof t.FieldCurlyExprDef,isFieldAnonymousDef:m=>m instanceof t.FieldAnonymousDef,isFieldNamedDef:m=>m instanceof t.FieldNamedDef,isFieldExprDef:m=>m instanceof t.FieldExprDef,isCompareExpr:m=>m instanceof t.CompareExpr,isMathExpr:m=>m instanceof t.MathExpr,isNegateExpr:m=>m instanceof t.NegateExpr,isNameExpr:m=>m instanceof t.NameExpr,isNumberExpr:m=>m instanceof t.NumberExpr,isCellRefExpr:m=>m instanceof t.CellRefExpr,isBuiltinZeroArgs:m=>m instanceof t.BuiltinZeroArgs,isBuiltinOneArgExpr:m=>m instanceof t.BuiltinOneArgExpr,isCombinatorExpr:m=>m instanceof t.CombinatorExpr,isCondExpr:m=>m instanceof t.CondExpr};function O(m){const C=v(m),d=new TextEncoder;return(0,r.crc32)(d.encode(C)).toString(16)}function x(m){const{isFieldBuiltinDef:C,isFieldCurlyExprDef:d,isFieldNamedDef:D,isFieldExprDef:_,isCompareExpr:S}=N;return!!(C(m)||d(m)||(D(m)||_(m))&&S(m.expr)&&m.expr.op==="=")}function v(m){const C=[m.constructorDef.name];return m.fields.forEach(d=>{C.push(V(d))}),C.push("=",m.combinator.name),m.combinator.args.forEach(d=>{C.push(q(d))}),C.join(" ")}function V(m){const{isFieldBuiltinDef:C,isFieldCurlyExprDef:d,isFieldNamedDef:D,isFieldExprDef:_,isFieldAnonymousDef:S}=N,T=[];return x(m)?((C(m)||D(m)||S(m)&&m.name)&&T.push(`${m.name}:`),C(m)?T.push(m.type):d(m)||D(m)||_(m)?T.push(q(m.expr)):S(m)&&T.push(ee(m)),T.join("")):(D(m)?T.push(`${m.name}:`):S(m)&&m.name&&T.push(`${m.name}:`),D(m)||_(m)?T.push(q(m.expr)):S(m)&&T.push(ee(m)),T.join(""))}function ee(m){const C=m.fields.map((d,D)=>D>0?" "+V(d):V(d)).join("");return`${m.isRef?"^[ ":"[ "}${C} ]`}function q(m){const{isCompareExpr:C,isMathExpr:d,isNegateExpr:D,isNameExpr:_,isNumberExpr:S,isCellRefExpr:T,isBuiltinZeroArgs:H,isBuiltinOneArgExpr:U,isCombinatorExpr:Ie,isCondExpr:R}=N;if(C(m))return`${m.op} ${q(m.left)} ${q(m.right)}`;if(d(m))return $e(m);if(D(m))return"~"+q(m.expr);if(S(m))return String(m.num);if(_(m))return m.name;if(T(m))return"^"+q(m.expr);if(H(m))return m.name;if(U(m))return`${m.name} ${q(m.arg)}`;if(Ie(m)){const z=m.args.map(Z=>q(Z)).join(" ");return`${m.name} ${z}`}if(R(m)){let z=q(m.left);return m.dotExpr!==null&&(z+="."+m.dotExpr),z+="?"+q(m.condExpr),z}return String(m)}function $e(m){const{isNumberExpr:C}=N;return m.op==="+"?`${q(m.left)} + ${q(m.right)}`:m.op==="*"?C(m.right)&&!C(m.left)?`${q(m.right)} * ${q(m.left)}`:C(m.left)&&C(m.right)?String(m.left.num*m.right.num):`${q(m.left)} * ${q(m.right)}`:`${q(m.left)} ${m.op} ${q(m.right)}`}return Ge}var Je={},Pr;function Jt(){if(Pr)return Je;Pr=1,Object.defineProperty(Je,"__esModule",{value:!0}),Je.CodeBuilder=void 0;let t=class{constructor(){this.tabLevel=0,this.code=""}tab(){this.tabLevel++}unTab(){this.tabLevel--}inTab(r){this.tab(),r(),this.unTab()}add(r,u=!0){if(!r){this.code+=`
`;return}let n=" ".repeat(this.tabLevel*4);this.code+=n+r+(u?`
`:"")}addMultiline(r,u=!1){let n=r.split(`
`),i=0;for(let a of n)a===`
`&&n.indexOf(a)===n.length-1||(u&&i===0?this.code+=a+`
`:this.add(a),i++)}append(r){this.addMultiline(r.render())}appendInline(r){this.addMultiline(r.render(),!0)}render(){return this.code}};return Je.CodeBuilder=t,Je}var Qe={},B={},I={},Nr;function Qt(){if(Nr)return I;Nr=1,Object.defineProperty(I,"__esModule",{value:!0}),I.id=I.toCode=I.tCodeAsIs=I.tTernaryExpression=I.tComment=I.tMultiStatement=I.tDeclareVariable=I.tArrowFunctionType=I.tBinaryExpression=I.tUnaryOpExpression=I.tIfStatement=I.tExpressionStatement=I.tUnionTypeDeclaration=I.tArrowFunctionExpression=I.tUnionTypeExpression=I.tTypeParametersExpression=I.tBinaryNumericLiteral=I.tNumericLiteral=I.tMemberExpression=I.tFunctionCall=I.tReturnStatement=I.tStructExpression=I.tObjectExpression=I.tForCycle=I.tObjectProperty=I.tStructDeclaration=I.tTypeWithParameters=I.tTypedIdentifier=I.tFunctionDeclaration=I.tImportDeclaration=I.tStringLiteral=I.tIdentifier=void 0;const t=Jt();function e(d){return{type:"Identifier",name:d}}I.tIdentifier=e;function r(d){return{type:"StringLiteral",value:d}}I.tStringLiteral=r;function u(d,D){return{type:"ImportDeclaration",importValue:d,from:D}}I.tImportDeclaration=u;function n(d,D,_,S,T){return{type:"FunctionDeclaration",name:d,typeParameters:D,returnType:_,parameters:S,body:T}}I.tFunctionDeclaration=n;function i(d,D){return{type:"TypedIdentifier",name:d,typeId:D}}I.tTypedIdentifier=i;function a(d,D){return{type:"TypeWithParameters",name:d,typeParameters:D}}I.tTypeWithParameters=a;function p(d,D,_){return{type:"StructDeclaration",name:d,fields:D,typeParametersExpression:_}}I.tStructDeclaration=p;function s(d,D){return{type:"ObjectProperty",key:d,value:D}}I.tObjectProperty=s;function c(d,D,_,S){return{type:"ForCycle",init:d,cond:D,inc:_,body:S}}I.tForCycle=c;function o(d){return{type:"ObjectExpression",objectValues:d}}I.tObjectExpression=o;function l(d){return{type:"StructExpression",fields:d}}I.tStructExpression=l;function f(d){return{type:"ReturnStatement",returnValue:d}}I.tReturnStatement=f;function h(d,D,_){return{type:"FunctionCall",functionId:d,parameters:D,typeParameters:_}}I.tFunctionCall=h;function E(d,D){return{type:"MemberExpression",thisObject:d,memberName:D}}I.tMemberExpression=E;function A(d){return{type:"NumericLiteral",value:d}}I.tNumericLiteral=A;function y(d){return{type:"BinaryNumericLiteral",value:d}}I.tBinaryNumericLiteral=y;function b(d){return{type:"TypeParametersExpression",typeParameters:d}}I.tTypeParametersExpression=b;function k(d){return{type:"UnionTypeExpression",unionMembers:d}}I.tUnionTypeExpression=k;function g(d,D){return{type:"ArrowFunctionExpression",parameters:d,body:D}}I.tArrowFunctionExpression=g;function w(d,D){return{type:"UnionTypeDeclaration",name:d,union:D}}I.tUnionTypeDeclaration=w;function $(d){return{type:"ExpressionStatement",expression:d}}I.tExpressionStatement=$;function M(d,D,_){return{type:"IfStatement",condition:d,body:D,elseBody:_}}I.tIfStatement=M;function N(d,D){return{type:"UnaryOpExpression",unaryOperator:d,expr:D}}I.tUnaryOpExpression=N;function O(d,D,_){return{type:"BinaryExpression",binarySign:D,left:d,right:_}}I.tBinaryExpression=O;function x(d,D){return{type:"ArrowFunctionType",parameters:d,returnType:D}}I.tArrowFunctionType=x;function v(d,D,_){return{type:"DeclareVariable",name:d,init:D,typeName:_}}I.tDeclareVariable=v;function V(d){return{type:"MultiStatement",statements:d}}I.tMultiStatement=V;function ee(d){return{type:"Comment",value:d}}I.tComment=ee;function q(d,D,_){return{type:"TernaryExpression",condition:d,body:D,elseBody:_}}I.tTernaryExpression=q;function $e(d){return{type:"CodeAsIs",code:d}}I.tCodeAsIs=$e;function m(d,D,_){for(let S=0;S<d.length;S++){let T=d[S];T!=null&&C(T,D),S+1<d.length&&D.add(_,!1)}return D}function C(d,D=new t.CodeBuilder){if(d.type=="Identifier"&&D.add(d.name,!1),d.type=="NumericLiteral"&&D.add(d.value.toString(),!1),d.type=="ImportDeclaration"&&D.add(`import { ${C(d.importValue).render()} } from ${C(d.from).render()}`,!1),d.type=="FunctionDeclaration"&&(D.add(`export function ${C(d.name).render()}${C(d.typeParameters).render()}(`,!1),m(d.parameters,D,", "),D.add(`)${d.returnType?": "+C(d.returnType).render():""} {`),D.inTab(()=>{d.body.forEach(_=>{D.append(C(_))})}),D.add("}")),d.type=="ArrowFunctionExpression"&&(D.add("((",!1),m(d.parameters,D,", "),D.add(") => {"),D.inTab(()=>{d.body.forEach(_=>{D.append(C(_))})}),D.add("})",!1)),d.type=="ArrowFunctionType"&&D.add(`(${m(d.parameters,new t.CodeBuilder,", ").render()}) => ${d.returnType?C(d.returnType).render():""}`,!1),d.type=="TypeWithParameters"&&D.add(`${C(d.name).render()}${C(d.typeParameters).render()}`,!1),d.type=="TypedIdentifier"&&D.add(C(d.name).render()+": "+C(d.typeId).render(),!1),d.type=="ObjectProperty"&&D.add(C(d.key).render()+": "+C(d.value).render(),!1),d.type=="DeclareVariable"&&(D.add(`let ${C(d.name).render()}${d.typeName?": "+C(d.typeName).render():""}`,!1),d.init&&(D.add(" = ",!1),C(d.init,D))),d.type=="ObjectExpression"&&(D.add("{"),D.inTab(()=>{d.objectValues.forEach(_=>{D.add(C(_).render()+",")})}),D.add("}",!1)),d.type=="StructExpression"&&(D.add("{",!1),m(d.fields,D,", "),D.add("}",!1)),d.type=="MultiStatement"&&d.statements.forEach(_=>{D.append(C(_))}),d.type=="ReturnStatement"&&(D.add("return ",!1),D.appendInline(C(d.returnValue))),d.type=="ExpressionStatement"&&D.add(C(d.expression).render()+";",!1),d.type=="TypeParametersExpression"&&d.typeParameters.length>0&&(D.add("<",!1),m(d.typeParameters,D,", "),D.add(">",!1)),d.type=="StructDeclaration"&&(D.add(`export interface ${C(d.name).render()}${C(d.typeParametersExpression).render()} {`),D.inTab(()=>{d.fields.forEach(_=>{D.add(`readonly ${C(_).render()};`)})}),D.add("}")),d.type=="UnionTypeDeclaration"&&D.add(`export type ${C(d.name).render()} = ${C(d.union).render()};`),d.type=="UnionTypeExpression"&&m(d.unionMembers,D," | "),d.type=="FunctionCall"&&(D.add(`${C(d.functionId).render()}${d.typeParameters?C(d.typeParameters).render():""}(`,!1),m(d.parameters,D,", "),D.add(")",!1)),d.type=="StringLiteral"&&D.add(`'${d.value}'`,!1),d.type=="MemberExpression"&&D.add(C(d.thisObject).render()+"."+C(d.memberName).render(),!1),d.type=="IfStatement"&&(D.add(`if (${C(d.condition).render()}) {`),D.inTab(()=>{d.body.forEach(_=>{D.append(C(_))})}),D.add("}",!1)),d.type=="ForCycle"&&(D.add(`for (${C(d.init).render()};${C(d.cond).render()};${C(d.inc).render()}) {`),D.inTab(()=>{d.body.forEach(_=>{D.append(C(_))})}),D.add("}",!1)),d.type=="UnaryOpExpression"&&D.add(`(${d.unaryOperator}${C(d.expr).render()})`,!1),d.type=="BinaryExpression"&&D.add(`(${C(d.left).render()} ${d.binarySign} ${C(d.right).render()})`,!1),d.type=="TernaryExpression"&&D.add(`(${C(d.condition).render()} ? ${C(d.body).render()} : ${C(d.elseBody).render()})`,!1),d.type=="Comment"){let _=d.value.split(`
`);_.length==1?D.add(`// ${_[0]}`):(D.add("/*"),_.forEach(S=>{D.add(S)}),D.add("*/"))}return d.type=="CodeAsIs"&&D.add(d.code,!1),D}return I.toCode=C,I.id=e,I}var W={},Or;function er(){if(Or)return W;Or=1,Object.defineProperty(W,"__esModule",{value:!0}),W.useBuffer=W.isBigInt=W.isBigIntExpr=W.getCondition=W.getTypeParametersExpression=W.convertToAST=W.addLoadProperty=W.getNegationDerivationFunctionBody=W.getVarExprByName=W.getParamVarExpr=void 0;const t=Ke(),e=yt(),r=fn(),u=Qt();function n(E,A){if(E.variable.deriveExpr)return s(E.variable.deriveExpr,A);throw new Error(`Could not get expression for param ${E.variable.name} for constructor ${A.name} of type ${A.tlbType}`)}W.getParamVarExpr=n;function i(E,A){let y=A.variablesMap.get(E);return y?.deriveExpr?s(y.deriveExpr,A):(0,u.id)(E)}W.getVarExprByName=i;function a(E,A,y,b){let k=[],g=E.types.get(A);if(!g)throw new Error(`Can not find type ${A}`);g.constructors.forEach(M=>{let N=M.parameters[y];if(N){let O;O=s(N.paramExpr,M);let x=[];N.variable.isConst||x.push((0,u.tExpressionStatement)((0,u.tDeclareVariable)((0,u.id)(N.variable.name),(0,u.tMemberExpression)((0,u.id)(b),(0,u.id)(N.variable.name))))),x.push((0,u.tReturnStatement)(O)),g&&k.push((0,u.tIfStatement)((0,r.tEqualExpression)((0,u.tMemberExpression)((0,u.id)(b),(0,u.id)("kind")),(0,u.tStringLiteral)((0,e.getSubStructName)(g,M))),x))}});let w=g.constructors.map(M=>`"${g?(0,e.getSubStructName)(g,M):""}"`).join(", "),$=(0,u.tExpressionStatement)((0,u.id)(`throw new Error('Expected one of ${w} for type "${g.name}" while getting "${b}", but data does not satisfy any constructor')`));return k.push($),k}W.getNegationDerivationFunctionBody=a;function p(E,A,y,b){let k=(0,u.id)(E);b.loadStatements.push((0,u.tExpressionStatement)((0,u.tDeclareVariable)(k,A,y))),b.loadProperties.push((0,u.tObjectProperty)(k,k))}W.addLoadProperty=p;function s(E,A,y){if(E instanceof t.TLBVarExpr){let b=E.x;return y!=null?(0,u.tMemberExpression)(y,(0,u.id)(b)):(0,u.id)(b)}if(E instanceof t.TLBNumberExpr)return(0,u.tNumericLiteral)(E.n);if(E instanceof t.TLBBinaryOp){let b=E.operation;return b=="="&&(b="=="),(0,u.tBinaryExpression)(s(E.left,A,y),b,s(E.right,A,y))}if(E instanceof t.TLBUnaryOp)return E.operation=="."?(0,u.tFunctionCall)((0,u.id)("bitLen"),[s(E.value,A,y)]):(0,u.tUnaryOpExpression)(E.operation,s(E.value,A,y));throw new Error(`Type ${A.tlbType}, constructor ${A.name}: couldn't convert to math expression: ${E}`)}W.convertToAST=s;function c(E){let A=[];return E.forEach(b=>{b.variable.type=="Type"&&A.push((0,u.id)(b.variable.name))}),(0,u.tTypeParametersExpression)(A)}W.getTypeParametersExpression=c;function o(E){let A=E[0];return A?E.length>1?(0,u.tBinaryExpression)(A,"&&",o(E.slice(1))):A:(0,u.id)("true")}W.getCondition=o;function l(E){return!(E.expr instanceof t.TLBNumberExpr&&E.expr.n<=32)}W.isBigIntExpr=l;function f(E){return!(E.bits instanceof t.TLBNumberExpr&&E.bits.n<=32||E.maxBits&&E.maxBits<=32)}W.isBigInt=f;function h(E){return E.bits instanceof t.TLBNumberExpr&&E.bits.n%8==0}return W.useBuffer=h,W}var kr;function fn(){if(kr)return B;kr=1,Object.defineProperty(B,"__esModule",{value:!0}),B.dictAugTypeExpr=B.dictAugParse=B.dictKeyExpr=B.dictLoadExpr=B.dictValueStore=B.dictTypeParamExpr=B.dictStoreStmt=B.negationDerivationFuncDecl=B.inSeparateRef=B.checkConstraintStmt=B.newCellStmt=B.storeRefStmt=B.loadRefStmt=B.storeRefObjectStmt=B.storeExpressionNamedType=B.storeExprCond=B.loadTupleExpr=B.storeTupleStmt=B.arrayedType=B.loadFromNewSlice=B.storeInNewCell=B.storeCombinator=B.loadExprForParam=B.returnSliceFunc=B.storeExprForParam=B.coverFuncCall=B.storeFunctionExpr=B.checkHasBitsForTag=B.checkTagExpr=B.skipTagStmt=B.loadFunctionParam=B.storeFunctionParam=B.simpleCycle=B.sliceLoad=B.typedSlice=B.bitlenFunctionDecl=B.checkKindStmt=B.storeFunctionStmt=B.storeTagExpression=B.tEqualExpression=void 0;const t=yt(),e=Qt(),r=er();function u(F,P){return(0,e.tBinaryExpression)(F,"==",P)}B.tEqualExpression=u;function n(F){return(0,e.tExpressionStatement)((0,e.tFunctionCall)((0,e.tMemberExpression)((0,e.id)("builder"),(0,e.id)("storeUint")),[(0,e.id)(F.binary),(0,e.tNumericLiteral)(F.bitLen)]))}B.storeTagExpression=n;function i(F){return(0,e.tReturnStatement)((0,e.tArrowFunctionExpression)([(0,e.tTypedIdentifier)((0,e.id)("builder"),(0,e.id)("Builder"))],F))}B.storeFunctionStmt=i;function a(F,P,X){return(0,e.tIfStatement)(u((0,e.tMemberExpression)((0,e.id)(F),(0,e.id)("kind")),(0,e.tStringLiteral)(P)),[X])}B.checkKindStmt=a;function p(){return(0,e.tFunctionDeclaration)((0,e.id)("bitLen"),(0,e.tTypeParametersExpression)([]),null,[(0,e.tTypedIdentifier)((0,e.id)("n"),(0,e.id)("number"))],[(0,e.tExpressionStatement)((0,e.id)("return n.toString(2).length"))])}B.bitlenFunctionDecl=p;function s(){return[(0,e.tTypedIdentifier)((0,e.id)("slice"),(0,e.id)("Slice"))]}B.typedSlice=s;function c(F,P){return(0,e.tExpressionStatement)((0,e.tDeclareVariable)((0,e.id)((0,t.getCurrentSlice)(F,"slice")),(0,e.tFunctionCall)((0,e.tMemberExpression)((0,e.tFunctionCall)((0,e.tMemberExpression)((0,e.id)(P),(0,e.id)("loadRef")),[]),(0,e.id)("beginParse")),[(0,e.id)("true")])))}B.sliceLoad=c;function o(F,P){return(0,e.tForCycle)((0,e.tDeclareVariable)((0,e.id)(F),(0,e.tNumericLiteral)(0)),(0,e.tBinaryExpression)((0,e.id)(F),"<",P),(0,e.tNumericLiteral)(5),[])}B.simpleCycle=o;function l(F){return(0,e.tTypedIdentifier)((0,e.id)("store"+F),(0,e.tArrowFunctionType)([(0,e.tTypedIdentifier)((0,e.id)((0,t.firstLower)(F)),(0,e.id)(F))],(0,e.tArrowFunctionType)([(0,e.tTypedIdentifier)((0,e.id)("builder"),(0,e.id)("Builder"))],(0,e.id)("void"))))}B.storeFunctionParam=l;function f(F){return(0,e.tTypedIdentifier)((0,e.id)("load"+F),(0,e.tArrowFunctionType)(s(),(0,e.id)(F)))}B.loadFunctionParam=f;function h(F){return(0,e.tExpressionStatement)((0,e.tFunctionCall)((0,e.tMemberExpression)((0,e.id)("slice"),(0,e.id)("loadUint")),[(0,e.tNumericLiteral)(F)]))}B.skipTagStmt=h;function E(F){return u((0,e.tFunctionCall)((0,e.tMemberExpression)((0,e.id)("slice"),(0,e.id)("preloadUint")),[(0,e.tNumericLiteral)(F.bitLen)]),(0,e.id)(F.binary))}B.checkTagExpr=E;function A(F){return(0,e.tBinaryExpression)((0,e.tMemberExpression)((0,e.id)("slice"),(0,e.id)("remainingBits")),">=",(0,e.tNumericLiteral)(F))}B.checkHasBitsForTag=A;function y(F,P){return(0,e.tArrowFunctionExpression)([(0,e.tTypedIdentifier)((0,e.id)("arg"),F)],[(0,e.tReturnStatement)((0,e.tArrowFunctionExpression)([(0,e.tTypedIdentifier)((0,e.id)("builder"),(0,e.id)("Builder"))],[P]))])}B.storeFunctionExpr=y;function b(F){return F.type=="FunctionCall"?(0,e.tArrowFunctionExpression)(s(),[(0,e.tReturnStatement)(F)]):F}B.coverFuncCall=b;function k(F,P,X){return(0,e.tExpressionStatement)((0,e.tFunctionCall)((0,e.tMemberExpression)((0,e.id)(F),(0,e.id)("store"+P.fieldStoreSuffix)),X))}B.storeExprForParam=k;function g(){return(0,e.tArrowFunctionExpression)(s(),[(0,e.tReturnStatement)((0,e.tFunctionCall)((0,e.tMemberExpression)((0,e.id)("slice"),(0,e.id)("asCell")),[]))])}B.returnSliceFunc=g;function w(F,P){return(0,e.tFunctionCall)((0,e.tMemberExpression)((0,e.id)(F),(0,e.id)("load"+P.fieldLoadSuffix)),P.argLoadExpr?[P.argLoadExpr]:[])}B.loadExprForParam=w;function $(F,P,X,pe,We){return(0,e.tExpressionStatement)((0,e.tFunctionCall)((0,e.tFunctionCall)((0,e.id)("store"+F),P.concat(X),pe),[(0,e.id)(We)]))}B.storeCombinator=$;function M(F,P){return(0,e.tMultiStatement)([(0,e.tExpressionStatement)((0,e.tDeclareVariable)((0,e.id)(F),(0,e.tFunctionCall)((0,e.id)("beginCell"),[]))),P,(0,e.tExpressionStatement)((0,e.tFunctionCall)((0,e.tMemberExpression)((0,e.id)("builder"),(0,e.id)("storeRef")),[(0,e.id)(F)]))])}B.storeInNewCell=M;function N(F){return(0,e.tArrowFunctionExpression)(s(),[c([1,0],"slice"),(0,e.tReturnStatement)(F)])}B.loadFromNewSlice=N;function O(F){return(0,e.tTypeWithParameters)((0,e.id)("Array"),(0,e.tTypeParametersExpression)([F]))}B.arrayedType=O;function x(F,P,X){return(0,e.tExpressionStatement)((0,e.tFunctionCall)((0,e.tMemberExpression)(F,(0,e.id)("forEach")),[(0,e.tArrowFunctionExpression)([(0,e.tTypedIdentifier)((0,e.id)("arg"),X)],[P])]))}B.storeTupleStmt=x;function v(F,P){return(0,e.tFunctionCall)((0,e.tMemberExpression)((0,e.tFunctionCall)((0,e.tMemberExpression)((0,e.id)("Array"),(0,e.id)("from")),[(0,e.tFunctionCall)((0,e.tMemberExpression)((0,e.tFunctionCall)((0,e.id)("Array"),[F]),(0,e.id)("keys")),[])]),(0,e.id)("map")),[(0,e.tArrowFunctionExpression)([(0,e.tTypedIdentifier)((0,e.id)("arg"),(0,e.id)("number"))],[(0,e.tReturnStatement)(P)])])}B.loadTupleExpr=v;function V(F,P){return(0,e.tIfStatement)((0,e.tBinaryExpression)(F,"!=",(0,e.id)("undefined")),[P])}B.storeExprCond=V;function ee(F,P,X){return(0,e.tExpressionStatement)((0,e.tFunctionCall)((0,e.tFunctionCall)((0,e.id)("store"+F),P),[(0,e.id)(X)]))}B.storeExpressionNamedType=ee;function q(F,P,X){return(0,e.tExpressionStatement)((0,e.tFunctionCall)((0,e.tMemberExpression)((0,e.id)(F),(0,e.id)("storeRef")),[(0,e.tMemberExpression)((0,e.id)(P.typeName),(0,e.id)(X.name))]))}B.storeRefObjectStmt=q;function $e(F,P){return(0,e.tExpressionStatement)((0,e.tDeclareVariable)((0,e.id)((0,t.getCurrentSlice)(F,"cell")),(0,e.tFunctionCall)((0,e.tMemberExpression)((0,e.id)(P),(0,e.id)("loadRef")),[])))}B.loadRefStmt=$e;function m(F,P){return(0,e.tExpressionStatement)((0,e.tFunctionCall)((0,e.tMemberExpression)((0,e.id)(P),(0,e.id)("storeRef")),[(0,e.id)((0,t.getCurrentSlice)(F,"cell"))]))}B.storeRefStmt=m;function C(F){return(0,e.tExpressionStatement)((0,e.tDeclareVariable)((0,e.id)((0,t.getCurrentSlice)(F,"cell")),(0,e.tFunctionCall)((0,e.id)("beginCell"),[])))}B.newCellStmt=C;function d(F,P){return(0,e.tIfStatement)((0,e.tUnaryOpExpression)("!",F),[(0,e.tExpressionStatement)((0,e.id)("throw new Error('Condition "+(0,e.toCode)(F).code+P+"')"))])}B.checkConstraintStmt=d;function D(F,P){F[F.length-1]++,F.push(0),P(),F.pop()}B.inSeparateRef=D;function _(F,P,X,pe,We){return(0,e.tFunctionDeclaration)(P,(0,e.tTypeParametersExpression)([]),(0,e.id)("number"),[(0,e.tTypedIdentifier)((0,e.id)((0,t.findNotReservedName)(X)),(0,e.id)(pe))],(0,r.getNegationDerivationFunctionBody)(F,pe,We,X))}B.negationDerivationFuncDecl=_;function S(F,P,X,pe,We){return(0,e.tExpressionStatement)((0,e.tFunctionCall)((0,e.tMemberExpression)((0,e.id)(F),(0,e.id)("storeDict"+(We?"Direct":""))),P.concat([X,pe])))}B.dictStoreStmt=S;function T(F,P){return(0,e.tTypeWithParameters)((0,e.id)("Dictionary"),(0,e.tTypeParametersExpression)([(0,r.isBigIntExpr)(F.key)?(0,e.id)("bigint"):(0,e.id)("number"),P]))}B.dictTypeParamExpr=T;function H(F,P,X){let pe=[(0,e.tExpressionStatement)((0,e.tFunctionCall)((0,e.tFunctionCall)(P,[(0,e.id)(X?"arg.value":"arg")]),[(0,e.id)("builder")]))];return X&&(pe=[(0,e.tExpressionStatement)((0,e.tFunctionCall)((0,e.tFunctionCall)(X,[(0,e.id)("arg.extra")]),[(0,e.id)("builder")]))].concat(pe)),(0,e.tObjectExpression)([(0,e.tObjectProperty)((0,e.id)("serialize"),(0,e.tArrowFunctionExpression)([(0,e.tTypedIdentifier)((0,e.id)("arg"),F),(0,e.tTypedIdentifier)((0,e.id)("builder"),(0,e.id)("Builder"))],pe)),(0,e.tObjectProperty)((0,e.id)("parse"),(0,e.id)("() => { throw new Error('Not implemented') }"))])}B.dictValueStore=H;function U(F,P,X,pe){return(0,e.tFunctionCall)((0,e.tMemberExpression)((0,e.id)("Dictionary"),(0,e.id)("load"+(pe?"Direct":""))),[F,Ie(P),(0,e.id)(X)])}B.dictLoadExpr=U;function Ie(F){return(0,e.tObjectExpression)([(0,e.tObjectProperty)((0,e.id)("serialize"),(0,e.id)("() => { throw new Error('Not implemented') }")),(0,e.tObjectProperty)((0,e.id)("parse"),F)])}function R(F,P,X){let pe;return X?pe=(0,r.convertToAST)(F.expr,P.constructor,(0,e.id)(X)):pe=(0,r.convertToAST)(F.expr,P.constructor),(0,e.tFunctionCall)((0,e.tMemberExpression)((0,e.id)("Dictionary.Keys"),(0,r.isBigIntExpr)(F)?(0,e.id)("BigUint"):(0,e.id)("Uint")),[pe])}B.dictKeyExpr=R;function z(F,P){return(0,e.tArrowFunctionExpression)([(0,e.tTypedIdentifier)((0,e.id)("slice"),(0,e.id)("Slice"))],[(0,e.tReturnStatement)((0,e.tObjectExpression)([(0,e.tObjectProperty)((0,e.id)("extra"),F),(0,e.tObjectProperty)((0,e.id)("value"),P)]))])}B.dictAugParse=z;function Z(F,P){return(0,e.tStructExpression)([(0,e.tTypedIdentifier)((0,e.id)("value"),F),(0,e.tTypedIdentifier)((0,e.id)("extra"),P)])}return B.dictAugTypeExpr=Z,B}var Mr;function hn(){if(Mr)return Qe;Mr=1,Object.defineProperty(Qe,"__esModule",{value:!0}),Qe.TypescriptGenerator=void 0;const t=Ke(),e=yt(),r=Jt(),u=fn(),n=Qt(),i=er();class a{constructor(s){this.jsCodeDeclarations=[],this.jsCodeConstructorDeclarations=[],this.jsCodeFunctionsDeclarations=[],this.tlbCode=s}addTonCoreClassUsage(s){this.jsCodeDeclarations.push((0,n.tImportDeclaration)((0,n.id)(s),(0,n.tStringLiteral)("@ton/core")))}addBuiltinCode(){this.addBitLenFunction(),this.addEmbeddedTypes(),this.addCopyCellToBuilder()}addBitLenFunction(){this.jsCodeDeclarations.push((0,u.bitlenFunctionDecl)())}addCopyCellToBuilder(){this.jsCodeDeclarations.push((0,n.tCodeAsIs)(`export function copyCellToBuilder(from: Cell, to: Builder): void {
    let slice = from.beginParse();
    to.storeBits(slice.loadBits(slice.remainingBits));
    while (slice.remainingRefs) {
        to.storeRef(slice.loadRef());
    }
}`))}addEmbeddedTypes(){this.jsCodeDeclarations.push((0,n.tCodeAsIs)(`export interface Bool {
    readonly kind: 'Bool';
    readonly value: boolean;
}

export function loadBool(slice: Slice): Bool {
    if (slice.remainingBits >= 1) {
        let value = slice.loadUint(1);
        return {
            kind: 'Bool',
            value: value == 1
        }

    }
    throw new Error('Expected one of "BoolFalse" in loading "BoolFalse", but data does not satisfy any constructor');
}

export function storeBool(bool: Bool): (builder: Builder) => void {
    return ((builder: Builder) => {
        builder.storeUint(bool.value ? 1: 0, 1);
    })

}



export function loadBoolFalse(slice: Slice): Bool {
  if (((slice.remainingBits >= 1) && (slice.preloadUint(1) == 0b0))) {
      slice.loadUint(1);
      return {
          kind: 'Bool',
          value: false
      }

  }
  throw new Error('Expected one of "BoolFalse" in loading "BoolFalse", but data does not satisfy any constructor');
}

export function loadBoolTrue(slice: Slice): Bool {
  if (((slice.remainingBits >= 1) && (slice.preloadUint(1) == 0b1))) {
      slice.loadUint(1);
      return {
          kind: 'Bool',
          value: true
      }

  }
  throw new Error('Expected one of "BoolTrue" in loading "BoolTrue", but data does not satisfy any constructor');
}
`))}addTlbType(s){let c=(0,e.findNotReservedName)((0,e.firstLower)(s.name),"0"),o=[],l=[],f=[],h=[],E=(0,n.tTypeParametersExpression)([]);s.constructors.forEach(w=>{let $=(0,e.getSubStructName)(s,w),M={constructor:w,name:(0,e.findNotReservedName)((0,e.firstLower)($),"_"+w.name),typeName:c,loadStatements:[],loadProperties:[(0,n.tObjectProperty)((0,n.id)("kind"),(0,n.tStringLiteral)($))],properties:[(0,n.tTypedIdentifier)((0,n.id)("kind"),(0,n.tStringLiteral)($))],storeStatements:[]};E=(0,i.getTypeParametersExpression)(w.parameters);let N=[0];w.variables.forEach(v=>{this.addVarToConstructorLoadProperty(v,M,w)}),w.fields.forEach(v=>{this.handleField(v,N,M)}),o.push((0,n.tTypeWithParameters)((0,n.id)($),E));let O=(0,n.tStructDeclaration)((0,n.id)($),M.properties,E);w.constraints.forEach(v=>{this.genCodeForConstraint(v,c,s,M)}),M.loadStatements.push((0,n.tReturnStatement)((0,n.tObjectExpression)(M.loadProperties))),f=this.constructorStmtsToTypeStmts(w,s,M,f),w.tag.bitLen!=0&&M.storeStatements.splice(0,0,(0,u.storeTagExpression)(w.tag));let x=(0,u.storeFunctionStmt)(M.storeStatements);s.constructors.length>1&&(x=(0,u.checkKindStmt)(c,$,x)),h.push(x),l.push(O),this.jsCodeFunctionsDeclarations.push((0,n.tComment)(w.declaration)),this.jsCodeConstructorDeclarations.push((0,n.tComment)(w.declaration))}),this.addExceptionStmts(s,f,h);let A=(0,u.typedSlice)();const y=(0,n.tTypeWithParameters)((0,n.id)(s.name),E);let b=[(0,n.tTypedIdentifier)((0,n.id)(c),y)];this.addFunctionParameters(s,A,b);let k=(0,n.tFunctionDeclaration)((0,n.id)("load"+s.name),E,y,A,f),g=(0,n.tFunctionDeclaration)((0,n.id)("store"+s.name),E,(0,n.id)("(builder: Builder) => void"),b,h);s.constructors.length>1&&this.jsCodeConstructorDeclarations.push((0,n.tUnionTypeDeclaration)(y,(0,n.tUnionTypeExpression)(o))),l.forEach(w=>{this.jsCodeConstructorDeclarations.push(w)}),this.jsCodeFunctionsDeclarations.push(k),this.jsCodeFunctionsDeclarations.push(g)}addFunctionParameters(s,c,o){let l=s.constructors[0];if(l)l.parameters.forEach(f=>{f.variable.type=="Type"&&(c.push((0,u.loadFunctionParam)(f.variable.name)),o.push((0,u.storeFunctionParam)(f.variable.name))),f.variable.type=="#"&&!f.variable.negated&&(f.argName?c.push((0,n.tTypedIdentifier)((0,n.id)(f.argName),(0,n.id)("number"))):c.push((0,n.tTypedIdentifier)((0,n.id)(f.variable.name),(0,n.id)("number"))))});else throw new Error(`Type ${s.name} should have at least one constructor`)}addExceptionStmts(s,c,o){var l;let f=s.constructors.map(E=>`"${(0,e.getSubStructName)(s,E)}"`).join(", "),h=(0,n.tExpressionStatement)((0,n.id)(`throw new Error('Expected one of ${f} in loading "${s.name}", but data does not satisfy any constructor')`));(s.constructors.length>1||((l=s.constructors.at(0))===null||l===void 0?void 0:l.tag.bitLen)!=0)&&c.push(h),s.constructors.length>1&&o.push(h)}constructorStmtsToTypeStmts(s,c,o,l){if(s.tag.bitLen!=0||c.constructors.length>1){let f=[];if(s.tag.bitLen!=0){f.push((0,u.checkHasBitsForTag)(s.tag.bitLen)),f.push((0,u.checkTagExpr)(s.tag));let h=[(0,u.skipTagStmt)(s.tag.bitLen)];o.loadStatements=h.concat(o.loadStatements)}s.parameters.forEach(h=>{if(h.variable.isConst&&!h.variable.negated){let E=h.variable.name;h.argName&&(E=h.argName),f.push((0,u.tEqualExpression)((0,n.id)(E),(0,i.getParamVarExpr)(h,s)))}}),l.push((0,n.tIfStatement)((0,i.getCondition)(f),o.loadStatements))}else l=l.concat(o.loadStatements);return l}genCodeForConstraint(s,c,o,l){let f=(0,i.convertToAST)(s,l.constructor),h=(0,i.convertToAST)(s,l.constructor,(0,n.id)(c)),E=` is not satisfied while loading "${(0,e.getSubStructName)(o,l.constructor)}" for type "${o.name}"`;l.loadStatements.push((0,u.checkConstraintStmt)(f,E)),l.storeStatements.push((0,u.checkConstraintStmt)(h,E))}addVarToConstructorLoadProperty(s,c,o){let l;if(s.negated&&s.deriveExpr&&(l=(0,i.convertToAST)(s.deriveExpr,o)),s.type=="#"&&!s.isField){c.properties.push((0,n.tTypedIdentifier)((0,n.id)(s.name),(0,n.id)("number")));let f=o.parametersMap.get(s.name);f&&!f.variable.isConst&&!f.variable.negated&&(l=(0,i.getParamVarExpr)(f,o))}l&&c.loadProperties.push((0,n.tObjectProperty)((0,n.id)(s.name),l))}toCode(s,c=new r.CodeBuilder){return(0,n.toCode)(s,c)}handleField(s,c,o){let l=(0,e.getCurrentSlice)(c,"slice"),f=(0,e.getCurrentSlice)(c,"cell");if(s.subFields.length>0&&(0,u.inSeparateRef)(c,()=>{o.loadStatements.push((0,u.sliceLoad)(c,l)),o.storeStatements.push((0,u.newCellStmt)(c)),s.subFields.forEach(h=>{this.handleField(h,c,o)}),o.storeStatements.push((0,u.storeRefStmt)(c,f))}),s.fieldType.kind=="TLBExoticType")(0,u.inSeparateRef)(c,()=>{o.loadStatements.push((0,u.loadRefStmt)(c,l)),(0,i.addLoadProperty)(s.name,(0,n.id)((0,e.getCurrentSlice)(c,"cell")),void 0,o),o.properties.push((0,n.tTypedIdentifier)((0,n.id)(s.name),(0,n.id)("Cell"))),o.storeStatements.push((0,u.storeRefObjectStmt)(f,o,s))});else if(s.subFields.length==0){let h=this.handleType(s,s.fieldType,!0,o,c,0);h.loadExpr&&(0,i.addLoadProperty)(s.name,h.loadExpr,h.typeParamExpr,o),h.typeParamExpr&&o.properties.push((0,n.tTypedIdentifier)((0,n.id)(s.name),h.typeParamExpr)),h.storeStmtOutside&&o.storeStatements.push(h.storeStmtOutside),h.negatedVariablesLoads.forEach(E=>{(0,i.addLoadProperty)(E.name,E.expression,void 0,o)})}}handleType(s,c,o,l,f,h){let E=(0,e.getCurrentSlice)(f,"slice"),A=(0,e.getCurrentSlice)(f,"cell"),y=s.name,b="slice",k="builder";o&&(b=E,k=A);let g={typeParamExpr:void 0,loadExpr:void 0,loadFunctionExpr:void 0,storeStmtOutside:void 0,storeStmtInside:void 0,storeFunctionExpr:void 0,negatedVariablesLoads:[]},w,$;$=[(0,n.tMemberExpression)((0,n.id)(l.typeName),(0,n.id)(y))];let M=[(0,n.id)("arg")];if(c.kind=="TLBNumberType")w={argLoadExpr:(0,i.convertToAST)(c.bits,l.constructor),argStoreExpr:(0,i.convertToAST)(c.storeBits,l.constructor,(0,n.id)(l.typeName)),paramType:"number",fieldLoadSuffix:c.signed?"Int":"Uint",fieldStoreSuffix:c.signed?"Int":"Uint"},(0,i.isBigInt)(c)&&(w.fieldLoadSuffix+="Big",w.paramType="bigint");else if(c.kind=="TLBBitsType")if(c.bits instanceof t.TLBNumberExpr&&c.bits.n==1)w={argLoadExpr:void 0,argStoreExpr:void 0,paramType:"boolean",fieldLoadSuffix:"Bit",fieldStoreSuffix:"Bit"};else{let N=(0,i.useBuffer)(c),O=N?"Buffer":"Bits",x=(0,i.convertToAST)(c.bits,l.constructor),v=(0,i.convertToAST)(c.bits,l.constructor,(0,n.id)(l.name));N&&(x=(0,n.tBinaryExpression)(x,"/",(0,n.tNumericLiteral)(8)),v=(0,n.tBinaryExpression)(v,"/",(0,n.tNumericLiteral)(8))),w={argLoadExpr:x,argStoreExpr:v,paramType:N?"Buffer":"BitString",fieldLoadSuffix:O,fieldStoreSuffix:O}}else if(c.kind=="TLBCellType")w={argLoadExpr:(0,n.id)(b),argStoreExpr:(0,n.id)(b),paramType:"Cell",fieldLoadSuffix:"Ref",fieldStoreSuffix:"Slice"},$[0]=(0,n.tFunctionCall)((0,n.tMemberExpression)($[0],(0,n.id)("beginParse")),[(0,n.id)("true")]),M[0]=(0,n.tFunctionCall)((0,n.tMemberExpression)(M[0],(0,n.id)("beginParse")),[(0,n.id)("true")]);else if(c.kind=="TLBCoinsType")w={argLoadExpr:void 0,argStoreExpr:void 0,paramType:"bigint",fieldLoadSuffix:"Coins",fieldStoreSuffix:"Coins"};else if(c.kind=="TLBVarIntegerType")w={argLoadExpr:(0,i.convertToAST)(c.n,l.constructor),argStoreExpr:(0,i.convertToAST)(c.n,l.constructor,(0,n.id)(l.name)),paramType:"bigint",fieldLoadSuffix:c.signed?"VarIntBig":"VarUintBig",fieldStoreSuffix:c.signed?"VarInt":"VarUint"};else if(c.kind=="TLBTupleType")g.loadExpr=(0,n.tFunctionCall)((0,n.id)("parseTuple"),[(0,n.tFunctionCall)((0,n.tMemberExpression)((0,n.id)("slice"),(0,n.id)("asCell")),[])]),g.typeParamExpr=(0,n.id)("TupleItem[]"),g.storeStmtInside=(0,n.tExpressionStatement)((0,n.tFunctionCall)((0,n.id)("copyCellToBuilder"),[(0,n.tFunctionCall)((0,n.id)("serializeTuple"),M),(0,n.id)("builder")])),g.storeStmtOutside=(0,n.tExpressionStatement)((0,n.tFunctionCall)((0,n.id)("copyCellToBuilder"),[(0,n.tFunctionCall)((0,n.id)("serializeTuple"),$),(0,n.id)("builder")]));else if(c.kind=="TLBAddressType")if(c.addrType=="Internal")w={argLoadExpr:void 0,argStoreExpr:void 0,paramType:"Address",fieldLoadSuffix:"Address",fieldStoreSuffix:"Address"};else if(c.addrType=="External")w={argLoadExpr:void 0,argStoreExpr:void 0,paramType:"ExternalAddress | null",fieldLoadSuffix:"MaybeExternalAddress",fieldStoreSuffix:"Address"};else if(c.addrType=="Any")w={argLoadExpr:void 0,argStoreExpr:void 0,paramType:"Address | ExternalAddress | null",fieldLoadSuffix:"AddressAny",fieldStoreSuffix:"Address"};else throw new Error("Address has type other than ['Internal', 'External', 'Any']");else if(c.kind=="TLBExprMathType")g.loadExpr=(0,i.convertToAST)(c.expr,l.constructor),g.storeStmtOutside=(0,n.tExpressionStatement)(g.loadExpr);else if(c.kind=="TLBNegatedType"){let N=(0,n.id)(l.name+"_get_"+c.variableName);if(s.fieldType.kind=="TLBNamedType"){let O=s.fieldType.name;this.jsCodeFunctionsDeclarations.push((0,u.negationDerivationFuncDecl)(this.tlbCode,N,y,O,h))}g.negatedVariablesLoads.push({name:c.variableName,expression:(0,n.tFunctionCall)(N,[(0,n.id)(y)])})}else if(c.kind=="TLBNamedType"&&c.arguments.length==0){let N=c.name;g.typeParamExpr=(0,n.id)(N),o?(g.loadExpr=(0,n.tFunctionCall)((0,n.id)("load"+N),[(0,n.id)(b)]),g.storeStmtOutside=(0,u.storeExpressionNamedType)(N,$,A),g.storeStmtInside=(0,u.storeExpressionNamedType)(N,M,A)):(g.loadExpr=(0,n.id)("load"+N),g.storeStmtOutside=(0,n.tExpressionStatement)((0,n.id)("store"+N)))}else if(c.kind=="TLBCondType"){let N,O;N=this.handleType(s,c.value,!0,l,f,h),O=(0,i.convertToAST)(c.condition,l.constructor),N.typeParamExpr&&(g.typeParamExpr=(0,n.tUnionTypeExpression)([N.typeParamExpr,(0,n.id)("undefined")])),N.loadExpr&&(g.loadExpr=(0,n.tTernaryExpression)(O,N.loadExpr,(0,n.id)("undefined")));let x=$[0],v=M[0];x&&v&&N.storeStmtOutside&&(g.storeStmtOutside=(0,u.storeExprCond)(x,N.storeStmtOutside),g.storeStmtInside=(0,u.storeExprCond)(v,N.storeStmtOutside))}else if(c.kind=="TLBMultipleType"){let N,O;N=(0,i.convertToAST)(c.times,l.constructor),O=this.handleType(s,c.value,!1,l,f,h);let x=$[0],v=M[0];O.loadExpr&&(g.loadExpr=(0,u.loadTupleExpr)(N,O.loadExpr)),x&&v&&O.typeParamExpr&&O.storeStmtOutside&&O.storeFunctionExpr&&O.storeStmtInside&&(g.storeStmtOutside=(0,u.storeTupleStmt)(x,O.storeStmtInside,O.typeParamExpr),g.storeStmtInside=(0,u.storeTupleStmt)(v,O.storeStmtInside,O.typeParamExpr)),O.typeParamExpr&&(g.typeParamExpr=(0,u.arrayedType)(O.typeParamExpr))}else if(c.kind=="TLBCellInsideType"){let N=(0,e.getCurrentSlice)([1,0],"cell"),O=this.handleType(s,c.value,!0,l,[1,0],h);O.loadExpr&&(g.typeParamExpr=O.typeParamExpr,g.storeStmtOutside=O.storeStmtOutside,g.negatedVariablesLoads=O.negatedVariablesLoads,g.loadFunctionExpr=(0,u.loadFromNewSlice)(O.loadExpr),g.loadExpr=(0,n.tFunctionCall)(g.loadFunctionExpr,[(0,n.id)(b)])),O.storeStmtOutside&&(g.storeStmtOutside=(0,u.storeInNewCell)(N,O.storeStmtOutside)),O.storeStmtInside&&(g.storeStmtInside=(0,u.storeInNewCell)(N,O.storeStmtInside))}else if(c.kind=="TLBBoolType"){let N="load"+(c.value===void 0?"Bool":c.value?"BoolTrue":"BoolFalse");g.loadExpr=(0,n.tFunctionCall)((0,n.id)(N),[(0,n.id)("slice")]),g.typeParamExpr=(0,n.id)("Bool"),g.storeStmtInside=(0,n.tExpressionStatement)((0,n.tFunctionCall)((0,n.tFunctionCall)((0,n.id)("storeBool"),M),[(0,n.id)("builder")])),g.storeStmtOutside=(0,n.tExpressionStatement)((0,n.tFunctionCall)((0,n.tFunctionCall)((0,n.id)("storeBool"),$),[(0,n.id)("builder")]))}else if(c.kind=="TLBHashmapType"){let N=(0,u.dictKeyExpr)(c.key,l),O=(0,u.dictKeyExpr)(c.key,l,l.typeName),x=this.handleType(s,c.value,c.extra!=null,l,f,h);if(x.typeParamExpr&&x.loadFunctionExpr&&x.storeFunctionExpr){let v;if(c.extra&&x.loadExpr){let V=this.handleType(s,c.extra,!0,l,f,h);V.typeParamExpr&&(x.typeParamExpr=(0,u.dictAugTypeExpr)(x.typeParamExpr,V.typeParamExpr)),v=(0,u.dictValueStore)(x.typeParamExpr,x.storeFunctionExpr,V.storeFunctionExpr),V.loadExpr&&(g.loadExpr=(0,u.dictLoadExpr)(N,(0,u.dictAugParse)(V.loadExpr,x.loadExpr),E,c.directStore))}else v=(0,u.dictValueStore)(x.typeParamExpr,x.storeFunctionExpr),g.loadExpr=(0,u.dictLoadExpr)(N,x.loadFunctionExpr,E,c.directStore);g.typeParamExpr=(0,u.dictTypeParamExpr)(c,x.typeParamExpr),g.storeStmtInside=(0,u.dictStoreStmt)(A,M,O,v,c.directStore),g.storeStmtOutside=(0,u.dictStoreStmt)(A,$,O,v,c.directStore)}}else if(c.kind=="TLBNamedType"&&c.arguments.length){let N=c.name,O=(0,n.tTypeParametersExpression)([]),x=[],v=[],V=-1;c.arguments.forEach($e=>{V++;let m=this.handleType(s,$e,!1,l,f,V);m.typeParamExpr&&O.typeParameters.push(m.typeParamExpr),m.loadFunctionExpr&&x.push(m.loadFunctionExpr),m.storeFunctionExpr&&v.push(m.storeFunctionExpr),g.negatedVariablesLoads=g.negatedVariablesLoads.concat(m.negatedVariablesLoads)}),g.typeParamExpr=(0,n.tTypeWithParameters)((0,n.id)(N),O);let ee=O,q=[(0,n.id)(b)];g.loadExpr=(0,n.tFunctionCall)((0,n.id)("load"+N),q.concat(x),ee),g.storeStmtOutside=(0,u.storeCombinator)(N,$,v,ee,k),g.storeStmtInside=(0,u.storeCombinator)(N,M,v,ee,k),w&&(g.typeParamExpr=(0,n.id)(w.paramType))}return w&&(w.paramType!="BitString"&&w.paramType!="Cell"&&w.argStoreExpr&&($.push(w.argStoreExpr),M.push(w.argStoreExpr)),g.loadExpr=(0,u.loadExprForParam)(E,w),w.paramType=="Cell"&&(g.loadExpr=(0,n.tFunctionCall)((0,n.tMemberExpression)((0,n.id)(E),(0,n.id)("asCell")),[]),g.loadFunctionExpr=(0,u.returnSliceFunc)()),g.typeParamExpr=(0,n.id)(w.paramType),g.storeStmtOutside=(0,u.storeExprForParam)(k,w,$),g.storeStmtInside=(0,u.storeExprForParam)(k,w,M)),g.loadExpr&&!g.loadFunctionExpr&&(g.loadFunctionExpr=(0,u.coverFuncCall)(g.loadExpr)),g.storeStmtOutside&&!g.storeFunctionExpr&&(g.storeStmtInside||(g.storeStmtInside=g.storeStmtOutside),g.typeParamExpr&&(g.storeStmtOutside.type=="ExpressionStatement"&&g.storeStmtOutside.expression.type=="FunctionCall"||g.storeStmtOutside.type=="MultiStatement"?g.storeFunctionExpr=(0,u.storeFunctionExpr)(g.typeParamExpr,g.storeStmtInside):g.storeStmtOutside.type=="ExpressionStatement"&&(g.storeFunctionExpr=g.storeStmtOutside.expression))),g.storeStmtInside=g.storeStmtInside,g}}return Qe.TypescriptGenerator=a,Qe}var Rr;function ia(){if(Rr)return re;Rr=1;var t=re&&re.__awaiter||function(A,y,b,k){function g(w){return w instanceof b?w:new b(function($){$(w)})}return new(b||(b=Promise))(function(w,$){function M(x){try{O(k.next(x))}catch(v){$(v)}}function N(x){try{O(k.throw(x))}catch(v){$(v)}}function O(x){x.done?w(x.value):g(x.value).then(M,N)}O((k=k.apply(A,y||[])).next())})},e=re&&re.__importDefault||function(A){return A&&A.__esModule?A:{default:A}};Object.defineProperty(re,"__esModule",{value:!0}),re.generateCode=re.generateCodeWithGenerator=re.generateCodeFromData=re.generateCodeByAST=re.getTLBCode=re.getTLBCodeByAST=void 0;const r=Xe(),u=Lr(),n=Lr(),i=Jt(),a=hn(),p=e(Cn);function s(A,y){let b={types:new Map},k=y.split(`
`);return(0,n.fillConstructors)(A.declarations,b,k),(0,u.convertCodeToReadonly)(b)}re.getTLBCodeByAST=s;function c(A){return t(this,void 0,void 0,function*(){const y=yield p.default.readFile(A,"utf-8"),b=(0,r.ast)(y);return s(b,y)})}re.getTLBCode=c;function o(A,y,b){let k=s(A,y),g=b(k);g.addTonCoreClassUsage("Builder"),g.addTonCoreClassUsage("Slice"),g.addTonCoreClassUsage("beginCell"),g.addTonCoreClassUsage("BitString"),g.addTonCoreClassUsage("Cell"),g.addTonCoreClassUsage("Address"),g.addTonCoreClassUsage("ExternalAddress"),g.addTonCoreClassUsage("Dictionary"),g.addTonCoreClassUsage("DictionaryValue"),g.addTonCoreClassUsage("TupleItem"),g.addTonCoreClassUsage("parseTuple"),g.addTonCoreClassUsage("serializeTuple"),g.addBuiltinCode();let w=[];g.jsCodeDeclarations.forEach(M=>{w.push(M)}),k.types.forEach(M=>{g.addTlbType(M)});let $="";return g.jsCodeConstructorDeclarations.forEach(M=>{w.push(M)}),g.jsCodeFunctionsDeclarations.forEach(M=>{w.push(M)}),w.forEach(M=>{$+=g.toCode(M,new i.CodeBuilder).render()+`
`}),$}re.generateCodeByAST=o;function l(A){return y=>{if(A=="typescript")return new a.TypescriptGenerator(y);throw new Error(`Result language ${A} is not supported`)}}function f(A,y){return t(this,void 0,void 0,function*(){const b=(0,r.ast)(A);return o(b,A,l(y))})}re.generateCodeFromData=f;function h(A,y,b){return t(this,void 0,void 0,function*(){const k=yield p.default.readFile(A,"utf-8"),g=(0,r.ast)(k);yield p.default.writeFile(y,o(g,k,b),{}),console.log(`Generated code is saved to ${y}`)})}re.generateCodeWithGenerator=h;function E(A,y,b){return t(this,void 0,void 0,function*(){return h(A,y,l(b))})}return re.generateCode=E,re}var $r;function aa(){return $r||($r=1,(function(t){var e=Ve&&Ve.__createBinding||(Object.create?(function(a,p,s,c){c===void 0&&(c=s);var o=Object.getOwnPropertyDescriptor(p,s);(!o||("get"in o?!p.__esModule:o.writable||o.configurable))&&(o={enumerable:!0,get:function(){return p[s]}}),Object.defineProperty(a,c,o)}):(function(a,p,s,c){c===void 0&&(c=s),a[c]=p[s]})),r=Ve&&Ve.__exportStar||function(a,p){for(var s in a)s!=="default"&&!Object.prototype.hasOwnProperty.call(p,s)&&e(p,a,s)};Object.defineProperty(t,"__esModule",{value:!0}),t.TypescriptGenerator=t.isBigIntExprForJson=t.isBigIntForJson=t.generateCodeFromData=t.generateCodeWithGenerator=t.generateCodeByAST=t.getTLBCodeByAST=t.getTLBCode=t.generateCode=void 0;var u=ia();Object.defineProperty(t,"generateCode",{enumerable:!0,get:function(){return u.generateCode}}),Object.defineProperty(t,"getTLBCode",{enumerable:!0,get:function(){return u.getTLBCode}}),Object.defineProperty(t,"getTLBCodeByAST",{enumerable:!0,get:function(){return u.getTLBCodeByAST}}),Object.defineProperty(t,"generateCodeByAST",{enumerable:!0,get:function(){return u.generateCodeByAST}}),Object.defineProperty(t,"generateCodeWithGenerator",{enumerable:!0,get:function(){return u.generateCodeWithGenerator}}),Object.defineProperty(t,"generateCodeFromData",{enumerable:!0,get:function(){return u.generateCodeFromData}}),r(Ke(),t);var n=er();Object.defineProperty(t,"isBigIntForJson",{enumerable:!0,get:function(){return n.isBigInt}}),Object.defineProperty(t,"isBigIntExprForJson",{enumerable:!0,get:function(){return n.isBigIntExpr}});var i=hn();Object.defineProperty(t,"TypescriptGenerator",{enumerable:!0,get:function(){return i.TypescriptGenerator}})})(Ve)),Ve}var lt=aa(),sa=Xe();function oa(t){const e=Vr.from(t,"utf-8");return new ue.BitString(e,0,e.length*8)}function la(t){if(t.length%8!==0)throw new Error("Bits must be at least 8 bits");let e="";for(let r=0;r<t.length;r+=8)e+=String.fromCharCode(parseInt(`0x${t.substring(r,8).toString()}`));return e}function ca(t){const e=t.length,r=Vr.alloc(Math.ceil(e/8));for(let u=0;u<e;u++){const n=Math.floor(u/8),i=7-u%8;t.at(u)&&(r[n]|=1<<i)}return new ue.BitString(r,0,e)}function pa(t){try{return{success:!0,value:ue.Cell.fromBase64(t)}}catch{try{return{success:!0,value:ue.Cell.fromHex(t)}}catch{return{success:!1,error:new te("Bad BoC string")}}}}class Ne{constructor(e=new Map){this.variables=e}evaluate(e){if(e instanceof lt.TLBNumberExpr)return e.n;if(e instanceof lt.TLBVarExpr){const n=this.variables.get(e.x);if(n===void 0)throw new Error(`Variable ${e.x} is not defined`);return n}if(e instanceof lt.TLBBinaryOp){const n=this.evaluate(e.left),i=this.evaluate(e.right);switch(e.operation){case"+":return n+i;case"-":return n-i;case"*":return n*i;case"/":return Math.floor(n/i);case"%":return n%i;case"<<":return n<<i;case">>":return n>>i;case"&":return n&i;case"|":return n|i;case"^":return n^i;case"==":return n===i?1:0;case"!=":return n!==i?1:0;case"<":return n<i?1:0;case"<=":return n<=i?1:0;case">":return n>i?1:0;case">=":return n>=i?1:0;case"=":return n===i?1:0;default:throw new Error(`Unknown operation: ${e.operation}`)}}const r=this.evaluate(e.value),u=e.operation;switch(u){case"-":return-r;case"~":return~r;case"!":return r?0:1;case".":return r;default:throw new Error(`Unknown unary operation: ${u}`)}}}function da(t){return t instanceof Error?t:new Error(String(t))}function ct(t){if(t.success)return t.value;throw da(t.error)}class Dn extends Error{}class ma extends Dn{}class te extends Dn{}function St(t){return`0b${BigInt(t.binary).toString(2).padStart(t.bitLen,"0")}`}class mt{constructor(e,r,u,n={}){this.schema=e,this.types=r,this.lastTypeName=u,this.config=n,this.tagMap=new Map,this.maxSizeTag=0,n.autoText=n.autoText||!0;for(const i of this.types.values())for(const a of i.constructors)if(a.tag.bitLen>0){a.tag.bitLen>this.maxSizeTag&&(this.maxSizeTag=a.tag.bitLen);const p=St(a.tag);this.tagMap.set(p,{type:i,item:a})}}static from(e,r={}){try{const u=sa.ast(e),n=lt.getTLBCodeByAST(u,e),i=e.split("="),a=i[i.length-1].split(";")[0].trim().split(" ")[0].trim();return{success:!0,value:new mt(e,n.types,a,r)}}catch{}return{success:!1,error:new ma("Bad Schema")}}changeSchema(e){return this.schema===e?{success:!0,value:this}:mt.from(e,this.config)}parseCell(e){return ct(this.deserialize(e))}encodeCell(e){return typeof e=="string"&&(e=JSON.parse(e)),ct(this.serialize(e)).endCell()}findByTag(e){const r=e.remainingBits,u=Math.min(this.maxSizeTag,r);for(let n=u;n>=1;n--){if(r<n)continue;const i=e.preloadUint(n),a=St({bitLen:n,binary:`0x${i.toString(16)}`}),p=this.tagMap.get(a);if(p)return p}return null}deserialize(e,r=!1){if(typeof e=="string"){const i=pa(e);if(!i.success)return i;e=i.value}const u=e.asSlice();if(r){const i=this.findByTag(u);if(i)return this.deserializeConstructor(i.type,i.item,u)}const n=Array.from(this.types.keys());try{const i=this.deserializeByTypeName(this.lastTypeName,u.clone());if(i.success)return i}catch{}for(const i of n.slice().reverse()){if(i===this.lastTypeName)continue;const a=this.deserializeByTypeName(i,u.clone());if(a.success)return a}return{success:!1,error:new te("No matching constructor")}}deserializeByTypeName(e,r){const u=this.types.get(e);return u?this.deserializeType(u,r):{success:!1,error:new te(`Type ${e} not found in TL-B schema`)}}serialize(e){const r=e.kind;return r?this.serializeByTypeName(r,e):{success:!1,error:new te("Data must by typed")}}serializeByTypeName(e,r){const u=e.indexOf("_"),n=u===-1?e:e.slice(0,u),i=this.types.get(n);if(!i)return{success:!1,error:new te(`Type ${n} not found in TL-B schema`)};const a=ue.beginCell();return this.serializeType(i,r,a),{success:!0,value:a}}deserializeType(e,r,u=[]){for(const n of e.constructors){const i=r.clone(),a=this.deserializeConstructor(e,n,i,u);if(a.success){const p=r.remainingBits-i.remainingBits,s=r.remainingRefs-i.remainingRefs;p>0&&r.skip(p);for(let c=0;c<s;c++)r.loadRef();return a}}return{success:!1,error:new te(`Failed to deserialize type ${e.name} no matching constructor found`)}}deserializeConstructor(e,r,u,n=[]){const i=e.constructors.length>1?`${e.name}_${r.name}`:e.name;if(r.tag.bitLen>0){const o=r.tag.bitLen;if(u.remainingBits<o)return{success:!1,error:new te(`Not enough bits to read tag for ${i}`)};const l=`0b${u.loadUint(o).toString(2).padStart(o,"0")}`,f=St(r.tag);if(l!==f)return{success:!1,error:new te(`Failed to deserialize type ${i}`)}}const a=new Map;if(n.length>0&&r.parameters.length>0){const o=new Ne(a);for(let l=0;l<Math.min(n.length,r.parameters.length);l++){const f=r.parameters[l],h=n[l];let E;try{h.kind==="TLBExprMathType"?E=o.evaluate(h.initialExpr):h.kind==="TLBNumberType"&&(E=o.evaluate(h.bits))}catch{}f.argName&&typeof E=="number"&&a.set(f.argName,E);try{if(f.variable?.name&&f.variable.deriveExpr){const A=new Ne(a).evaluate(f.variable.deriveExpr);a.set(f.variable.name,A)}else f.variable?.name&&typeof E=="number"&&a.set(f.variable.name,E)}catch{}}}let p={kind:i};for(const o of r.fields)if(o.subFields.length>0){if(u.remainingRefs===0)return{success:!1,error:new te(`No more references available for field ${o.name}`)};const l=u.loadRef();if(o.subFields.length===1){const f=o.subFields[0];if(f.fieldType.kind==="TLBCellType")p[o.name]=l;else if(f.fieldType.kind==="TLBNamedType"){const h=l.beginParse(!0),E=this.types.get(f.fieldType.name);if(E){const A=this.deserializeType(E,h,f.fieldType.arguments);if(A.success)p[o.name]=A.value;else return A}else return{success:!1,error:new te(`Type ${f.fieldType.name} not found`)}}else{const h=l.beginParse(!0);p[o.name]=this.deserializeField(f,h,a)}}else{const f=l.beginParse(!0),h={};for(const E of o.subFields)h[E.name]=this.deserializeField(E,f,a);p[o.name]=h}}else{if(o.fieldType.kind==="TLBNamedType"&&r.parametersMap.get(o.fieldType.name)){const l=r.parametersMap.get(o.fieldType.name),f=r.parameters.findIndex(h=>h.variable.name===l.variable.name);o.fieldType=n[f]}p[o.name]=this.deserializeField(o,u,a)}const s=new Ne(a);for(const o of r.constraints)if(s.evaluate(o)!==1)return{success:!1,error:new te(`Failed to deserialize type ${i} due to constraint`)};i==="ExprType"&&typeof p.x=="number"&&(p.x=BigInt(p.x));const c={kind:i};for(const o of r.parameters){const l=a.get(o.variable.name);typeof l=="number"&&(c[o.variable.name]=l)}for(const o of r.fields)c[o.name]=p[o.name];return{success:!0,value:c}}deserializeField(e,r,u){const n=this.deserializeFieldType(e.fieldType,r,u);return e.name&&(e.fieldType.kind==="TLBNumberType"||e.fieldType.kind==="TLBVarIntegerType"||e.fieldType.kind==="TLBBoolType")&&u.set(e.name,Number(n)),n}deserializeFieldType(e,r,u){const n=new Ne(u);switch(e.kind){case"TLBNumberType":{let i;try{i=n.evaluate(e.bits)}catch(p){if(p instanceof Error){const s=/Variable\s+([^\s]+)\s+is\s+not\s+defined/.exec(p.message);if(s&&s[1]){const c=s[1],o=Math.max(1,Math.min(256,r.remainingBits));u.set(c,o),i=new Ne(u).evaluate(e.bits)}else throw p}else throw p}const a=this.loadBigInt(r,i,e.signed);return i<=32?Number(a):a}case"TLBBoolType":return e.value!==void 0?e.value:r.loadBit();case"TLBBitsType":{let i;try{i=n.evaluate(e.bits)}catch(p){if(p instanceof Error){const s=/Variable\s+([^\s]+)\s+is\s+not\s+defined/.exec(p.message);if(s&&s[1]){const c=s[1],o=Math.max(1,Math.min(1023,r.remainingBits));u.set(c,o),i=new Ne(u).evaluate(e.bits)}else throw p}else throw p}const a=r.loadBits(i);return this.config.autoText&&i%8===0?la(a):i===1?a.at(0):ca(a)}case"TLBNamedType":{if(e.name==="Bool")return r.loadBit();const i=this.types.get(e.name);if(!i)throw new te(`Type ${e.name} not found in TL-B schema`);return ct(this.deserializeType(i,r,e.arguments))}case"TLBCoinsType":return r.loadCoins();case"TLBAddressType":{if(r.preloadUint(2)!==2){if(r.remainingBits===2)return null;if(r.loadUint(2)===1){const a=r.loadUint(9);return new ue.ExternalAddress(r.loadUintBig(a),a)}}return r.loadAddress()}case"TLBCellType":{if(r.remainingRefs===0)throw new te("No more references available for TLBCellType");return r.loadRef()}case"TLBCellInsideType":{if(r.remainingRefs===0)throw new te("No more references available for TLBCellInsideType");const i=r.loadRef();if(e.value.kind==="TLBCellType")return i;const a=i.beginParse();return this.deserializeFieldType(e.value,a,u)}case"TLBHashmapType":{const i=n.evaluate(e.key.expr);return r.loadDict(ue.Dictionary.Keys.BigInt(i),{serialize:()=>{},parse:p=>this.deserializeFieldType(e.value,p,new Map(u))})}case"TLBVarIntegerType":{const i=n.evaluate(e.n);return e.signed?r.loadVarIntBig(i):r.loadVarUintBig(i)}case"TLBMultipleType":{const i=n.evaluate(e.times),a=[];for(let p=0;p<i;p++)a.push(this.deserializeFieldType(e.value,r,u));return a}case"TLBCondType":return n.evaluate(e.condition)?this.deserializeFieldType(e.value,r,u):void 0;case"TLBTupleType":{const i=r.loadRef();return ue.parseTuple(i)}default:throw new te(`Unsupported field type: ${e.kind}`)}}serializeType(e,r,u){const n=r.kind;if(!n)throw new te("Data must by typed");const i=n.substring(e.name.length+1);let a;if(i?a=e.constructors.find(c=>c.name===i):e.constructors.length>0&&(a=e.constructors[0]),!a)throw new te(`Constructor not found for type ${n}`);if(a.tag.bitLen>0){const c=BigInt(a.tag.binary);u.storeUint(c,a.tag.bitLen)}const p=new Map;for(const c of a.fields)c.anonymous?this.serializeField(c,null,u,p):this.serializeField(c,r[c.name],u,p);const s=new Ne(p);for(const c of a.constraints)if(s.evaluate(c)!==1)throw new te(`Constraint failed for type ${e.name}, constructor ${a.name}`)}serializeField(e,r,u,n){e.name&&(e.fieldType.kind==="TLBNumberType"||e.fieldType.kind==="TLBVarIntegerType"||e.fieldType.kind==="TLBBoolType")&&n.set(e.name,Number(r)),this.serializeFieldType(e.fieldType,r,u,n)}serializeFieldType(e,r,u,n){const i=new Ne(n);switch(e.kind){case"TLBNumberType":{const a=i.evaluate(e.bits);u.storeUint(r,a);break}case"TLBBoolType":{if(e.value!==void 0)break;u.storeBit(r?1:0);break}case"TLBBitsType":{typeof r=="string"&&(r=oa(r)),r instanceof ue.BitString&&u.storeBits(r);break}case"TLBNamedType":{const a=this.types.get(e.name);if(!a)throw new te(`Type ${e.name} not found in TL-B schema`);this.serializeType(a,r,u);break}case"TLBCoinsType":{u.storeCoins(r);break}case"TLBAddressType":{typeof r=="string"&&(r=ue.Address.parse(r)),u.storeAddress(r);break}case"TLBCellType":{u.storeRef(r);break}case"TLBCellInsideType":{const a=ue.beginCell();this.serializeFieldType(e.value,r,a,n),u.storeRef(a.endCell());break}case"TLBHashmapType":{const a=i.evaluate(e.key.expr),p=ue.Dictionary.empty(ue.Dictionary.Keys.BigInt(a),ue.Dictionary.Values.Cell());if(r)for(const[s,c]of Object.entries(r)){const o=ue.beginCell();this.serializeFieldType(e.value,c,o,new Map(n)),p.set(BigInt(s),o.endCell())}u.storeDict(p);break}case"TLBVarIntegerType":{const a=i.evaluate(e.n);e.signed?u.storeVarInt(r,a):u.storeVarUint(r,a);break}case"TLBMultipleType":{const a=i.evaluate(e.times);for(let p=0;p<a;p++)this.serializeFieldType(e.value,r[p],u,n);break}case"TLBCondType":{i.evaluate(e.condition)&&this.serializeFieldType(e.value,r,u,n);break}case"TLBTupleType":{const a=ue.serializeTuple(r);u.storeRef(a);break}default:throw new te(`Unsupported field type: ${e.kind}`)}}loadBigInt(e,r,u=!1){return u?e.loadIntBig(r):e.loadUintBig(r)}}function fa(t,e){return typeof e=="bigint"||e instanceof ue.Address||e instanceof ue.BitString?e.toString():e instanceof ue.Cell?e.toBoc().toString("base64"):e}const ha=`// https://github.com/ton-blockchain/ton/raw/774371bdc9f6107fd05106c1fd559e8903e0513d/crypto/block/block.tlb
unit$_ = Unit;
true$_ = True;
// EMPTY False;
bool_false$0 = Bool;
bool_true$1 = Bool;
bool_false$0 = BoolFalse;
bool_true$1 = BoolTrue;
nothing$0 {X:Type} = Maybe X;
just$1 {X:Type} value:X = Maybe X;
left$0 {X:Type} {Y:Type} value:X = Either X Y;
right$1 {X:Type} {Y:Type} value:Y = Either X Y;
pair$_ {X:Type} {Y:Type} first:X second:Y = Both X Y;

bit$_ (## 1) = Bit;
/*
 *
 *   FROM hashmap.tlb
 *
 */
// ordinary Hashmap / HashmapE, with fixed length keys
//
hm_edge#_ {n:#} {X:Type} {l:#} {m:#} label:(HmLabel ~l n) 
          {n = (~m) + l} node:(HashmapNode m X) = Hashmap n X;

hmn_leaf#_ {X:Type} value:X = HashmapNode 0 X;
hmn_fork#_ {n:#} {X:Type} left:^(Hashmap n X) 
           right:^(Hashmap n X) = HashmapNode (n + 1) X;

hml_short$0 {m:#} {n:#} len:(Unary ~n) {n <= m} s:(n * Bit) = HmLabel ~n m;
hml_long$10 {m:#} n:(#<= m) s:(n * Bit) = HmLabel ~n m;
hml_same$11 {m:#} v:Bit n:(#<= m) = HmLabel ~n m;

unary_zero$0 = Unary ~0;
unary_succ$1 {n:#} x:(Unary ~n) = Unary ~(n + 1);

hme_empty$0 {n:#} {X:Type} = HashmapE n X;
hme_root$1 {n:#} {X:Type} root:^(Hashmap n X) = HashmapE n X;

// true#_ = True;
_ {n:#} _:(Hashmap n True) = BitstringSet n;

//  HashmapAug, hashmap with an extra value 
//   (augmentation) of type Y at every node
//
ahm_edge#_ {n:#} {X:Type} {Y:Type} {l:#} {m:#} 
  label:(HmLabel ~l n) {n = (~m) + l} 
  node:(HashmapAugNode m X Y) = HashmapAug n X Y;
ahmn_leaf#_ {X:Type} {Y:Type} extra:Y value:X = HashmapAugNode 0 X Y;
ahmn_fork#_ {n:#} {X:Type} {Y:Type} left:^(HashmapAug n X Y)
  right:^(HashmapAug n X Y) extra:Y = HashmapAugNode (n + 1) X Y;

ahme_empty$0 {n:#} {X:Type} {Y:Type} extra:Y 
          = HashmapAugE n X Y;
ahme_root$1 {n:#} {X:Type} {Y:Type} root:^(HashmapAug n X Y) 
  extra:Y = HashmapAugE n X Y;

// VarHashmap / VarHashmapE, with variable-length keys
//
vhm_edge#_ {n:#} {X:Type} {l:#} {m:#} label:(HmLabel ~l n) 
           {n = (~m) + l} node:(VarHashmapNode m X) 
           = VarHashmap n X;
vhmn_leaf$00 {n:#} {X:Type} value:X = VarHashmapNode n X;
vhmn_fork$01 {n:#} {X:Type} left:^(VarHashmap n X) 
             right:^(VarHashmap n X) value:(Maybe X) 
             = VarHashmapNode (n + 1) X;
vhmn_cont$1 {n:#} {X:Type} branch:Bit child:^(VarHashmap n X) 
            value:X = VarHashmapNode (n + 1) X;

// nothing$0 {X:Type} = Maybe X;
// just$1 {X:Type} value:X = Maybe X;

vhme_empty$0 {n:#} {X:Type} = VarHashmapE n X;
vhme_root$1 {n:#} {X:Type} root:^(VarHashmap n X) 
            = VarHashmapE n X;

//
// PfxHashmap / PfxHashmapE, with variable-length keys
//                           constituting a prefix code
//

phm_edge#_ {n:#} {X:Type} {l:#} {m:#} label:(HmLabel ~l n) 
           {n = (~m) + l} node:(PfxHashmapNode m X) 
           = PfxHashmap n X;

phmn_leaf$0 {n:#} {X:Type} value:X = PfxHashmapNode n X;
phmn_fork$1 {n:#} {X:Type} left:^(PfxHashmap n X) 
            right:^(PfxHashmap n X) = PfxHashmapNode (n + 1) X;

phme_empty$0 {n:#} {X:Type} = PfxHashmapE n X;
phme_root$1 {n:#} {X:Type} root:^(PfxHashmap n X) 
            = PfxHashmapE n X;
/*
 *
 *  END hashmap.tlb
 *
 */
//
// TON BLOCK LAYOUT
//
addr_none$00 = MsgAddressExt;
addr_extern$01 len:(## 9) external_address:(bits len) 
             = MsgAddressExt;
anycast_info$_ depth:(#<= 30) { depth >= 1 }
   rewrite_pfx:(bits depth) = Anycast;
addr_std$10 anycast:(Maybe Anycast) 
   workchain_id:int8 address:bits256  = MsgAddressInt;
addr_var$11 anycast:(Maybe Anycast) addr_len:(## 9) 
   workchain_id:int32 address:(bits addr_len) = MsgAddressInt;
_ _:MsgAddressInt = MsgAddress;
_ _:MsgAddressExt = MsgAddress;
//
var_uint$_ {n:#} len:(#< n) value:(uint (len * 8))
         = VarUInteger n;
var_int$_ {n:#} len:(#< n) value:(int (len * 8)) 
        = VarInteger n;
nanograms$_ amount:(VarUInteger 16) = Grams;

_ grams:Grams = Coins;

//
extra_currencies$_ dict:(HashmapE 32 (VarUInteger 32)) 
                 = ExtraCurrencyCollection;
currencies$_ grams:Grams other:ExtraCurrencyCollection 
           = CurrencyCollection;
//
int_msg_info$0 ihr_disabled:Bool bounce:Bool bounced:Bool
  src:MsgAddressInt dest:MsgAddressInt 
  value:CurrencyCollection ihr_fee:Grams fwd_fee:Grams
  created_lt:uint64 created_at:uint32 = CommonMsgInfo;
ext_in_msg_info$10 src:MsgAddressExt dest:MsgAddressInt 
  import_fee:Grams = CommonMsgInfo;
ext_out_msg_info$11 src:MsgAddressInt dest:MsgAddressExt
  created_lt:uint64 created_at:uint32 = CommonMsgInfo;

int_msg_info$0 ihr_disabled:Bool bounce:Bool bounced:Bool
  src:MsgAddress dest:MsgAddressInt 
  value:CurrencyCollection ihr_fee:Grams fwd_fee:Grams
  created_lt:uint64 created_at:uint32 = CommonMsgInfoRelaxed;
ext_out_msg_info$11 src:MsgAddress dest:MsgAddressExt
  created_lt:uint64 created_at:uint32 = CommonMsgInfoRelaxed;

tick_tock$_ tick:Bool tock:Bool = TickTock;

_ fixed_prefix_length:(Maybe (## 5)) special:(Maybe TickTock)
  code:(Maybe ^Cell) data:(Maybe ^Cell)
  library:(Maybe ^Cell) = StateInit;

// StateInitWithLibs is used to validate sent and received messages
_ fixed_prefix_length:(Maybe (## 5)) special:(Maybe TickTock)
  code:(Maybe ^Cell) data:(Maybe ^Cell)
  library:(HashmapE 256 SimpleLib) = StateInitWithLibs;

simple_lib$_ public:Bool root:^Cell = SimpleLib;

message$_ {X:Type} info:CommonMsgInfo
  init:(Maybe (Either StateInit ^StateInit))
  body:(Either X ^X) = Message X;

message$_ {X:Type} info:CommonMsgInfoRelaxed
  init:(Maybe (Either StateInit ^StateInit))
  body:(Either X ^X) = MessageRelaxed X;
  
_ (Message Any) = MessageAny;

//
interm_addr_regular$0 use_dest_bits:(#<= 96) 
  = IntermediateAddress;
interm_addr_simple$10 workchain_id:int8 addr_pfx:uint64 
  = IntermediateAddress;
interm_addr_ext$11 workchain_id:int32 addr_pfx:uint64
  = IntermediateAddress;
msg_envelope#4 cur_addr:IntermediateAddress 
  next_addr:IntermediateAddress fwd_fee_remaining:Grams 
  msg:^(Message Any) = MsgEnvelope;
msg_metadata#0 depth:uint32 initiator_addr:MsgAddressInt initiator_lt:uint64 = MsgMetadata;
msg_envelope_v2#5 cur_addr:IntermediateAddress
  next_addr:IntermediateAddress fwd_fee_remaining:Grams
  msg:^(Message Any)
  emitted_lt:(Maybe uint64)
  metadata:(Maybe MsgMetadata) = MsgEnvelope;
//
msg_import_ext$000 msg:^(Message Any) transaction:^Transaction 
              = InMsg;
msg_import_ihr$010 msg:^(Message Any) transaction:^Transaction 
    ihr_fee:Grams proof_created:^Cell = InMsg;
msg_import_imm$011 in_msg:^MsgEnvelope
    transaction:^Transaction fwd_fee:Grams = InMsg;
msg_import_fin$100 in_msg:^MsgEnvelope 
    transaction:^Transaction fwd_fee:Grams = InMsg;
msg_import_tr$101  in_msg:^MsgEnvelope out_msg:^MsgEnvelope 
    transit_fee:Grams = InMsg;
msg_discard_fin$110 in_msg:^MsgEnvelope transaction_id:uint64 
    fwd_fee:Grams = InMsg;
msg_discard_tr$111 in_msg:^MsgEnvelope transaction_id:uint64 
    fwd_fee:Grams proof_delivered:^Cell = InMsg;
msg_import_deferred_fin$00100 in_msg:^MsgEnvelope
    transaction:^Transaction fwd_fee:Grams = InMsg;
msg_import_deferred_tr$00101 in_msg:^MsgEnvelope out_msg:^MsgEnvelope = InMsg;
//
import_fees$_ fees_collected:Grams 
  value_imported:CurrencyCollection = ImportFees;

_ (HashmapAugE 256 InMsg ImportFees) = InMsgDescr;

msg_export_ext$000 msg:^(Message Any)
    transaction:^Transaction = OutMsg;
msg_export_imm$010 out_msg:^MsgEnvelope 
    transaction:^Transaction reimport:^InMsg = OutMsg;
msg_export_new$001 out_msg:^MsgEnvelope 
    transaction:^Transaction = OutMsg;
msg_export_tr$011  out_msg:^MsgEnvelope 
    imported:^InMsg = OutMsg;
msg_export_deq$1100 out_msg:^MsgEnvelope
    import_block_lt:uint63 = OutMsg;
msg_export_deq_short$1101 msg_env_hash:bits256
    next_workchain:int32 next_addr_pfx:uint64
    import_block_lt:uint64 = OutMsg;
msg_export_tr_req$111 out_msg:^MsgEnvelope 
    imported:^InMsg = OutMsg;
msg_export_deq_imm$100 out_msg:^MsgEnvelope 
    reimport:^InMsg = OutMsg;
msg_export_new_defer$10100 out_msg:^MsgEnvelope
    transaction:^Transaction = OutMsg;
msg_export_deferred_tr$10101  out_msg:^MsgEnvelope
    imported:^InMsg = OutMsg;

_ enqueued_lt:uint64 out_msg:^MsgEnvelope = EnqueuedMsg;

_ (HashmapAugE 256 OutMsg CurrencyCollection) = OutMsgDescr;

_ (HashmapAugE 352 EnqueuedMsg uint64) = OutMsgQueue;

processed_upto$_ last_msg_lt:uint64 last_msg_hash:bits256 = ProcessedUpto;
// key is [ shard:uint64 mc_seqno:uint32 ]  
_ (HashmapE 96 ProcessedUpto) = ProcessedInfo;

ihr_pending$_ import_lt:uint64 = IhrPendingSince;
_ (HashmapE 320 IhrPendingSince) = IhrPendingInfo;

// key - created_lt
_ messages:(HashmapE 64 EnqueuedMsg) count:uint48 = AccountDispatchQueue;
// key - sender address, aug - min created_lt
_ (HashmapAugE 256 AccountDispatchQueue uint64) = DispatchQueue;

out_msg_queue_extra#0 dispatch_queue:DispatchQueue out_queue_size:(Maybe uint48) = OutMsgQueueExtra;

_ out_queue:OutMsgQueue proc_info:ProcessedInfo
  extra:(Maybe OutMsgQueueExtra) = OutMsgQueueInfo;

storage_extra_none$000 = StorageExtraInfo;
storage_extra_info$001 dict_hash:uint256 = StorageExtraInfo;

storage_used$_ cells:(VarUInteger 7) bits:(VarUInteger 7) = StorageUsed;

storage_info$_ used:StorageUsed storage_extra:StorageExtraInfo last_paid:uint32
              due_payment:(Maybe Grams) = StorageInfo;

account_none$0 = Account;
account$1 addr:MsgAddressInt storage_stat:StorageInfo
          storage:AccountStorage = Account;

account_storage$_ last_trans_lt:uint64
    balance:CurrencyCollection state:AccountState 
  = AccountStorage;

account_uninit$00 = AccountState;
account_active$1 _:StateInit = AccountState;
account_frozen$01 state_hash:bits256 = AccountState;

acc_state_uninit$00 = AccountStatus;
acc_state_frozen$01 = AccountStatus;
acc_state_active$10 = AccountStatus;
acc_state_nonexist$11 = AccountStatus;

account_descr$_ account:^Account last_trans_hash:bits256 
  last_trans_lt:uint64 = ShardAccount;

depth_balance$_ split_depth:(#<= 30) balance:CurrencyCollection = DepthBalanceInfo;

_ (HashmapAugE 256 ShardAccount DepthBalanceInfo) = ShardAccounts;

transaction$0111 account_addr:bits256 lt:uint64 
  prev_trans_hash:bits256 prev_trans_lt:uint64 now:uint32
  outmsg_cnt:uint15
  orig_status:AccountStatus end_status:AccountStatus
  ^[ in_msg:(Maybe ^(Message Any)) out_msgs:(HashmapE 15 ^(Message Any)) ]
  total_fees:CurrencyCollection state_update:^(HASH_UPDATE Account)
  description:^TransactionDescr = Transaction;

!merkle_update#04 {X:Type} old_hash:bits256 new_hash:bits256 old_depth:uint16 new_depth:uint16
  old:^X new:^X = MERKLE_UPDATE X;
update_hashes#72 {X:Type} old_hash:bits256 new_hash:bits256
  = HASH_UPDATE X;
!merkle_proof#03 {X:Type} virtual_hash:bits256 depth:uint16 virtual_root:^X = MERKLE_PROOF X;

acc_trans#5 account_addr:bits256
            transactions:(HashmapAug 64 ^Transaction CurrencyCollection)
            state_update:^(HASH_UPDATE Account)
          = AccountBlock;

_ (HashmapAugE 256 AccountBlock CurrencyCollection) = ShardAccountBlocks;
//
tr_phase_storage$_ storage_fees_collected:Grams 
  storage_fees_due:(Maybe Grams)
  status_change:AccStatusChange
  = TrStoragePhase;

acst_unchanged$0 = AccStatusChange;  // x -> x
acst_frozen$10 = AccStatusChange;    // init -> frozen
acst_deleted$11 = AccStatusChange;   // frozen -> deleted

tr_phase_credit$_ due_fees_collected:(Maybe Grams)
  credit:CurrencyCollection = TrCreditPhase;

tr_phase_compute_skipped$0 reason:ComputeSkipReason
  = TrComputePhase;
tr_phase_compute_vm$1 success:Bool msg_state_used:Bool 
  account_activated:Bool gas_fees:Grams
  ^[ gas_used:(VarUInteger 7)
  gas_limit:(VarUInteger 7) gas_credit:(Maybe (VarUInteger 3))
  mode:int8 exit_code:int32 exit_arg:(Maybe int32)
  vm_steps:uint32
  vm_init_state_hash:bits256 vm_final_state_hash:bits256 ]
  = TrComputePhase;
cskip_no_state$00 = ComputeSkipReason;
cskip_bad_state$01 = ComputeSkipReason;
cskip_no_gas$10 = ComputeSkipReason;
cskip_suspended$110 = ComputeSkipReason;

tr_phase_action$_ success:Bool valid:Bool no_funds:Bool
  status_change:AccStatusChange
  total_fwd_fees:(Maybe Grams) total_action_fees:(Maybe Grams)
  result_code:int32 result_arg:(Maybe int32) tot_actions:uint16
  spec_actions:uint16 skipped_actions:uint16 msgs_created:uint16 
  action_list_hash:bits256 tot_msg_size:StorageUsed
  = TrActionPhase;

tr_phase_bounce_negfunds$00 = TrBouncePhase;
tr_phase_bounce_nofunds$01 msg_size:StorageUsed
  req_fwd_fees:Grams = TrBouncePhase;
tr_phase_bounce_ok$1 msg_size:StorageUsed
  msg_fees:Grams fwd_fees:Grams = TrBouncePhase;
//
trans_ord$0000 credit_first:Bool
  storage_ph:(Maybe TrStoragePhase)
  credit_ph:(Maybe TrCreditPhase)
  compute_ph:TrComputePhase action:(Maybe ^TrActionPhase)
  aborted:Bool bounce:(Maybe TrBouncePhase)
  destroyed:Bool
  = TransactionDescr;

trans_storage$0001 storage_ph:TrStoragePhase
  = TransactionDescr;

trans_tick_tock$001 is_tock:Bool storage_ph:TrStoragePhase
  compute_ph:TrComputePhase action:(Maybe ^TrActionPhase)
  aborted:Bool destroyed:Bool = TransactionDescr;
//
split_merge_info$_ cur_shard_pfx_len:(## 6)
  acc_split_depth:(## 6) this_addr:bits256 sibling_addr:bits256
  = SplitMergeInfo;
trans_split_prepare$0100 split_info:SplitMergeInfo
  storage_ph:(Maybe TrStoragePhase)
  compute_ph:TrComputePhase action:(Maybe ^TrActionPhase)
  aborted:Bool destroyed:Bool
  = TransactionDescr;
trans_split_install$0101 split_info:SplitMergeInfo
  prepare_transaction:^Transaction
  installed:Bool = TransactionDescr;

trans_merge_prepare$0110 split_info:SplitMergeInfo
  storage_ph:TrStoragePhase aborted:Bool
  = TransactionDescr;
trans_merge_install$0111 split_info:SplitMergeInfo
  prepare_transaction:^Transaction
  storage_ph:(Maybe TrStoragePhase)
  credit_ph:(Maybe TrCreditPhase)
  compute_ph:TrComputePhase action:(Maybe ^TrActionPhase)
  aborted:Bool destroyed:Bool
  = TransactionDescr;

smc_info#076ef1ea actions:uint16 msgs_sent:uint16
  unixtime:uint32 block_lt:uint64 trans_lt:uint64 
  rand_seed:bits256 balance_remaining:CurrencyCollection
  myself:MsgAddressInt global_config:(Maybe Cell) = SmartContractInfo;
//
//
out_list_empty$_ = OutList 0;
out_list$_ {n:#} prev:^(OutList n) action:OutAction
  = OutList (n + 1);
action_send_msg#0ec3c86d mode:(## 8) 
  out_msg:^(MessageRelaxed Any) = OutAction;
action_set_code#ad4de08e new_code:^Cell = OutAction;
action_reserve_currency#36e6b809 mode:(## 8)
  currency:CurrencyCollection = OutAction;
libref_hash$0 lib_hash:bits256 = LibRef;
libref_ref$1 library:^Cell = LibRef;
action_change_library#26fa1dd4 mode:(## 7)
  libref:LibRef = OutAction;

out_list_node$_ prev:^Cell action:OutAction = OutListNode;
//
//
shard_ident$00 shard_pfx_bits:(#<= 60) 
  workchain_id:int32 shard_prefix:uint64 = ShardIdent;

ext_blk_ref$_ end_lt:uint64
  seq_no:uint32 root_hash:bits256 file_hash:bits256 
  = ExtBlkRef;

block_id_ext$_ shard_id:ShardIdent seq_no:uint32
  root_hash:bits256 file_hash:bits256 = BlockIdExt;

master_info$_ master:ExtBlkRef = BlkMasterInfo;

shard_state#9023afe2 global_id:int32
  shard_id:ShardIdent 
  seq_no:uint32 vert_seq_no:#
  gen_utime:uint32 gen_lt:uint64
  min_ref_mc_seqno:uint32
  out_msg_queue_info:^OutMsgQueueInfo
  before_split:(## 1)
  accounts:^ShardAccounts
  ^[ overload_history:uint64 underload_history:uint64
  total_balance:CurrencyCollection
  total_validator_fees:CurrencyCollection
  libraries:(HashmapE 256 LibDescr)
  master_ref:(Maybe BlkMasterInfo) ]
  custom:(Maybe ^McStateExtra)
  = ShardStateUnsplit;
  
_ ShardStateUnsplit = ShardState;
split_state#5f327da5 left:^ShardStateUnsplit right:^ShardStateUnsplit = ShardState;

shared_lib_descr$00 lib:^Cell publishers:(Hashmap 256 True)
  = LibDescr;

block_info#9bc7a987 version:uint32 
  not_master:(## 1) 
  after_merge:(## 1) before_split:(## 1) 
  after_split:(## 1) 
  want_split:Bool want_merge:Bool
  key_block:Bool vert_seqno_incr:(## 1)
  flags:(## 8) { flags <= 1 }
  seq_no:# vert_seq_no:# { vert_seq_no >= vert_seqno_incr } 
  { prev_seq_no:# } { ~prev_seq_no + 1 = seq_no } 
  shard:ShardIdent gen_utime:uint32
  start_lt:uint64 end_lt:uint64
  gen_validator_list_hash_short:uint32
  gen_catchain_seqno:uint32
  min_ref_mc_seqno:uint32
  prev_key_block_seqno:uint32
  gen_software:flags . 0?GlobalVersion
  master_ref:not_master?^BlkMasterInfo 
  prev_ref:^(BlkPrevInfo after_merge)
  prev_vert_ref:vert_seqno_incr?^(BlkPrevInfo 0)
  = BlockInfo;

prev_blk_info$_ prev:ExtBlkRef = BlkPrevInfo 0;
prev_blks_info$_ prev1:^ExtBlkRef prev2:^ExtBlkRef = BlkPrevInfo 1;

block#11ef55aa global_id:int32
  info:^BlockInfo value_flow:^ValueFlow
  state_update:^(MERKLE_UPDATE ShardState) 
  extra:^BlockExtra = Block;

block_extra in_msg_descr:^InMsgDescr
  out_msg_descr:^OutMsgDescr
  account_blocks:^ShardAccountBlocks
  rand_seed:bits256
  created_by:bits256
  custom:(Maybe ^McBlockExtra) = BlockExtra;
//
value_flow#b8e48dfb ^[ from_prev_blk:CurrencyCollection 
  to_next_blk:CurrencyCollection
  imported:CurrencyCollection
  exported:CurrencyCollection ]
  fees_collected:CurrencyCollection
  ^[
  fees_imported:CurrencyCollection
  recovered:CurrencyCollection
  created:CurrencyCollection
  minted:CurrencyCollection
  ] = ValueFlow;

value_flow_v2#3ebf98b7 ^[ from_prev_blk:CurrencyCollection
  to_next_blk:CurrencyCollection
  imported:CurrencyCollection
  exported:CurrencyCollection ]
  fees_collected:CurrencyCollection
  burned:CurrencyCollection
  ^[
  fees_imported:CurrencyCollection
  recovered:CurrencyCollection
  created:CurrencyCollection
  minted:CurrencyCollection
  ] = ValueFlow;

//
//
bt_leaf$0 {X:Type} leaf:X = BinTree X;
bt_fork$1 {X:Type} left:^(BinTree X) right:^(BinTree X) 
          = BinTree X;

fsm_none$0 = FutureSplitMerge;
fsm_split$10 split_utime:uint32 interval:uint32 = FutureSplitMerge;
fsm_merge$11 merge_utime:uint32 interval:uint32 = FutureSplitMerge;

shard_descr#b seq_no:uint32 reg_mc_seqno:uint32
  start_lt:uint64 end_lt:uint64
  root_hash:bits256 file_hash:bits256 
  before_split:Bool before_merge:Bool
  want_split:Bool want_merge:Bool
  nx_cc_updated:Bool flags:(## 3) { flags = 0 }
  next_catchain_seqno:uint32 next_validator_shard:uint64
  min_ref_mc_seqno:uint32 gen_utime:uint32
  split_merge_at:FutureSplitMerge
  fees_collected:CurrencyCollection
  funds_created:CurrencyCollection = ShardDescr;

shard_descr_new#a seq_no:uint32 reg_mc_seqno:uint32
  start_lt:uint64 end_lt:uint64
  root_hash:bits256 file_hash:bits256 
  before_split:Bool before_merge:Bool
  want_split:Bool want_merge:Bool
  nx_cc_updated:Bool flags:(## 3) { flags = 0 }
  next_catchain_seqno:uint32 next_validator_shard:uint64
  min_ref_mc_seqno:uint32 gen_utime:uint32
  split_merge_at:FutureSplitMerge
  ^[ fees_collected:CurrencyCollection
     funds_created:CurrencyCollection ] = ShardDescr;

_ (HashmapE 32 ^(BinTree ShardDescr)) = ShardHashes;

bta_leaf$0 {X:Type} {Y:Type} extra:Y leaf:X = BinTreeAug X Y;
bta_fork$1 {X:Type} {Y:Type} left:^(BinTreeAug X Y) 
           right:^(BinTreeAug X Y) extra:Y = BinTreeAug X Y;

_ fees:CurrencyCollection create:CurrencyCollection = ShardFeeCreated;
_ (HashmapAugE 96 ShardFeeCreated ShardFeeCreated) = ShardFees;

_ config_addr:bits256 config:^(Hashmap 32 ^Cell) 
  = ConfigParams;

validator_info$_
  validator_list_hash_short:uint32 
  catchain_seqno:uint32
  nx_cc_updated:Bool
= ValidatorInfo;

validator_base_info$_
  validator_list_hash_short:uint32 
  catchain_seqno:uint32
= ValidatorBaseInfo;

_ key:Bool max_end_lt:uint64 = KeyMaxLt;
_ key:Bool blk_ref:ExtBlkRef = KeyExtBlkRef;

_ (HashmapAugE 32 KeyExtBlkRef KeyMaxLt) = OldMcBlocksInfo;


counters#_ last_updated:uint32 total:uint64 cnt2048:uint64 cnt65536:uint64 = Counters; 
creator_info#4 mc_blocks:Counters shard_blocks:Counters = CreatorStats; 
block_create_stats#17 counters:(HashmapE 256 CreatorStats) = BlockCreateStats;
block_create_stats_ext#34 counters:(HashmapAugE 256 CreatorStats uint32) = BlockCreateStats;

masterchain_state_extra#cc26
  shard_hashes:ShardHashes
  config:ConfigParams
  ^[ flags:(## 16) { flags <= 1 }
     validator_info:ValidatorInfo
     prev_blocks:OldMcBlocksInfo
     after_key_block:Bool
     last_key_block:(Maybe ExtBlkRef)
     block_create_stats:(flags . 0)?BlockCreateStats ]
  global_balance:CurrencyCollection
= McStateExtra;

ed25519_pubkey#8e81278a pubkey:bits256 = SigPubKey;  // 288 bits
ed25519_signature#5 R:bits256 s:bits256 = CryptoSignatureSimple;  // 516 bits
_ CryptoSignatureSimple = CryptoSignature;
sig_pair$_ node_id_short:bits256 sign:CryptoSignature = CryptoSignaturePair;  // 256+x ~ 772 bits

certificate#4 temp_key:SigPubKey valid_since:uint32 valid_until:uint32 = Certificate;  // 356 bits
certificate_env#a419b7d certificate:Certificate = CertificateEnv;  // 384 bits
signed_certificate$_ certificate:Certificate certificate_signature:CryptoSignature
  = SignedCertificate;  // 356+516 = 872 bits
// certificate_signature is the signature of CertificateEnv (with embedded certificate) with persistent key
chained_signature#f signed_cert:^SignedCertificate temp_key_signature:CryptoSignatureSimple
  = CryptoSignature;   // 4+(356+516)+516 = 520 bits+ref (1392 bits total)
// temp_key_signature is the signature of whatever was originally intended to be signed with temp_key from certificate

masterchain_block_extra#cca5
  key_block:(## 1)
  shard_hashes:ShardHashes
  shard_fees:ShardFees
  ^[ prev_blk_signatures:(HashmapE 16 CryptoSignaturePair)
     recover_create_msg:(Maybe ^InMsg)
     mint_msg:(Maybe ^InMsg) ]
  config:key_block?ConfigParams
= McBlockExtra;

//
//  CONFIGURATION PARAMETERS
//

validator#53 public_key:SigPubKey weight:uint64 = ValidatorDescr;
validator_addr#73 public_key:SigPubKey weight:uint64 adnl_addr:bits256 = ValidatorDescr;
validators#11 utime_since:uint32 utime_until:uint32 
  total:(## 16) main:(## 16) { main <= total } { main >= 1 } 
  list:(Hashmap 16 ValidatorDescr) = ValidatorSet;
validators_ext#12 utime_since:uint32 utime_until:uint32 
  total:(## 16) main:(## 16) { main <= total } { main >= 1 } 
  total_weight:uint64 list:(HashmapE 16 ValidatorDescr) = ValidatorSet;

_ config_addr:bits256 = ConfigParam 0;
_ elector_addr:bits256 = ConfigParam 1;
_ minter_addr:bits256 = ConfigParam 2;  // ConfigParam 0 is used if absent
_ fee_collector_addr:bits256 = ConfigParam 3;  // ConfigParam 1 is used if absent
_ dns_root_addr:bits256 = ConfigParam 4;  // root TON DNS resolver

burning_config#01
  blackhole_addr:(Maybe bits256)
  fee_burn_num:# fee_burn_denom:# { fee_burn_num <= fee_burn_denom } { fee_burn_denom >= 1 } = BurningConfig;
_ BurningConfig = ConfigParam 5;

_ mint_new_price:Grams mint_add_price:Grams = ConfigParam 6;
_ to_mint:ExtraCurrencyCollection = ConfigParam 7;

capabilities#c4 version:uint32 capabilities:uint64 = GlobalVersion;
_ GlobalVersion = ConfigParam 8;  // all zero if absent
_ mandatory_params:(Hashmap 32 True) = ConfigParam 9;
_ critical_params:(Hashmap 32 True) = ConfigParam 10;

cfg_vote_cfg#36 min_tot_rounds:uint8 max_tot_rounds:uint8 min_wins:uint8 max_losses:uint8 min_store_sec:uint32 max_store_sec:uint32 bit_price:uint32 cell_price:uint32 = ConfigProposalSetup;
cfg_vote_setup#91 normal_params:^ConfigProposalSetup critical_params:^ConfigProposalSetup = ConfigVotingSetup;
_ ConfigVotingSetup = ConfigParam 11;

cfg_proposal#f3 param_id:int32 param_value:(Maybe ^Cell) if_hash_equal:(Maybe uint256) 
  = ConfigProposal;
cfg_proposal_status#ce expires:uint32 proposal:^ConfigProposal is_critical:Bool
  voters:(HashmapE 16 True) remaining_weight:int64 validator_set_id:uint256 
  rounds_remaining:uint8 wins:uint8 losses:uint8 = ConfigProposalStatus;

wfmt_basic#1 vm_version:int32 vm_mode:uint64 = WorkchainFormat 1;
wfmt_ext#0 min_addr_len:(## 12) max_addr_len:(## 12) addr_len_step:(## 12)
  { min_addr_len >= 64 } { min_addr_len <= max_addr_len } 
  { max_addr_len <= 1023 } { addr_len_step <= 1023 }
  workchain_type_id:(## 32) { workchain_type_id >= 1 }
  = WorkchainFormat 0;

wc_split_merge_timings#0
  split_merge_delay:uint32 split_merge_interval:uint32
  min_split_merge_interval:uint32 max_split_merge_delay:uint32
  = WcSplitMergeTimings;

//workchain#a5 enabled_since:uint32 min_split:(## 8) max_split:(## 8)
//  { min_split <= max_split } { max_split <= 60 }

workchain#a6 enabled_since:uint32 monitor_min_split:(## 8)
  min_split:(## 8) max_split:(## 8) { monitor_min_split <= min_split }
  basic:(## 1) active:Bool accept_msgs:Bool flags:(## 13) { flags = 0 }
  zerostate_root_hash:bits256 zerostate_file_hash:bits256
  version:uint32 format:(WorkchainFormat basic)
  = WorkchainDescr;

workchain_v2#a7 enabled_since:uint32 monitor_min_split:(## 8)
  min_split:(## 8) max_split:(## 8) { monitor_min_split <= min_split }
  basic:(## 1) active:Bool accept_msgs:Bool flags:(## 13) { flags = 0 }
  zerostate_root_hash:bits256 zerostate_file_hash:bits256
  version:uint32 format:(WorkchainFormat basic)
  split_merge_timings:WcSplitMergeTimings
  persistent_state_split_depth:(## 8) { persistent_state_split_depth <= 63 }
  = WorkchainDescr;

_ workchains:(HashmapE 32 WorkchainDescr) = ConfigParam 12;

complaint_prices#1a deposit:Grams bit_price:Grams cell_price:Grams = ComplaintPricing; 
_ ComplaintPricing = ConfigParam 13;

block_grams_created#6b masterchain_block_fee:Grams basechain_block_fee:Grams
  = BlockCreateFees;
_ BlockCreateFees = ConfigParam 14;

_ validators_elected_for:uint32 elections_start_before:uint32 
  elections_end_before:uint32 stake_held_for:uint32
  = ConfigParam 15;
  
_ max_validators:(## 16) max_main_validators:(## 16) min_validators:(## 16) 
  { max_validators >= max_main_validators } 
  { max_main_validators >= min_validators } 
  { min_validators >= 1 }
  = ConfigParam 16;

_ min_stake:Grams max_stake:Grams min_total_stake:Grams max_stake_factor:uint32 = ConfigParam 17;

_#cc utime_since:uint32 bit_price_ps:uint64 cell_price_ps:uint64 
  mc_bit_price_ps:uint64 mc_cell_price_ps:uint64 = StoragePrices;
_ (Hashmap 32 StoragePrices) = ConfigParam 18;

_ global_id:int32 = ConfigParam 19;

gas_prices#dd gas_price:uint64 gas_limit:uint64 gas_credit:uint64 
  block_gas_limit:uint64 freeze_due_limit:uint64 delete_due_limit:uint64 
  = GasLimitsPrices;

gas_prices_ext#de gas_price:uint64 gas_limit:uint64 special_gas_limit:uint64 gas_credit:uint64 
  block_gas_limit:uint64 freeze_due_limit:uint64 delete_due_limit:uint64 
  = GasLimitsPrices;

gas_flat_pfx#d1 flat_gas_limit:uint64 flat_gas_price:uint64 other:GasLimitsPrices
  = GasLimitsPrices;

config_mc_gas_prices#_ GasLimitsPrices = ConfigParam 20;
config_gas_prices#_ GasLimitsPrices = ConfigParam 21;

param_limits#c3 underload:# soft_limit:# { underload <= soft_limit }
  hard_limit:# { soft_limit <= hard_limit } = ParamLimits;
block_limits#5d bytes:ParamLimits gas:ParamLimits lt_delta:ParamLimits
  = BlockLimits;
  
config_mc_block_limits#_ BlockLimits = ConfigParam 22;
config_block_limits#_ BlockLimits = ConfigParam 23;

// msg_fwd_fees = (lump_price + ceil((bit_price * msg.bits + cell_price * msg.cells)/2^16)) nanograms
// ihr_fwd_fees = ceil((msg_fwd_fees * ihr_price_factor)/2^16) nanograms
// bits in the root cell of a message are not included in msg.bits (lump_price pays for them)
msg_forward_prices#ea lump_price:uint64 bit_price:uint64 cell_price:uint64
  ihr_price_factor:uint32 first_frac:uint16 next_frac:uint16 = MsgForwardPrices;

// used for messages to/from masterchain
config_mc_fwd_prices#_ MsgForwardPrices = ConfigParam 24;
// used for all other messages
config_fwd_prices#_ MsgForwardPrices = ConfigParam 25;

catchain_config#c1 mc_catchain_lifetime:uint32 shard_catchain_lifetime:uint32 
  shard_validators_lifetime:uint32 shard_validators_num:uint32 = CatchainConfig;

catchain_config_new#c2 flags:(## 7) { flags = 0 } shuffle_mc_validators:Bool
  mc_catchain_lifetime:uint32 shard_catchain_lifetime:uint32
  shard_validators_lifetime:uint32 shard_validators_num:uint32 = CatchainConfig;

consensus_config#d6 round_candidates:# { round_candidates >= 1 }
  next_candidate_delay_ms:uint32 consensus_timeout_ms:uint32
  fast_attempts:uint32 attempt_duration:uint32 catchain_max_deps:uint32
  max_block_bytes:uint32 max_collated_bytes:uint32 = ConsensusConfig;

consensus_config_new#d7 flags:(## 7) { flags = 0 } new_catchain_ids:Bool
  round_candidates:(## 8) { round_candidates >= 1 }
  next_candidate_delay_ms:uint32 consensus_timeout_ms:uint32
  fast_attempts:uint32 attempt_duration:uint32 catchain_max_deps:uint32
  max_block_bytes:uint32 max_collated_bytes:uint32 = ConsensusConfig;

consensus_config_v3#d8 flags:(## 7) { flags = 0 } new_catchain_ids:Bool
  round_candidates:(## 8) { round_candidates >= 1 }
  next_candidate_delay_ms:uint32 consensus_timeout_ms:uint32
  fast_attempts:uint32 attempt_duration:uint32 catchain_max_deps:uint32
  max_block_bytes:uint32 max_collated_bytes:uint32 
  proto_version:uint16 = ConsensusConfig;

consensus_config_v4#d9 flags:(## 7) { flags = 0 } new_catchain_ids:Bool
  round_candidates:(## 8) { round_candidates >= 1 }
  next_candidate_delay_ms:uint32 consensus_timeout_ms:uint32
  fast_attempts:uint32 attempt_duration:uint32 catchain_max_deps:uint32
  max_block_bytes:uint32 max_collated_bytes:uint32
  proto_version:uint16 catchain_max_blocks_coeff:uint32 = ConsensusConfig;

_ CatchainConfig = ConfigParam 28;
_ ConsensusConfig = ConfigParam 29;

_ fundamental_smc_addr:(HashmapE 256 True) = ConfigParam 31;
_ prev_validators:ValidatorSet = ConfigParam 32;
_ prev_temp_validators:ValidatorSet = ConfigParam 33;
_ cur_validators:ValidatorSet = ConfigParam 34;
_ cur_temp_validators:ValidatorSet = ConfigParam 35;
_ next_validators:ValidatorSet = ConfigParam 36;
_ next_temp_validators:ValidatorSet = ConfigParam 37;

validator_temp_key#3 adnl_addr:bits256 temp_public_key:SigPubKey seqno:# valid_until:uint32 = ValidatorTempKey;
signed_temp_key#4 key:^ValidatorTempKey signature:CryptoSignature = ValidatorSignedTempKey;
_ (HashmapE 256 ValidatorSignedTempKey) = ConfigParam 39;

misbehaviour_punishment_config_v1#01 
  default_flat_fine:Grams default_proportional_fine:uint32
  severity_flat_mult:uint16 severity_proportional_mult:uint16
  unpunishable_interval:uint16
  long_interval:uint16 long_flat_mult:uint16 long_proportional_mult:uint16
  medium_interval:uint16 medium_flat_mult:uint16 medium_proportional_mult:uint16
   = MisbehaviourPunishmentConfig;
_ MisbehaviourPunishmentConfig = ConfigParam 40;

size_limits_config#01 max_msg_bits:uint32 max_msg_cells:uint32 max_library_cells:uint32 max_vm_data_depth:uint16
  max_ext_msg_size:uint32 max_ext_msg_depth:uint16 = SizeLimitsConfig;
size_limits_config_v2#02 max_msg_bits:uint32 max_msg_cells:uint32 max_library_cells:uint32 max_vm_data_depth:uint16
  max_ext_msg_size:uint32 max_ext_msg_depth:uint16 max_acc_state_cells:uint32 max_acc_state_bits:uint32
  max_acc_public_libraries:uint32 defer_out_queue_size_limit:uint32 max_msg_extra_currencies:uint32
  max_acc_fixed_prefix_length:uint8 = SizeLimitsConfig;
_ SizeLimitsConfig = ConfigParam 43;

// key is [ wc:int32 addr:uint256 ]
suspended_address_list#00 addresses:(HashmapE 288 Unit) suspended_until:uint32 = SuspendedAddressList;
_ SuspendedAddressList = ConfigParam 44;

precompiled_smc#b0 gas_usage:uint64 = PrecompiledSmc;
precompiled_contracts_config#c0 list:(HashmapE 256 PrecompiledSmc) = PrecompiledContractsConfig;
_ PrecompiledContractsConfig = ConfigParam 45;

oracle_bridge_params#_ bridge_address:bits256 oracle_mutlisig_address:bits256 oracles:(HashmapE 256 uint256) external_chain_address:bits256 = OracleBridgeParams;
_ OracleBridgeParams = ConfigParam 71; // Ethereum bridge
_ OracleBridgeParams = ConfigParam 72; // Binance Smart Chain bridge
_ OracleBridgeParams = ConfigParam 73; // Polygon bridge

// Note that chains in which bridge, minter and jetton-wallet operate are fixated
jetton_bridge_prices#_ bridge_burn_fee:Coins bridge_mint_fee:Coins
                       wallet_min_tons_for_storage:Coins
                       wallet_gas_consumption:Coins
                       minter_min_tons_for_storage:Coins
                       discover_gas_consumption:Coins = JettonBridgePrices;

jetton_bridge_params_v0#00 bridge_address:bits256 oracles_address:bits256 oracles:(HashmapE 256 uint256) state_flags:uint8 burn_bridge_fee:Coins = JettonBridgeParams;
jetton_bridge_params_v1#01 bridge_address:bits256 oracles_address:bits256 oracles:(HashmapE 256 uint256) state_flags:uint8 prices:^JettonBridgePrices external_chain_address:bits256 = JettonBridgeParams;

_ JettonBridgeParams = ConfigParam 79; // ETH->TON token bridge
_ JettonBridgeParams = ConfigParam 81; // BNB->TON token bridge
_ JettonBridgeParams = ConfigParam 82; // Polygon->TON token bridge


//
//  PROOFS
//
block_signatures_pure#_ sig_count:uint32 sig_weight:uint64
  signatures:(HashmapE 16 CryptoSignaturePair) = BlockSignaturesPure;
block_signatures#11 validator_info:ValidatorBaseInfo pure_signatures:BlockSignaturesPure = BlockSignatures;
block_proof#c3 proof_for:BlockIdExt root:^Cell signatures:(Maybe ^BlockSignatures) = BlockProof;

chain_empty$_ = ProofChain 0;
chain_link$_ {n:#} root:^Cell prev:n?^(ProofChain n) = ProofChain (n + 1);
top_block_descr#d5 proof_for:BlockIdExt signatures:(Maybe ^BlockSignatures) 
  len:(## 8) { len >= 1 } { len <= 8 } chain:(ProofChain len) = TopBlockDescr;

//
//  COLLATED DATA
//
top_block_descr_set#4ac789f3 collection:(HashmapE 96 ^TopBlockDescr) = TopBlockDescrSet;

//
//  VALIDATOR MISBEHAVIOR COMPLAINTS
//
prod_info#34 utime:uint32 mc_blk_ref:ExtBlkRef state_proof:^(MERKLE_PROOF Block)
  prod_proof:^(MERKLE_PROOF ShardState) = ProducerInfo;
no_blk_gen from_utime:uint32 prod_info:^ProducerInfo = ComplaintDescr;
no_blk_gen_diff prod_info_old:^ProducerInfo prod_info_new:^ProducerInfo = ComplaintDescr;
validator_complaint#bc validator_pubkey:bits256 description:^ComplaintDescr created_at:uint32 severity:uint8 reward_addr:uint256 paid:Grams suggested_fine:Grams suggested_fine_part:uint32 = ValidatorComplaint;
complaint_status#2d complaint:^ValidatorComplaint voters:(HashmapE 16 True) vset_id:uint256 weight_remaining:int64 = ValidatorComplaintStatus;

//
//  TVM REFLECTION
//
vm_stk_null#00 = VmStackValue;
vm_stk_tinyint#01 value:int64 = VmStackValue;
vm_stk_int#0201_ value:int257 = VmStackValue;
vm_stk_nan#02ff = VmStackValue;
vm_stk_cell#03 cell:^Cell = VmStackValue;
_ cell:^Cell st_bits:(## 10) end_bits:(## 10) { st_bits <= end_bits }
  st_ref:(#<= 4) end_ref:(#<= 4) { st_ref <= end_ref } = VmCellSlice;
vm_stk_slice#04 _:VmCellSlice = VmStackValue;
vm_stk_builder#05 cell:^Cell = VmStackValue;
vm_stk_cont#06 cont:VmCont = VmStackValue;
vm_tupref_nil$_ = VmTupleRef 0;
vm_tupref_single$_ entry:^VmStackValue = VmTupleRef 1;
vm_tupref_any$_ {n:#} ref:^(VmTuple (n + 2)) = VmTupleRef (n + 2);
vm_tuple_nil$_ = VmTuple 0;
vm_tuple_tcons$_ {n:#} head:(VmTupleRef n) tail:^VmStackValue = VmTuple (n + 1);
vm_stk_tuple#07 len:(## 16) data:(VmTuple len) = VmStackValue;

vm_stack#_ depth:(## 24) stack:(VmStackList depth) = VmStack;
vm_stk_cons#_ {n:#} rest:^(VmStackList n) tos:VmStackValue = VmStackList (n + 1);
vm_stk_nil#_ = VmStackList 0;

_ cregs:(HashmapE 4 VmStackValue) = VmSaveList;
gas_limits#_ remaining:int64 _:^[ max_limit:int64 cur_limit:int64 credit:int64 ]
  = VmGasLimits;
_ libraries:(HashmapE 256 ^Cell) = VmLibraries;

vm_ctl_data$_ nargs:(Maybe uint13) stack:(Maybe VmStack) save:VmSaveList
cp:(Maybe int16) = VmControlData;
vmc_std$00 cdata:VmControlData code:VmCellSlice = VmCont;
vmc_envelope$01 cdata:VmControlData next:^VmCont = VmCont;
vmc_quit$1000 exit_code:int32 = VmCont;
vmc_quit_exc$1001 = VmCont;
vmc_repeat$10100 count:uint63 body:^VmCont after:^VmCont = VmCont; 
vmc_until$110000 body:^VmCont after:^VmCont = VmCont;
vmc_again$110001 body:^VmCont = VmCont;
vmc_while_cond$110010 cond:^VmCont body:^VmCont
after:^VmCont = VmCont;
vmc_while_body$110011 cond:^VmCont body:^VmCont
after:^VmCont = VmCont;
vmc_pushint$1111 value:int32 next:^VmCont = VmCont;

//
//  DNS RECORDS
//
_ (HashmapE 256 ^DNSRecord) = DNS_RecordSet;

chunk_ref$_ {n:#} ref:^(TextChunks (n + 1)) = TextChunkRef (n + 1);
chunk_ref_empty$_ = TextChunkRef 0;
text_chunk$_ {n:#} len:(## 8) data:(bits (len * 8)) next:(TextChunkRef n) = TextChunks (n + 1);
text_chunk_empty$_ = TextChunks 0;
text$_ chunks:(## 8) rest:(TextChunks chunks) = Text;
dns_text#1eda _:Text = DNSRecord;

dns_next_resolver#ba93 resolver:MsgAddressInt = DNSRecord;  // usually in record #-1

dns_adnl_address#ad01 adnl_addr:bits256 flags:(## 8) { flags <= 1 }
  proto_list:flags . 0?ProtoList = DNSRecord;  // often in record #2
proto_list_nil$0 = ProtoList;
proto_list_next$1 head:Protocol tail:ProtoList = ProtoList;
proto_http#4854 = Protocol;

dns_smc_address#9fd3 smc_addr:MsgAddressInt flags:(## 8) { flags <= 1 }
  cap_list:flags . 0?SmcCapList = DNSRecord;   // often in record #1
cap_list_nil$0 = SmcCapList;
cap_list_next$1 head:SmcCapability tail:SmcCapList = SmcCapList;
cap_method_seqno#5371 = SmcCapability;
cap_method_pubkey#71f4 = SmcCapability;
cap_is_wallet#2177 = SmcCapability;
cap_name#ff name:Text = SmcCapability;

dns_storage_address#7473 bag_id:bits256 = DNSRecord;

//
// PAYMENT CHANNELS
//

chan_config$_  init_timeout:uint32 close_timeout:uint32 a_key:bits256 b_key:bits256 
  a_addr:^MsgAddressInt b_addr:^MsgAddressInt channel_id:uint64 min_A_extra:Grams = ChanConfig;

chan_state_init$000  signed_A:Bool signed_B:Bool min_A:Grams min_B:Grams expire_at:uint32 A:Grams B:Grams = ChanState;
chan_state_close$001 signed_A:Bool signed_B:Bool promise_A:Grams promise_B:Grams expire_at:uint32 A:Grams B:Grams = ChanState;
chan_state_payout$010 A:Grams B:Grams = ChanState;

chan_promise$_ channel_id:uint64 promise_A:Grams promise_B:Grams = ChanPromise;
chan_signed_promise#_ sig:(Maybe ^bits512) promise:ChanPromise = ChanSignedPromise;

chan_msg_init#27317822 inc_A:Grams inc_B:Grams min_A:Grams min_B:Grams channel_id:uint64 = ChanMsg;
chan_msg_close#f28ae183 extra_A:Grams extra_B:Grams promise:ChanSignedPromise  = ChanMsg;
chan_msg_timeout#43278a28 = ChanMsg;
chan_msg_payout#37fe7810 = ChanMsg;

chan_signed_msg$_ sig_A:(Maybe ^bits512) sig_B:(Maybe ^bits512) msg:ChanMsg = ChanSignedMsg;

chan_op_cmd#912838d1 msg:ChanSignedMsg = ChanOp;


chan_data$_ config:^ChanConfig state:^ChanState = ChanData;
`,Da="message#_ len:(## 7) { len <= 127 } text:(bits (len * 8)) = Message;",Ea="te6cckEBAQEAFwAAKSioyuboQNrK5ubCzspA0txAxsrY2Whv0fw=";class ft{bocFormat=1;boc="";data="{}";runtime=ct(mt.from(""));constructor(e,r,u){this.updateSchema(e),r?this.updateBoc(r):u&&this.updateData(u)}get state(){return{bocFormat:this.bocFormat,schema:this.runtime.schema,boc:this.boc,data:this.data}}static get default(){return new ft(Da,Ea)}static from(e){const r=new ft(e);return r.updateSchema(e),r}updateSchema(e,r=0){if(!e||e.trim()==="")return{success:!1,error:new Error("Schema cannot be empty")};if(e=e.replace("block.tlb",ha),this.runtime.schema===e)return{success:!0,value:this.state};const u=this.runtime.changeSchema(e);return u.success?(this.runtime=u.value,r===0?this.updateBoc(this.boc):this.updateData(this.data)):u}updateBoc(e){if(!e||e.trim()==="")return this.boc="",this.data="{}",{success:!0,value:this.state};this.boc=e;try{const r=this.runtime.parseCell(this.boc);this.data=JSON.stringify(r,fa,2)}catch(r){return{success:!1,error:new Error(`Parse ${r instanceof Error?r.message:"unknown error"}`)}}return{success:!0,value:this.state}}updateData(e){this.data=e.trim();try{const r=JSON.parse(this.data),u=this.runtime.encodeCell(r).toBoc();switch(this.bocFormat){case 0:this.boc=u.toString("hex");break;case 1:default:this.boc=u.toString("base64")}}catch(r){return{success:!1,error:new Error(`Encode ${r instanceof Error?r.message:"unknown error"}`)}}return{success:!0,value:this.state}}}class ga{processor;schemaField=null;bocField=null;dataField=null;schemaErrorSpan=null;bocErrorSpan=null;dataErrorSpan=null;isUpdating=!1;constructor(){this.processor=ft.default,this.initializeUI(),this.setupEventListeners(),this.updateFieldsFromCore()}initializeUI(){this.schemaField=document.querySelector('textarea[name="schema"]'),this.bocField=document.querySelector('textarea[name="boc"]'),this.dataField=document.querySelector('textarea[name="data"]'),this.schemaErrorSpan=document.getElementById("schema-error"),this.bocErrorSpan=document.getElementById("boc-error"),this.dataErrorSpan=document.getElementById("data-error")}setupEventListeners(){this.schemaField&&this.schemaField.addEventListener("input",e=>{const r=e.target;this.handleSchemaChange(r.value)}),this.bocField&&this.bocField.addEventListener("input",e=>{const r=e.target;this.handleBocChange(r.value)}),this.dataField&&this.dataField.addEventListener("input",e=>{const r=e.target;this.handleDataChange(r.value)})}handleSchemaChange(e){if(this.isUpdating)return;const r=this.processor.updateSchema(e);this.handleResult(r,"schema")}handleBocChange(e){this.isUpdating||this.handleResult(this.processor.updateBoc(e),"boc")}handleDataChange(e){if(this.isUpdating)return;const r=this.processor.updateData(e);this.handleResult(r,"data")}handleResult(e,r){e.success?(this.hideFieldError(r),this.updateFieldsFromData(e.value)):this.showFieldError(e.error.message,r)}updateFieldsFromCore(){this.updateFieldsFromData(this.processor.state)}updateFieldsFromData(e){this.isUpdating=!0;try{this.schemaField&&this.schemaField.value!==e.schema&&(this.schemaField.value=e.schema),this.bocField&&this.bocField.value!==e.boc&&(this.bocField.value=e.boc),this.dataField&&this.dataField.value!==e.data&&(this.dataField.value=e.data)}finally{this.isUpdating=!1}}showFieldError(e,r){let u=null,n=null;switch(r){case"schema":u=this.schemaErrorSpan,n=this.schemaField;break;case"boc":u=this.bocErrorSpan,n=this.bocField;break;case"data":u=this.dataErrorSpan,n=this.dataField;break}u&&n&&(u.textContent=e,u.style.display="inline",n.classList.add("field-error-border"))}hideFieldError(e){let r=null,u=null;switch(e){case"schema":r=this.schemaErrorSpan,u=this.schemaField;break;case"boc":r=this.bocErrorSpan,u=this.bocField;break;case"data":r=this.dataErrorSpan,u=this.dataField;break}r&&u&&(r.style.display="none",u.classList.remove("field-error-border"))}}new ga;
